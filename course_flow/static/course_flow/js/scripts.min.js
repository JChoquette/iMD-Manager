var root = (function(t) {
  "use strict";
  function e(t, e, n) {
    return (
      e in t
        ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
          })
        : (t[e] = n),
      t
    );
  }
  var n =
    "undefined" != typeof globalThis
      ? globalThis
      : "undefined" != typeof window
      ? window
      : "undefined" != typeof global
      ? global
      : "undefined" != typeof self
      ? self
      : {};
  function i(t) {
    return t &&
      t.__esModule &&
      Object.prototype.hasOwnProperty.call(t, "default")
      ? t.default
      : t;
  }
  function a(t, e) {
    return t((e = { exports: {} }), e.exports), e.exports;
  }
  var s,
    r,
    o = function(t) {
      return t && t.Math == Math && t;
    },
    l =
      o("object" == typeof globalThis && globalThis) ||
      o("object" == typeof window && window) ||
      o("object" == typeof self && self) ||
      o("object" == typeof n && n) ||
      (function() {
        return this;
      })() ||
      Function("return this")(),
    c = {
      CSSRuleList: 0,
      CSSStyleDeclaration: 0,
      CSSValueList: 0,
      ClientRectList: 0,
      DOMRectList: 0,
      DOMStringList: 0,
      DOMTokenList: 1,
      DataTransferItemList: 0,
      FileList: 0,
      HTMLAllCollection: 0,
      HTMLCollection: 0,
      HTMLFormElement: 0,
      HTMLSelectElement: 0,
      MediaList: 0,
      MimeTypeArray: 0,
      NamedNodeMap: 0,
      NodeList: 1,
      PaintRequestList: 0,
      Plugin: 0,
      PluginArray: 0,
      SVGLengthList: 0,
      SVGNumberList: 0,
      SVGPathSegList: 0,
      SVGPointList: 0,
      SVGStringList: 0,
      SVGTransformList: 0,
      SourceBufferList: 0,
      StyleSheetList: 0,
      TextTrackCueList: 0,
      TextTrackList: 0,
      TouchList: 0
    },
    d = function(t) {
      try {
        return !!t();
      } catch (t) {
        return !0;
      }
    },
    u = {}.toString,
    h = function(t) {
      return u.call(t).slice(8, -1);
    },
    p = "".split,
    _ = d(function() {
      return !Object("z").propertyIsEnumerable(0);
    })
      ? function(t) {
          return "String" == h(t) ? p.call(t, "") : Object(t);
        }
      : Object,
    f = function(t) {
      if (null == t) throw TypeError("Can't call method on " + t);
      return t;
    },
    m = function(t) {
      return _(f(t));
    },
    v = !d(function() {
      return (
        7 !=
        Object.defineProperty({}, 1, {
          get: function() {
            return 7;
          }
        })[1]
      );
    }),
    g = function(t) {
      return "object" == typeof t ? null !== t : "function" == typeof t;
    },
    C = l.document,
    b = g(C) && g(C.createElement),
    y = function(t) {
      return b ? C.createElement(t) : {};
    },
    E =
      !v &&
      !d(function() {
        return (
          7 !=
          Object.defineProperty(y("div"), "a", {
            get: function() {
              return 7;
            }
          }).a
        );
      }),
    T = function(t) {
      if (!g(t)) throw TypeError(String(t) + " is not an object");
      return t;
    },
    I = function(t, e) {
      if (!g(t)) return t;
      var n, i;
      if (e && "function" == typeof (n = t.toString) && !g((i = n.call(t))))
        return i;
      if ("function" == typeof (n = t.valueOf) && !g((i = n.call(t)))) return i;
      if (!e && "function" == typeof (n = t.toString) && !g((i = n.call(t))))
        return i;
      throw TypeError("Can't convert object to primitive value");
    },
    A = Object.defineProperty,
    O = {
      f: v
        ? A
        : function(t, e, n) {
            if ((T(t), (e = I(e, !0)), T(n), E))
              try {
                return A(t, e, n);
              } catch (t) {}
            if ("get" in n || "set" in n)
              throw TypeError("Accessors not supported");
            return "value" in n && (t[e] = n.value), t;
          }
    },
    D = function(t, e) {
      return {
        enumerable: !(1 & t),
        configurable: !(2 & t),
        writable: !(4 & t),
        value: e
      };
    },
    L = v
      ? function(t, e, n) {
          return O.f(t, e, D(1, n));
        }
      : function(t, e, n) {
          return (t[e] = n), t;
        },
    S = function(t, e) {
      try {
        L(l, t, e);
      } catch (n) {
        l[t] = e;
      }
      return e;
    },
    N = "__core-js_shared__",
    k = l[N] || S(N, {}),
    R = a(function(t) {
      (t.exports = function(t, e) {
        return k[t] || (k[t] = void 0 !== e ? e : {});
      })("versions", []).push({
        version: "3.10.1",
        mode: "global",
        copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
      });
    }),
    x = {}.hasOwnProperty,
    w = function(t, e) {
      return x.call(t, e);
    },
    H = 0,
    M = Math.random(),
    P = function(t) {
      return (
        "Symbol(" +
        String(void 0 === t ? "" : t) +
        ")_" +
        (++H + M).toString(36)
      );
    },
    j = "process" == h(l.process),
    F = l,
    B = function(t) {
      return "function" == typeof t ? t : void 0;
    },
    V = function(t, e) {
      return arguments.length < 2
        ? B(F[t]) || B(l[t])
        : (F[t] && F[t][e]) || (l[t] && l[t][e]);
    },
    U = V("navigator", "userAgent") || "",
    W = l.process,
    G = W && W.versions,
    z = G && G.v8;
  z
    ? (r = (s = z.split("."))[0] + s[1])
    : U &&
      (!(s = U.match(/Edge\/(\d+)/)) || s[1] >= 74) &&
      (s = U.match(/Chrome\/(\d+)/)) &&
      (r = s[1]);
  var K,
    q = r && +r,
    X =
      !!Object.getOwnPropertySymbols &&
      !d(function() {
        return !Symbol.sham && (j ? 38 === q : q > 37 && q < 41);
      }),
    J = X && !Symbol.sham && "symbol" == typeof Symbol.iterator,
    Y = R("wks"),
    Q = l.Symbol,
    Z = J ? Q : (Q && Q.withoutSetter) || P,
    tt = function(t) {
      return (
        (w(Y, t) && (X || "string" == typeof Y[t])) ||
          (X && w(Q, t) ? (Y[t] = Q[t]) : (Y[t] = Z("Symbol." + t))),
        Y[t]
      );
    },
    et = Math.ceil,
    nt = Math.floor,
    it = function(t) {
      return isNaN((t = +t)) ? 0 : (t > 0 ? nt : et)(t);
    },
    at = Math.min,
    st = Math.max,
    rt = Math.min,
    ot = function(t) {
      return function(e, n, i) {
        var a,
          s,
          r = m(e),
          o = (a = r.length) > 0 ? at(it(a), 9007199254740991) : 0,
          l = (function(t, e) {
            var n = it(t);
            return n < 0 ? st(n + e, 0) : rt(n, e);
          })(i, o);
        if (t && n != n) {
          for (; o > l; ) if ((s = r[l++]) != s) return !0;
        } else
          for (; o > l; l++)
            if ((t || l in r) && r[l] === n) return t || l || 0;
        return !t && -1;
      };
    },
    lt = { includes: ot(!0), indexOf: ot(!1) },
    ct = {},
    dt = lt.indexOf,
    ut = function(t, e) {
      var n,
        i = m(t),
        a = 0,
        s = [];
      for (n in i) !w(ct, n) && w(i, n) && s.push(n);
      for (; e.length > a; ) w(i, (n = e[a++])) && (~dt(s, n) || s.push(n));
      return s;
    },
    ht = [
      "constructor",
      "hasOwnProperty",
      "isPrototypeOf",
      "propertyIsEnumerable",
      "toLocaleString",
      "toString",
      "valueOf"
    ],
    pt =
      Object.keys ||
      function(t) {
        return ut(t, ht);
      },
    _t = v
      ? Object.defineProperties
      : function(t, e) {
          T(t);
          for (var n, i = pt(e), a = i.length, s = 0; a > s; )
            O.f(t, (n = i[s++]), e[n]);
          return t;
        },
    ft = V("document", "documentElement"),
    mt = R("keys"),
    vt = function(t) {
      return mt[t] || (mt[t] = P(t));
    },
    gt = vt("IE_PROTO"),
    Ct = function() {},
    bt = function(t) {
      return "<script>" + t + "</" + "script>";
    },
    yt = function() {
      try {
        K = document.domain && new ActiveXObject("htmlfile");
      } catch (t) {}
      var t, e;
      yt = K
        ? (function(t) {
            t.write(bt("")), t.close();
            var e = t.parentWindow.Object;
            return (t = null), e;
          })(K)
        : (((e = y("iframe")).style.display = "none"),
          ft.appendChild(e),
          (e.src = String("javascript:")),
          (t = e.contentWindow.document).open(),
          t.write(bt("document.F=Object")),
          t.close(),
          t.F);
      for (var n = ht.length; n--; ) delete yt.prototype[ht[n]];
      return yt();
    };
  ct[gt] = !0;
  var Et =
      Object.create ||
      function(t, e) {
        var n;
        return (
          null !== t
            ? ((Ct.prototype = T(t)),
              (n = new Ct()),
              (Ct.prototype = null),
              (n[gt] = t))
            : (n = yt()),
          void 0 === e ? n : _t(n, e)
        );
      },
    Tt = tt("unscopables"),
    It = Array.prototype;
  null == It[Tt] && O.f(It, Tt, { configurable: !0, value: Et(null) });
  var At = function(t) {
      It[Tt][t] = !0;
    },
    Ot = Function.toString;
  "function" != typeof k.inspectSource &&
    (k.inspectSource = function(t) {
      return Ot.call(t);
    });
  var Dt,
    Lt,
    St,
    Nt = k.inspectSource,
    kt = l.WeakMap,
    Rt = "function" == typeof kt && /native code/.test(Nt(kt)),
    xt = l.WeakMap;
  if (Rt) {
    var wt = k.state || (k.state = new xt()),
      Ht = wt.get,
      Mt = wt.has,
      Pt = wt.set;
    (Dt = function(t, e) {
      return (e.facade = t), Pt.call(wt, t, e), e;
    }),
      (Lt = function(t) {
        return Ht.call(wt, t) || {};
      }),
      (St = function(t) {
        return Mt.call(wt, t);
      });
  } else {
    var jt = vt("state");
    (ct[jt] = !0),
      (Dt = function(t, e) {
        return (e.facade = t), L(t, jt, e), e;
      }),
      (Lt = function(t) {
        return w(t, jt) ? t[jt] : {};
      }),
      (St = function(t) {
        return w(t, jt);
      });
  }
  var Ft,
    Bt,
    Vt,
    Ut = {
      set: Dt,
      get: Lt,
      has: St,
      enforce: function(t) {
        return St(t) ? Lt(t) : Dt(t, {});
      },
      getterFor: function(t) {
        return function(e) {
          var n;
          if (!g(e) || (n = Lt(e)).type !== t)
            throw TypeError("Incompatible receiver, " + t + " required");
          return n;
        };
      }
    },
    Wt = {}.propertyIsEnumerable,
    Gt = Object.getOwnPropertyDescriptor,
    zt = {
      f:
        Gt && !Wt.call({ 1: 2 }, 1)
          ? function(t) {
              var e = Gt(this, t);
              return !!e && e.enumerable;
            }
          : Wt
    },
    Kt = Object.getOwnPropertyDescriptor,
    qt = {
      f: v
        ? Kt
        : function(t, e) {
            if (((t = m(t)), (e = I(e, !0)), E))
              try {
                return Kt(t, e);
              } catch (t) {}
            if (w(t, e)) return D(!zt.f.call(t, e), t[e]);
          }
    },
    Xt = a(function(t) {
      var e = Ut.get,
        n = Ut.enforce,
        i = String(String).split("String");
      (t.exports = function(t, e, a, s) {
        var r,
          o = !!s && !!s.unsafe,
          c = !!s && !!s.enumerable,
          d = !!s && !!s.noTargetGet;
        "function" == typeof a &&
          ("string" != typeof e || w(a, "name") || L(a, "name", e),
          (r = n(a)).source ||
            (r.source = i.join("string" == typeof e ? e : ""))),
          t !== l
            ? (o ? !d && t[e] && (c = !0) : delete t[e],
              c ? (t[e] = a) : L(t, e, a))
            : c
            ? (t[e] = a)
            : S(e, a);
      })(Function.prototype, "toString", function() {
        return ("function" == typeof this && e(this).source) || Nt(this);
      });
    }),
    Jt = ht.concat("length", "prototype"),
    $t = {
      f:
        Object.getOwnPropertyNames ||
        function(t) {
          return ut(t, Jt);
        }
    },
    Yt = { f: Object.getOwnPropertySymbols },
    Qt =
      V("Reflect", "ownKeys") ||
      function(t) {
        var e = $t.f(T(t)),
          n = Yt.f;
        return n ? e.concat(n(t)) : e;
      },
    Zt = function(t, e) {
      for (var n = Qt(e), i = O.f, a = qt.f, s = 0; s < n.length; s++) {
        var r = n[s];
        w(t, r) || i(t, r, a(e, r));
      }
    },
    te = /#|\.prototype\./,
    ee = function(t, e) {
      var n = ie[ne(t)];
      return n == se || (n != ae && ("function" == typeof e ? d(e) : !!e));
    },
    ne = (ee.normalize = function(t) {
      return String(t)
        .replace(te, ".")
        .toLowerCase();
    }),
    ie = (ee.data = {}),
    ae = (ee.NATIVE = "N"),
    se = (ee.POLYFILL = "P"),
    re = ee,
    oe = qt.f,
    le = !d(function() {
      function t() {}
      return (
        (t.prototype.constructor = null),
        Object.getPrototypeOf(new t()) !== t.prototype
      );
    }),
    ce = vt("IE_PROTO"),
    de = Object.prototype,
    ue = le
      ? Object.getPrototypeOf
      : function(t) {
          return (
            (t = Object(f(t))),
            w(t, ce)
              ? t[ce]
              : "function" == typeof t.constructor && t instanceof t.constructor
              ? t.constructor.prototype
              : t instanceof Object
              ? de
              : null
          );
        },
    he = tt("iterator"),
    pe = !1;
  [].keys &&
    ("next" in (Vt = [].keys())
      ? (Bt = ue(ue(Vt))) !== Object.prototype && (Ft = Bt)
      : (pe = !0)),
    (null == Ft ||
      d(function() {
        var t = {};
        return Ft[he].call(t) !== t;
      })) &&
      (Ft = {}),
    w(Ft, he) ||
      L(Ft, he, function() {
        return this;
      });
  var _e = { IteratorPrototype: Ft, BUGGY_SAFARI_ITERATORS: pe },
    fe = O.f,
    me = tt("toStringTag"),
    ve = function(t, e, n) {
      t &&
        !w((t = n ? t : t.prototype), me) &&
        fe(t, me, { configurable: !0, value: e });
    },
    ge = _e.IteratorPrototype,
    Ce =
      Object.setPrototypeOf ||
      ("__proto__" in {}
        ? (function() {
            var t,
              e = !1,
              n = {};
            try {
              (t = Object.getOwnPropertyDescriptor(
                Object.prototype,
                "__proto__"
              ).set).call(n, []),
                (e = n instanceof Array);
            } catch (t) {}
            return function(n, i) {
              return (
                T(n),
                (function(t) {
                  if (!g(t) && null !== t)
                    throw TypeError(
                      "Can't set " + String(t) + " as a prototype"
                    );
                })(i),
                e ? t.call(n, i) : (n.__proto__ = i),
                n
              );
            };
          })()
        : void 0),
    be = _e.IteratorPrototype,
    ye = _e.BUGGY_SAFARI_ITERATORS,
    Ee = tt("iterator"),
    Te = "keys",
    Ie = "values",
    Ae = "entries",
    Oe = function() {
      return this;
    },
    De = "Array Iterator",
    Le = Ut.set,
    Se = Ut.getterFor(De),
    Ne = (function(t, e, n, i, a, s, r) {
      !(function(t, e, n) {
        var i = e + " Iterator";
        (t.prototype = Et(ge, { next: D(1, n) })), ve(t, i, !1);
      })(n, e, i);
      var o,
        c,
        d,
        u = function(t) {
          if (t === a && m) return m;
          if (!ye && t in _) return _[t];
          switch (t) {
            case Te:
            case Ie:
            case Ae:
              return function() {
                return new n(this, t);
              };
          }
          return function() {
            return new n(this);
          };
        },
        h = e + " Iterator",
        p = !1,
        _ = t.prototype,
        f = _[Ee] || _["@@iterator"] || (a && _[a]),
        m = (!ye && f) || u(a),
        v = ("Array" == e && _.entries) || f;
      if (
        (v &&
          ((o = ue(v.call(new t()))),
          be !== Object.prototype &&
            o.next &&
            (ue(o) !== be &&
              (Ce ? Ce(o, be) : "function" != typeof o[Ee] && L(o, Ee, Oe)),
            ve(o, h, !0))),
        a == Ie &&
          f &&
          f.name !== Ie &&
          ((p = !0),
          (m = function() {
            return f.call(this);
          })),
        _[Ee] !== m && L(_, Ee, m),
        a)
      )
        if (((c = { values: u(Ie), keys: s ? m : u(Te), entries: u(Ae) }), r))
          for (d in c) (ye || p || !(d in _)) && Xt(_, d, c[d]);
        else
          !(function(t, e) {
            var n,
              i,
              a,
              s,
              r,
              o = t.target,
              c = t.global,
              d = t.stat;
            if ((n = c ? l : d ? l[o] || S(o, {}) : (l[o] || {}).prototype))
              for (i in e) {
                if (
                  ((s = e[i]),
                  (a = t.noTargetGet ? (r = oe(n, i)) && r.value : n[i]),
                  !re(c ? i : o + (d ? "." : "#") + i, t.forced) &&
                    void 0 !== a)
                ) {
                  if (typeof s == typeof a) continue;
                  Zt(s, a);
                }
                (t.sham || (a && a.sham)) && L(s, "sham", !0), Xt(n, i, s, t);
              }
          })({ target: e, proto: !0, forced: ye || p }, c);
      return c;
    })(
      Array,
      "Array",
      function(t, e) {
        Le(this, { type: De, target: m(t), index: 0, kind: e });
      },
      function() {
        var t = Se(this),
          e = t.target,
          n = t.kind,
          i = t.index++;
        return !e || i >= e.length
          ? ((t.target = void 0), { value: void 0, done: !0 })
          : "keys" == n
          ? { value: i, done: !1 }
          : "values" == n
          ? { value: e[i], done: !1 }
          : { value: [i, e[i]], done: !1 };
      },
      "values"
    );
  At("keys"), At("values"), At("entries");
  var ke = tt("iterator"),
    Re = tt("toStringTag"),
    xe = Ne.values;
  for (var we in c) {
    var He = l[we],
      Me = He && He.prototype;
    if (Me) {
      if (Me[ke] !== xe)
        try {
          L(Me, ke, xe);
        } catch (t) {
          Me[ke] = xe;
        }
      if ((Me[Re] || L(Me, Re, we), c[we]))
        for (var Pe in Ne)
          if (Me[Pe] !== Ne[Pe])
            try {
              L(Me, Pe, Ne[Pe]);
            } catch (t) {
              Me[Pe] = Ne[Pe];
            }
    }
  }
  var je,
    Fe,
    Be,
    Ve,
    Ue,
    We,
    Ge = {},
    ze = [],
    Ke = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
  function qe(t, e) {
    for (var n in e) t[n] = e[n];
    return t;
  }
  function Xe(t) {
    var e = t.parentNode;
    e && e.removeChild(t);
  }
  function Je(t, e, n) {
    var i,
      a,
      s,
      r = arguments,
      o = {};
    for (s in e)
      "key" == s ? (i = e[s]) : "ref" == s ? (a = e[s]) : (o[s] = e[s]);
    if (arguments.length > 3)
      for (n = [n], s = 3; s < arguments.length; s++) n.push(r[s]);
    if (
      (null != n && (o.children = n),
      "function" == typeof t && null != t.defaultProps)
    )
      for (s in t.defaultProps) void 0 === o[s] && (o[s] = t.defaultProps[s]);
    return $e(t, o, i, a, null);
  }
  function $e(t, e, n, i, a) {
    var s = {
      type: t,
      props: e,
      key: n,
      ref: i,
      __k: null,
      __: null,
      __b: 0,
      __e: null,
      __d: void 0,
      __c: null,
      __h: null,
      constructor: void 0,
      __v: null == a ? ++je.__v : a
    };
    return null != je.vnode && je.vnode(s), s;
  }
  function Ye(t) {
    return t.children;
  }
  function Qe(t, e) {
    (this.props = t), (this.context = e);
  }
  function Ze(t, e) {
    if (null == e) return t.__ ? Ze(t.__, t.__.__k.indexOf(t) + 1) : null;
    for (var n; e < t.__k.length; e++)
      if (null != (n = t.__k[e]) && null != n.__e) return n.__e;
    return "function" == typeof t.type ? Ze(t) : null;
  }
  function tn(t) {
    var e, n;
    if (null != (t = t.__) && null != t.__c) {
      for (t.__e = t.__c.base = null, e = 0; e < t.__k.length; e++)
        if (null != (n = t.__k[e]) && null != n.__e) {
          t.__e = t.__c.base = n.__e;
          break;
        }
      return tn(t);
    }
  }
  function en(t) {
    ((!t.__d && (t.__d = !0) && Be.push(t) && !nn.__r++) ||
      Ue !== je.debounceRendering) &&
      ((Ue = je.debounceRendering) || Ve)(nn);
  }
  function nn() {
    for (var t; (nn.__r = Be.length); )
      (t = Be.sort(function(t, e) {
        return t.__v.__b - e.__v.__b;
      })),
        (Be = []),
        t.some(function(t) {
          var e, n, i, a, s, r;
          t.__d &&
            ((s = (a = (e = t).__v).__e),
            (r = e.__P) &&
              ((n = []),
              ((i = qe({}, a)).__v = a.__v + 1),
              un(
                r,
                a,
                i,
                e.__n,
                void 0 !== r.ownerSVGElement,
                null != a.__h ? [s] : null,
                n,
                null == s ? Ze(a) : s,
                a.__h
              ),
              hn(n, a),
              a.__e != s && tn(a)));
        });
  }
  function an(t, e, n, i, a, s, r, o, l, c) {
    var d,
      u,
      h,
      p,
      _,
      f,
      m,
      v = (i && i.__k) || ze,
      g = v.length;
    for (n.__k = [], d = 0; d < e.length; d++)
      if (
        null !=
        (p = n.__k[d] =
          null == (p = e[d]) || "boolean" == typeof p
            ? null
            : "string" == typeof p ||
              "number" == typeof p ||
              "bigint" == typeof p
            ? $e(null, p, null, null, p)
            : Array.isArray(p)
            ? $e(Ye, { children: p }, null, null, null)
            : p.__b > 0
            ? $e(p.type, p.props, p.key, null, p.__v)
            : p)
      ) {
        if (
          ((p.__ = n),
          (p.__b = n.__b + 1),
          null === (h = v[d]) || (h && p.key == h.key && p.type === h.type))
        )
          v[d] = void 0;
        else
          for (u = 0; u < g; u++) {
            if ((h = v[u]) && p.key == h.key && p.type === h.type) {
              v[u] = void 0;
              break;
            }
            h = null;
          }
        un(t, p, (h = h || Ge), a, s, r, o, l, c),
          (_ = p.__e),
          (u = p.ref) &&
            h.ref != u &&
            (m || (m = []),
            h.ref && m.push(h.ref, null, p),
            m.push(u, p.__c || _, p)),
          null != _
            ? (null == f && (f = _),
              "function" == typeof p.type && null != p.__k && p.__k === h.__k
                ? (p.__d = l = sn(p, l, t))
                : (l = rn(t, p, h, v, _, l)),
              c || "option" !== n.type
                ? "function" == typeof n.type && (n.__d = l)
                : (t.value = ""))
            : l && h.__e == l && l.parentNode != t && (l = Ze(h));
      }
    for (n.__e = f, d = g; d--; )
      null != v[d] &&
        ("function" == typeof n.type &&
          null != v[d].__e &&
          v[d].__e == n.__d &&
          (n.__d = Ze(i, d + 1)),
        fn(v[d], v[d]));
    if (m) for (d = 0; d < m.length; d++) _n(m[d], m[++d], m[++d]);
  }
  function sn(t, e, n) {
    var i, a;
    for (i = 0; i < t.__k.length; i++)
      (a = t.__k[i]) &&
        ((a.__ = t),
        (e =
          "function" == typeof a.type
            ? sn(a, e, n)
            : rn(n, a, a, t.__k, a.__e, e)));
    return e;
  }
  function rn(t, e, n, i, a, s) {
    var r, o, l;
    if (void 0 !== e.__d) (r = e.__d), (e.__d = void 0);
    else if (null == n || a != s || null == a.parentNode)
      t: if (null == s || s.parentNode !== t) t.appendChild(a), (r = null);
      else {
        for (o = s, l = 0; (o = o.nextSibling) && l < i.length; l += 2)
          if (o == a) break t;
        t.insertBefore(a, s), (r = s);
      }
    return void 0 !== r ? r : a.nextSibling;
  }
  function on(t, e, n) {
    "-" === e[0]
      ? t.setProperty(e, n)
      : (t[e] =
          null == n ? "" : "number" != typeof n || Ke.test(e) ? n : n + "px");
  }
  function ln(t, e, n, i, a) {
    var s;
    t: if ("style" === e)
      if ("string" == typeof n) t.style.cssText = n;
      else {
        if (("string" == typeof i && (t.style.cssText = i = ""), i))
          for (e in i) (n && e in n) || on(t.style, e, "");
        if (n) for (e in n) (i && n[e] === i[e]) || on(t.style, e, n[e]);
      }
    else if ("o" === e[0] && "n" === e[1])
      (s = e !== (e = e.replace(/Capture$/, ""))),
        (e = e.toLowerCase() in t ? e.toLowerCase().slice(2) : e.slice(2)),
        t.l || (t.l = {}),
        (t.l[e + s] = n),
        n
          ? i || t.addEventListener(e, s ? dn : cn, s)
          : t.removeEventListener(e, s ? dn : cn, s);
    else if ("dangerouslySetInnerHTML" !== e) {
      if (a) e = e.replace(/xlink[H:h]/, "h").replace(/sName$/, "s");
      else if (
        "href" !== e &&
        "list" !== e &&
        "form" !== e &&
        "tabIndex" !== e &&
        "download" !== e &&
        e in t
      )
        try {
          t[e] = null == n ? "" : n;
          break t;
        } catch (t) {}
      "function" == typeof n ||
        (null != n && (!1 !== n || ("a" === e[0] && "r" === e[1]))
          ? t.setAttribute(e, n)
          : t.removeAttribute(e));
    }
  }
  function cn(t) {
    this.l[t.type + !1](je.event ? je.event(t) : t);
  }
  function dn(t) {
    this.l[t.type + !0](je.event ? je.event(t) : t);
  }
  function un(t, e, n, i, a, s, r, o, l) {
    var c,
      d,
      u,
      h,
      p,
      _,
      f,
      m,
      v,
      g,
      C,
      b = e.type;
    if (void 0 !== e.constructor) return null;
    null != n.__h &&
      ((l = n.__h), (o = e.__e = n.__e), (e.__h = null), (s = [o])),
      (c = je.__b) && c(e);
    try {
      t: if ("function" == typeof b) {
        if (
          ((m = e.props),
          (v = (c = b.contextType) && i[c.__c]),
          (g = c ? (v ? v.props.value : c.__) : i),
          n.__c
            ? (f = (d = e.__c = n.__c).__ = d.__E)
            : ("prototype" in b && b.prototype.render
                ? (e.__c = d = new b(m, g))
                : ((e.__c = d = new Qe(m, g)),
                  (d.constructor = b),
                  (d.render = mn)),
              v && v.sub(d),
              (d.props = m),
              d.state || (d.state = {}),
              (d.context = g),
              (d.__n = i),
              (u = d.__d = !0),
              (d.__h = [])),
          null == d.__s && (d.__s = d.state),
          null != b.getDerivedStateFromProps &&
            (d.__s == d.state && (d.__s = qe({}, d.__s)),
            qe(d.__s, b.getDerivedStateFromProps(m, d.__s))),
          (h = d.props),
          (p = d.state),
          u)
        )
          null == b.getDerivedStateFromProps &&
            null != d.componentWillMount &&
            d.componentWillMount(),
            null != d.componentDidMount && d.__h.push(d.componentDidMount);
        else {
          if (
            (null == b.getDerivedStateFromProps &&
              m !== h &&
              null != d.componentWillReceiveProps &&
              d.componentWillReceiveProps(m, g),
            (!d.__e &&
              null != d.shouldComponentUpdate &&
              !1 === d.shouldComponentUpdate(m, d.__s, g)) ||
              e.__v === n.__v)
          ) {
            (d.props = m),
              (d.state = d.__s),
              e.__v !== n.__v && (d.__d = !1),
              (d.__v = e),
              (e.__e = n.__e),
              (e.__k = n.__k),
              e.__k.forEach(function(t) {
                t && (t.__ = e);
              }),
              d.__h.length && r.push(d);
            break t;
          }
          null != d.componentWillUpdate && d.componentWillUpdate(m, d.__s, g),
            null != d.componentDidUpdate &&
              d.__h.push(function() {
                d.componentDidUpdate(h, p, _);
              });
        }
        (d.context = g),
          (d.props = m),
          (d.state = d.__s),
          (c = je.__r) && c(e),
          (d.__d = !1),
          (d.__v = e),
          (d.__P = t),
          (c = d.render(d.props, d.state, d.context)),
          (d.state = d.__s),
          null != d.getChildContext && (i = qe(qe({}, i), d.getChildContext())),
          u ||
            null == d.getSnapshotBeforeUpdate ||
            (_ = d.getSnapshotBeforeUpdate(h, p)),
          (C =
            null != c && c.type === Ye && null == c.key ? c.props.children : c),
          an(t, Array.isArray(C) ? C : [C], e, n, i, a, s, r, o, l),
          (d.base = e.__e),
          (e.__h = null),
          d.__h.length && r.push(d),
          f && (d.__E = d.__ = null),
          (d.__e = !1);
      } else
        null == s && e.__v === n.__v
          ? ((e.__k = n.__k), (e.__e = n.__e))
          : (e.__e = pn(n.__e, e, n, i, a, s, r, l));
      (c = je.diffed) && c(e);
    } catch (t) {
      (e.__v = null),
        (l || null != s) &&
          ((e.__e = o), (e.__h = !!l), (s[s.indexOf(o)] = null)),
        je.__e(t, e, n);
    }
  }
  function hn(t, e) {
    je.__c && je.__c(e, t),
      t.some(function(e) {
        try {
          (t = e.__h),
            (e.__h = []),
            t.some(function(t) {
              t.call(e);
            });
        } catch (t) {
          je.__e(t, e.__v);
        }
      });
  }
  function pn(t, e, n, i, a, s, r, o) {
    var l,
      c,
      d,
      u,
      h = n.props,
      p = e.props,
      _ = e.type,
      f = 0;
    if (("svg" === _ && (a = !0), null != s))
      for (; f < s.length; f++)
        if (
          (l = s[f]) &&
          (l === t || (_ ? l.localName == _ : 3 == l.nodeType))
        ) {
          (t = l), (s[f] = null);
          break;
        }
    if (null == t) {
      if (null === _) return document.createTextNode(p);
      (t = a
        ? document.createElementNS("http://www.w3.org/2000/svg", _)
        : document.createElement(_, p.is && p)),
        (s = null),
        (o = !1);
    }
    if (null === _) h === p || (o && t.data === p) || (t.data = p);
    else {
      if (
        ((s = s && ze.slice.call(t.childNodes)),
        (c = (h = n.props || Ge).dangerouslySetInnerHTML),
        (d = p.dangerouslySetInnerHTML),
        !o)
      ) {
        if (null != s)
          for (h = {}, u = 0; u < t.attributes.length; u++)
            h[t.attributes[u].name] = t.attributes[u].value;
        (d || c) &&
          ((d && ((c && d.__html == c.__html) || d.__html === t.innerHTML)) ||
            (t.innerHTML = (d && d.__html) || ""));
      }
      if (
        ((function(t, e, n, i, a) {
          var s;
          for (s in n)
            "children" === s ||
              "key" === s ||
              s in e ||
              ln(t, s, null, n[s], i);
          for (s in e)
            (a && "function" != typeof e[s]) ||
              "children" === s ||
              "key" === s ||
              "value" === s ||
              "checked" === s ||
              n[s] === e[s] ||
              ln(t, s, e[s], n[s], i);
        })(t, p, h, a, o),
        d)
      )
        e.__k = [];
      else if (
        ((f = e.props.children),
        an(
          t,
          Array.isArray(f) ? f : [f],
          e,
          n,
          i,
          a && "foreignObject" !== _,
          s,
          r,
          t.firstChild,
          o
        ),
        null != s)
      )
        for (f = s.length; f--; ) null != s[f] && Xe(s[f]);
      o ||
        ("value" in p &&
          void 0 !== (f = p.value) &&
          (f !== t.value || ("progress" === _ && !f)) &&
          ln(t, "value", f, h.value, !1),
        "checked" in p &&
          void 0 !== (f = p.checked) &&
          f !== t.checked &&
          ln(t, "checked", f, h.checked, !1));
    }
    return t;
  }
  function _n(t, e, n) {
    try {
      "function" == typeof t ? t(e) : (t.current = e);
    } catch (t) {
      je.__e(t, n);
    }
  }
  function fn(t, e, n) {
    var i, a, s;
    if (
      (je.unmount && je.unmount(t),
      (i = t.ref) && ((i.current && i.current !== t.__e) || _n(i, null, e)),
      n || "function" == typeof t.type || (n = null != (a = t.__e)),
      (t.__e = t.__d = void 0),
      null != (i = t.__c))
    ) {
      if (i.componentWillUnmount)
        try {
          i.componentWillUnmount();
        } catch (t) {
          je.__e(t, e);
        }
      i.base = i.__P = null;
    }
    if ((i = t.__k)) for (s = 0; s < i.length; s++) i[s] && fn(i[s], e, n);
    null != a && Xe(a);
  }
  function mn(t, e, n) {
    return this.constructor(t, n);
  }
  function vn(t, e, n) {
    var i, a, s;
    je.__ && je.__(t, e),
      (a = (i = "function" == typeof n) ? null : (n && n.__k) || e.__k),
      (s = []),
      un(
        e,
        (t = ((!i && n) || e).__k = Je(Ye, null, [t])),
        a || Ge,
        Ge,
        void 0 !== e.ownerSVGElement,
        !i && n
          ? [n]
          : a
          ? null
          : e.firstChild
          ? ze.slice.call(e.childNodes)
          : null,
        s,
        !i && n ? n : a ? a.__e : e.firstChild,
        i
      ),
      hn(s, t);
  }
  (je = {
    __e: function(t, e) {
      for (var n, i, a; (e = e.__); )
        if ((n = e.__c) && !n.__)
          try {
            if (
              ((i = n.constructor) &&
                null != i.getDerivedStateFromError &&
                (n.setState(i.getDerivedStateFromError(t)), (a = n.__d)),
              null != n.componentDidCatch &&
                (n.componentDidCatch(t), (a = n.__d)),
              a)
            )
              return (n.__E = n);
          } catch (e) {
            t = e;
          }
      throw t;
    },
    __v: 0
  }),
    (Fe = function(t) {
      return null != t && void 0 === t.constructor;
    }),
    (Qe.prototype.setState = function(t, e) {
      var n;
      (n =
        null != this.__s && this.__s !== this.state
          ? this.__s
          : (this.__s = qe({}, this.state))),
        "function" == typeof t && (t = t(qe({}, n), this.props)),
        t && qe(n, t),
        null != t && this.__v && (e && this.__h.push(e), en(this));
    }),
    (Qe.prototype.forceUpdate = function(t) {
      this.__v && ((this.__e = !0), t && this.__h.push(t), en(this));
    }),
    (Qe.prototype.render = Ye),
    (Be = []),
    (Ve =
      "function" == typeof Promise
        ? Promise.prototype.then.bind(Promise.resolve())
        : setTimeout),
    (nn.__r = 0),
    (We = 0);
  var gn = Object.freeze({
      __proto__: null,
      render: vn,
      hydrate: function t(e, n) {
        vn(e, n, t);
      },
      createElement: Je,
      h: Je,
      Fragment: Ye,
      createRef: function() {
        return { current: null };
      },
      get isValidElement() {
        return Fe;
      },
      Component: Qe,
      cloneElement: function(t, e, n) {
        var i,
          a,
          s,
          r = arguments,
          o = qe({}, t.props);
        for (s in e)
          "key" == s ? (i = e[s]) : "ref" == s ? (a = e[s]) : (o[s] = e[s]);
        if (arguments.length > 3)
          for (n = [n], s = 3; s < arguments.length; s++) n.push(r[s]);
        return (
          null != n && (o.children = n),
          $e(t.type, o, i || t.key, a || t.ref, null)
        );
      },
      createContext: function(t, e) {
        var n = {
          __c: (e = "__cC" + We++),
          __: t,
          Consumer: function(t, e) {
            return t.children(e);
          },
          Provider: function(t) {
            var n, i;
            return (
              this.getChildContext ||
                ((n = []),
                ((i = {})[e] = this),
                (this.getChildContext = function() {
                  return i;
                }),
                (this.shouldComponentUpdate = function(t) {
                  this.props.value !== t.value && n.some(en);
                }),
                (this.sub = function(t) {
                  n.push(t);
                  var e = t.componentWillUnmount;
                  t.componentWillUnmount = function() {
                    n.splice(n.indexOf(t), 1), e && e.call(t);
                  };
                })),
              t.children
            );
          }
        };
        return (n.Provider.__ = n.Consumer.contextType = n);
      },
      toChildArray: function t(e, n) {
        return (
          (n = n || []),
          null == e ||
            "boolean" == typeof e ||
            (Array.isArray(e)
              ? e.some(function(e) {
                  t(e, n);
                })
              : n.push(e)),
          n
        );
      },
      get options() {
        return je;
      }
    }),
    Cn = a(function(t) {
      t.exports = function(t) {
        return t && t.__esModule ? t : { default: t };
      };
    });
  i(Cn);
  var bn = a(function(t) {
    function e(n) {
      return (
        (t.exports = e = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function(t) {
              return t.__proto__ || Object.getPrototypeOf(t);
            }),
        e(n)
      );
    }
    t.exports = e;
  });
  var yn = function(t, e) {
      for (
        ;
        !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = bn(t));

      );
      return t;
    },
    En = a(function(t) {
      function e(n, i, a) {
        return (
          "undefined" != typeof Reflect && Reflect.get
            ? (t.exports = e = Reflect.get)
            : (t.exports = e = function(t, e, n) {
                var i = yn(t, e);
                if (i) {
                  var a = Object.getOwnPropertyDescriptor(i, e);
                  return a.get ? a.get.call(n) : a.value;
                }
              }),
          e(n, i, a || n)
        );
      }
      t.exports = e;
    });
  var Tn = function(t, e) {
    if (!(t instanceof e))
      throw new TypeError("Cannot call a class as a function");
  };
  function In(t, e) {
    for (var n = 0; n < e.length; n++) {
      var i = e[n];
      (i.enumerable = i.enumerable || !1),
        (i.configurable = !0),
        "value" in i && (i.writable = !0),
        Object.defineProperty(t, i.key, i);
    }
  }
  var An = function(t, e, n) {
      return e && In(t.prototype, e), n && In(t, n), t;
    },
    On = a(function(t) {
      function e(n) {
        return (
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? (t.exports = e = function(t) {
                return typeof t;
              })
            : (t.exports = e = function(t) {
                return t &&
                  "function" == typeof Symbol &&
                  t.constructor === Symbol &&
                  t !== Symbol.prototype
                  ? "symbol"
                  : typeof t;
              }),
          e(n)
        );
      }
      t.exports = e;
    });
  var Dn = function(t) {
    if (void 0 === t)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    return t;
  };
  var Ln = function(t, e) {
      return !e || ("object" !== On(e) && "function" != typeof e) ? Dn(t) : e;
    },
    Sn = a(function(t) {
      function e(n, i) {
        return (
          (t.exports = e =
            Object.setPrototypeOf ||
            function(t, e) {
              return (t.__proto__ = e), t;
            }),
          e(n, i)
        );
      }
      t.exports = e;
    });
  var Nn = function(t, e) {
    if ("function" != typeof e && null !== e)
      throw new TypeError("Super expression must either be null or a function");
    (t.prototype = Object.create(e && e.prototype, {
      constructor: { value: t, writable: !0, configurable: !0 }
    })),
      e && Sn(t, e);
  };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class kn {
    static get cssClasses() {
      return {};
    }
    static get strings() {
      return {};
    }
    static get numbers() {
      return {};
    }
    static get defaultAdapter() {
      return {};
    }
    constructor(t = {}) {
      this.adapter_ = t;
    }
    init() {}
    destroy() {}
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Rn {
    static attachTo(t) {
      return new Rn(t, new kn());
    }
    constructor(t, e, ...n) {
      (this.root_ = t),
        this.initialize(...n),
        (this.foundation_ = void 0 === e ? this.getDefaultFoundation() : e),
        this.foundation_.init(),
        this.initialSyncWithDOM();
    }
    initialize() {}
    getDefaultFoundation() {
      throw new Error(
        "Subclasses must override getDefaultFoundation to return a properly configured foundation class"
      );
    }
    initialSyncWithDOM() {}
    destroy() {
      this.foundation_.destroy();
    }
    listen(t, e) {
      this.root_.addEventListener(t, e);
    }
    unlisten(t, e) {
      this.root_.removeEventListener(t, e);
    }
    emit(t, e, n = !1) {
      let i;
      "function" == typeof CustomEvent
        ? (i = new CustomEvent(t, { detail: e, bubbles: n }))
        : ((i = document.createEvent("CustomEvent")),
          i.initCustomEvent(t, n, !1, e)),
        this.root_.dispatchEvent(i);
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const xn = {
      ROOT: "mdc-ripple-upgraded",
      UNBOUNDED: "mdc-ripple-upgraded--unbounded",
      BG_FOCUSED: "mdc-ripple-upgraded--background-focused",
      FG_ACTIVATION: "mdc-ripple-upgraded--foreground-activation",
      FG_DEACTIVATION: "mdc-ripple-upgraded--foreground-deactivation"
    },
    wn = {
      VAR_LEFT: "--mdc-ripple-left",
      VAR_TOP: "--mdc-ripple-top",
      VAR_FG_SIZE: "--mdc-ripple-fg-size",
      VAR_FG_SCALE: "--mdc-ripple-fg-scale",
      VAR_FG_TRANSLATE_START: "--mdc-ripple-fg-translate-start",
      VAR_FG_TRANSLATE_END: "--mdc-ripple-fg-translate-end"
    },
    Hn = {
      PADDING: 10,
      INITIAL_ORIGIN_SCALE: 0.6,
      DEACTIVATION_TIMEOUT_MS: 225,
      FG_DEACTIVATION_MS: 150,
      TAP_DELAY_MS: 300
    };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  let Mn, Pn;
  function jn(t, e = !1) {
    let n = Mn;
    if ("boolean" == typeof Mn && !e) return n;
    if (!(t.CSS && "function" == typeof t.CSS.supports)) return;
    const i = t.CSS.supports("--css-vars", "yes"),
      a =
        t.CSS.supports("(--css-vars: yes)") &&
        t.CSS.supports("color", "#00000000");
    return (
      (n =
        !(!i && !a) &&
        !(function(t) {
          const e = t.document,
            n = e.createElement("div");
          (n.className = "mdc-ripple-surface--test-edge-var-bug"),
            e.body.appendChild(n);
          const i = t.getComputedStyle(n),
            a = null !== i && "solid" === i.borderTopStyle;
          return n.remove(), a;
        })(t)),
      e || (Mn = n),
      n
    );
  }
  function Fn(t = window, e = !1) {
    if (void 0 === Pn || e) {
      let e = !1;
      try {
        t.document.addEventListener("test", null, {
          get passive() {
            e = !0;
          }
        });
      } catch (t) {}
      Pn = e;
    }
    return !!Pn && { passive: !0 };
  }
  function Bn(t) {
    return ["webkitMatchesSelector", "msMatchesSelector", "matches"]
      .filter(e => e in t)
      .pop();
  }
  function Vn(t, e, n) {
    const { x: i, y: a } = e,
      s = i + n.left,
      r = a + n.top;
    let o, l;
    return (
      "touchstart" === t.type
        ? ((o = t.changedTouches[0].pageX - s),
          (l = t.changedTouches[0].pageY - r))
        : ((o = t.pageX - s), (l = t.pageY - r)),
      { x: o, y: l }
    );
  }
  var Un = Object.freeze({
    __proto__: null,
    supportsCssVariables: jn,
    applyPassive: Fn,
    getMatchesProperty: Bn,
    getNormalizedEventCoords: Vn
  });
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const Wn = ["touchstart", "pointerdown", "mousedown", "keydown"],
    Gn = ["touchend", "pointerup", "mouseup"];
  let zn = [];
  class Kn extends kn {
    static get cssClasses() {
      return xn;
    }
    static get strings() {
      return wn;
    }
    static get numbers() {
      return Hn;
    }
    static get defaultAdapter() {
      return {
        browserSupportsCssVars: () => {},
        isUnbounded: () => {},
        isSurfaceActive: () => {},
        isSurfaceDisabled: () => {},
        addClass: () => {},
        removeClass: () => {},
        containsEventTarget: () => {},
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {},
        registerDocumentInteractionHandler: () => {},
        deregisterDocumentInteractionHandler: () => {},
        registerResizeHandler: () => {},
        deregisterResizeHandler: () => {},
        updateCssVariable: () => {},
        computeBoundingRect: () => {},
        getWindowPageOffset: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Kn.defaultAdapter, t)),
        (this.layoutFrame_ = 0),
        (this.frame_ = { width: 0, height: 0 }),
        (this.activationState_ = this.defaultActivationState_()),
        (this.initialSize_ = 0),
        (this.maxRadius_ = 0),
        (this.activateHandler_ = t => this.activate_(t)),
        (this.deactivateHandler_ = t => this.deactivate_(t)),
        (this.focusHandler_ = () => this.handleFocus()),
        (this.blurHandler_ = () => this.handleBlur()),
        (this.resizeHandler_ = () => this.layout()),
        (this.unboundedCoords_ = { left: 0, top: 0 }),
        (this.fgScale_ = 0),
        (this.activationTimer_ = 0),
        (this.fgDeactivationRemovalTimer_ = 0),
        (this.activationAnimationHasEnded_ = !1),
        (this.activationTimerCallback_ = () => {
          (this.activationAnimationHasEnded_ = !0),
            this.runDeactivationUXLogicIfReady_();
        }),
        (this.previousActivationEvent_ = null);
    }
    supportsPressRipple_() {
      return this.adapter_.browserSupportsCssVars();
    }
    defaultActivationState_() {
      return {
        isActivated: !1,
        hasDeactivationUXRun: !1,
        wasActivatedByPointer: !1,
        wasElementMadeActive: !1,
        activationEvent: null,
        isProgrammatic: !1
      };
    }
    init() {
      const t = this.supportsPressRipple_();
      if ((this.registerRootHandlers_(t), t)) {
        const { ROOT: t, UNBOUNDED: e } = Kn.cssClasses;
        requestAnimationFrame(() => {
          this.adapter_.addClass(t),
            this.adapter_.isUnbounded() &&
              (this.adapter_.addClass(e), this.layoutInternal_());
        });
      }
    }
    destroy() {
      if (this.supportsPressRipple_()) {
        this.activationTimer_ &&
          (clearTimeout(this.activationTimer_),
          (this.activationTimer_ = 0),
          this.adapter_.removeClass(Kn.cssClasses.FG_ACTIVATION)),
          this.fgDeactivationRemovalTimer_ &&
            (clearTimeout(this.fgDeactivationRemovalTimer_),
            (this.fgDeactivationRemovalTimer_ = 0),
            this.adapter_.removeClass(Kn.cssClasses.FG_DEACTIVATION));
        const { ROOT: t, UNBOUNDED: e } = Kn.cssClasses;
        requestAnimationFrame(() => {
          this.adapter_.removeClass(t),
            this.adapter_.removeClass(e),
            this.removeCssVars_();
        });
      }
      this.deregisterRootHandlers_(), this.deregisterDeactivationHandlers_();
    }
    registerRootHandlers_(t) {
      t &&
        (Wn.forEach(t => {
          this.adapter_.registerInteractionHandler(t, this.activateHandler_);
        }),
        this.adapter_.isUnbounded() &&
          this.adapter_.registerResizeHandler(this.resizeHandler_)),
        this.adapter_.registerInteractionHandler("focus", this.focusHandler_),
        this.adapter_.registerInteractionHandler("blur", this.blurHandler_);
    }
    registerDeactivationHandlers_(t) {
      "keydown" === t.type
        ? this.adapter_.registerInteractionHandler(
            "keyup",
            this.deactivateHandler_
          )
        : Gn.forEach(t => {
            this.adapter_.registerDocumentInteractionHandler(
              t,
              this.deactivateHandler_
            );
          });
    }
    deregisterRootHandlers_() {
      Wn.forEach(t => {
        this.adapter_.deregisterInteractionHandler(t, this.activateHandler_);
      }),
        this.adapter_.deregisterInteractionHandler("focus", this.focusHandler_),
        this.adapter_.deregisterInteractionHandler("blur", this.blurHandler_),
        this.adapter_.isUnbounded() &&
          this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    }
    deregisterDeactivationHandlers_() {
      this.adapter_.deregisterInteractionHandler(
        "keyup",
        this.deactivateHandler_
      ),
        Gn.forEach(t => {
          this.adapter_.deregisterDocumentInteractionHandler(
            t,
            this.deactivateHandler_
          );
        });
    }
    removeCssVars_() {
      const { strings: t } = Kn;
      Object.keys(t).forEach(e => {
        0 === e.indexOf("VAR_") && this.adapter_.updateCssVariable(t[e], null);
      });
    }
    activate_(t) {
      if (this.adapter_.isSurfaceDisabled()) return;
      const e = this.activationState_;
      if (e.isActivated) return;
      const n = this.previousActivationEvent_;
      if (n && t && n.type !== t.type) return;
      (e.isActivated = !0),
        (e.isProgrammatic = null === t),
        (e.activationEvent = t),
        (e.wasActivatedByPointer =
          !e.isProgrammatic &&
          ("mousedown" === t.type ||
            "touchstart" === t.type ||
            "pointerdown" === t.type));
      t && zn.length > 0 && zn.some(t => this.adapter_.containsEventTarget(t))
        ? this.resetActivationState_()
        : (t && (zn.push(t.target), this.registerDeactivationHandlers_(t)),
          (e.wasElementMadeActive = this.checkElementMadeActive_(t)),
          e.wasElementMadeActive && this.animateActivation_(),
          requestAnimationFrame(() => {
            (zn = []),
              e.wasElementMadeActive ||
                (" " !== t.key && 32 !== t.keyCode) ||
                ((e.wasElementMadeActive = this.checkElementMadeActive_(t)),
                e.wasElementMadeActive && this.animateActivation_()),
              e.wasElementMadeActive ||
                (this.activationState_ = this.defaultActivationState_());
          }));
    }
    checkElementMadeActive_(t) {
      return !t || "keydown" !== t.type || this.adapter_.isSurfaceActive();
    }
    activate(t = null) {
      this.activate_(t);
    }
    animateActivation_() {
      const { VAR_FG_TRANSLATE_START: t, VAR_FG_TRANSLATE_END: e } = Kn.strings,
        { FG_DEACTIVATION: n, FG_ACTIVATION: i } = Kn.cssClasses,
        { DEACTIVATION_TIMEOUT_MS: a } = Kn.numbers;
      this.layoutInternal_();
      let s = "",
        r = "";
      if (!this.adapter_.isUnbounded()) {
        const {
          startPoint: t,
          endPoint: e
        } = this.getFgTranslationCoordinates_();
        (s = `${t.x}px, ${t.y}px`), (r = `${e.x}px, ${e.y}px`);
      }
      this.adapter_.updateCssVariable(t, s),
        this.adapter_.updateCssVariable(e, r),
        clearTimeout(this.activationTimer_),
        clearTimeout(this.fgDeactivationRemovalTimer_),
        this.rmBoundedActivationClasses_(),
        this.adapter_.removeClass(n),
        this.adapter_.computeBoundingRect(),
        this.adapter_.addClass(i),
        (this.activationTimer_ = setTimeout(
          () => this.activationTimerCallback_(),
          a
        ));
    }
    getFgTranslationCoordinates_() {
      const {
        activationEvent: t,
        wasActivatedByPointer: e
      } = this.activationState_;
      let n;
      (n = e
        ? Vn(
            t,
            this.adapter_.getWindowPageOffset(),
            this.adapter_.computeBoundingRect()
          )
        : { x: this.frame_.width / 2, y: this.frame_.height / 2 }),
        (n = {
          x: n.x - this.initialSize_ / 2,
          y: n.y - this.initialSize_ / 2
        });
      return {
        startPoint: n,
        endPoint: {
          x: this.frame_.width / 2 - this.initialSize_ / 2,
          y: this.frame_.height / 2 - this.initialSize_ / 2
        }
      };
    }
    runDeactivationUXLogicIfReady_() {
      const { FG_DEACTIVATION: t } = Kn.cssClasses,
        { hasDeactivationUXRun: e, isActivated: n } = this.activationState_;
      (e || !n) &&
        this.activationAnimationHasEnded_ &&
        (this.rmBoundedActivationClasses_(),
        this.adapter_.addClass(t),
        (this.fgDeactivationRemovalTimer_ = setTimeout(() => {
          this.adapter_.removeClass(t);
        }, Hn.FG_DEACTIVATION_MS)));
    }
    rmBoundedActivationClasses_() {
      const { FG_ACTIVATION: t } = Kn.cssClasses;
      this.adapter_.removeClass(t),
        (this.activationAnimationHasEnded_ = !1),
        this.adapter_.computeBoundingRect();
    }
    resetActivationState_() {
      (this.previousActivationEvent_ = this.activationState_.activationEvent),
        (this.activationState_ = this.defaultActivationState_()),
        setTimeout(
          () => (this.previousActivationEvent_ = null),
          Kn.numbers.TAP_DELAY_MS
        );
    }
    deactivate_(t) {
      const e = this.activationState_;
      if (!e.isActivated) return;
      const n = Object.assign({}, e);
      if (e.isProgrammatic) {
        const t = null;
        requestAnimationFrame(() => this.animateDeactivation_(t, n)),
          this.resetActivationState_();
      } else
        this.deregisterDeactivationHandlers_(),
          requestAnimationFrame(() => {
            (this.activationState_.hasDeactivationUXRun = !0),
              this.animateDeactivation_(t, n),
              this.resetActivationState_();
          });
    }
    deactivate(t = null) {
      this.deactivate_(t);
    }
    animateDeactivation_(
      t,
      { wasActivatedByPointer: e, wasElementMadeActive: n }
    ) {
      (e || n) && this.runDeactivationUXLogicIfReady_();
    }
    layout() {
      this.layoutFrame_ && cancelAnimationFrame(this.layoutFrame_),
        (this.layoutFrame_ = requestAnimationFrame(() => {
          this.layoutInternal_(), (this.layoutFrame_ = 0);
        }));
    }
    layoutInternal_() {
      this.frame_ = this.adapter_.computeBoundingRect();
      const t = Math.max(this.frame_.height, this.frame_.width);
      (this.maxRadius_ = this.adapter_.isUnbounded()
        ? t
        : (() =>
            Math.sqrt(
              Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2)
            ) + Kn.numbers.PADDING)()),
        (this.initialSize_ = t * Kn.numbers.INITIAL_ORIGIN_SCALE),
        (this.fgScale_ = this.maxRadius_ / this.initialSize_),
        this.updateLayoutCssVars_();
    }
    updateLayoutCssVars_() {
      const {
        VAR_FG_SIZE: t,
        VAR_LEFT: e,
        VAR_TOP: n,
        VAR_FG_SCALE: i
      } = Kn.strings;
      this.adapter_.updateCssVariable(t, this.initialSize_ + "px"),
        this.adapter_.updateCssVariable(i, this.fgScale_),
        this.adapter_.isUnbounded() &&
          ((this.unboundedCoords_ = {
            left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
            top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
          }),
          this.adapter_.updateCssVariable(e, this.unboundedCoords_.left + "px"),
          this.adapter_.updateCssVariable(n, this.unboundedCoords_.top + "px"));
    }
    setUnbounded(t) {
      const { UNBOUNDED: e } = Kn.cssClasses;
      t ? this.adapter_.addClass(e) : this.adapter_.removeClass(e);
    }
    handleFocus() {
      requestAnimationFrame(() =>
        this.adapter_.addClass(Kn.cssClasses.BG_FOCUSED)
      );
    }
    handleBlur() {
      requestAnimationFrame(() =>
        this.adapter_.removeClass(Kn.cssClasses.BG_FOCUSED)
      );
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class qn extends Rn {
    constructor(...t) {
      super(...t), (this.disabled = !1), this.unbounded_;
    }
    static attachTo(t, { isUnbounded: e } = {}) {
      const n = new qn(t);
      return void 0 !== e && (n.unbounded = e), n;
    }
    static createAdapter(t) {
      const e = Bn(HTMLElement.prototype);
      return {
        browserSupportsCssVars: () => jn(window),
        isUnbounded: () => t.unbounded,
        isSurfaceActive: () => t.root_[e](":active"),
        isSurfaceDisabled: () => t.disabled,
        addClass: e => t.root_.classList.add(e),
        removeClass: e => t.root_.classList.remove(e),
        containsEventTarget: e => t.root_.contains(e),
        registerInteractionHandler: (e, n) =>
          t.root_.addEventListener(e, n, Fn()),
        deregisterInteractionHandler: (e, n) =>
          t.root_.removeEventListener(e, n, Fn()),
        registerDocumentInteractionHandler: (t, e) =>
          document.documentElement.addEventListener(t, e, Fn()),
        deregisterDocumentInteractionHandler: (t, e) =>
          document.documentElement.removeEventListener(t, e, Fn()),
        registerResizeHandler: t => window.addEventListener("resize", t),
        deregisterResizeHandler: t => window.removeEventListener("resize", t),
        updateCssVariable: (e, n) => t.root_.style.setProperty(e, n),
        computeBoundingRect: () => t.root_.getBoundingClientRect(),
        getWindowPageOffset: () => ({
          x: window.pageXOffset,
          y: window.pageYOffset
        })
      };
    }
    get unbounded() {
      return this.unbounded_;
    }
    set unbounded(t) {
      (this.unbounded_ = Boolean(t)), this.setUnbounded_();
    }
    setUnbounded_() {
      this.foundation_.setUnbounded(this.unbounded_);
    }
    activate() {
      this.foundation_.activate();
    }
    deactivate() {
      this.foundation_.deactivate();
    }
    layout() {
      this.foundation_.layout();
    }
    getDefaultFoundation() {
      return new Kn(qn.createAdapter(this));
    }
    initialSyncWithDOM() {
      this.unbounded = "mdcRippleIsUnbounded" in this.root_.dataset;
    }
  }
  class Xn {}
  Xn.prototype.root_, Xn.prototype.unbounded, Xn.prototype.disabled;
  var Jn = Object.freeze({
    __proto__: null,
    MDCRipple: qn,
    MDCRippleFoundation: Kn,
    RippleCapableSurface: Xn,
    util: Un
  });
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const $n = {
      ROOT: "mdc-dialog",
      OPEN: "mdc-dialog--open",
      ANIMATING: "mdc-dialog--animating",
      BACKDROP: "mdc-dialog__backdrop",
      SCROLL_LOCK: "mdc-dialog-scroll-lock",
      ACCEPT_BTN: "mdc-dialog__footer__button--accept",
      CANCEL_BTN: "mdc-dialog__footer__button--cancel"
    },
    Yn = {
      OPEN_DIALOG_SELECTOR: ".mdc-dialog--open",
      DIALOG_SURFACE_SELECTOR: ".mdc-dialog__surface",
      ACCEPT_SELECTOR: ".mdc-dialog__footer__button--accept",
      ACCEPT_EVENT: "MDCDialog:accept",
      CANCEL_EVENT: "MDCDialog:cancel"
    },
    Qn = { DIALOG_ANIMATION_TIME_MS: 120 };
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class Zn extends kn {
    static get cssClasses() {
      return $n;
    }
    static get strings() {
      return Yn;
    }
    static get numbers() {
      return Qn;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        addBodyClass: () => {},
        removeBodyClass: () => {},
        eventTargetHasClass: () => !1,
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {},
        registerSurfaceInteractionHandler: () => {},
        deregisterSurfaceInteractionHandler: () => {},
        registerDocumentKeydownHandler: () => {},
        deregisterDocumentKeydownHandler: () => {},
        notifyAccept: () => {},
        notifyCancel: () => {},
        trapFocusOnSurface: () => {},
        untrapFocusOnSurface: () => {},
        isDialog: () => !1
      };
    }
    constructor(t) {
      super(Object.assign(Zn.defaultAdapter, t)),
        (this.isOpen_ = !1),
        (this.componentClickHandler_ = t => {
          this.adapter_.eventTargetHasClass(t.target, $n.BACKDROP) &&
            this.cancel(!0);
        }),
        (this.dialogClickHandler_ = t => this.handleDialogClick_(t)),
        (this.documentKeydownHandler_ = t => {
          ((t.key && "Escape" === t.key) || 27 === t.keyCode) &&
            this.cancel(!0);
        }),
        (this.timerId_ = 0),
        (this.animationTimerEnd_ = t => this.handleAnimationTimerEnd_(t));
    }
    destroy() {
      this.isOpen_ && this.close(),
        this.adapter_.removeClass(Zn.cssClasses.ANIMATING),
        clearTimeout(this.timerId_);
    }
    open() {
      (this.isOpen_ = !0),
        this.disableScroll_(),
        this.adapter_.registerDocumentKeydownHandler(
          this.documentKeydownHandler_
        ),
        this.adapter_.registerSurfaceInteractionHandler(
          "click",
          this.dialogClickHandler_
        ),
        this.adapter_.registerInteractionHandler(
          "click",
          this.componentClickHandler_
        ),
        clearTimeout(this.timerId_),
        (this.timerId_ = setTimeout(
          this.animationTimerEnd_,
          Zn.numbers.DIALOG_ANIMATION_TIME_MS
        )),
        this.adapter_.addClass(Zn.cssClasses.ANIMATING),
        this.adapter_.addClass(Zn.cssClasses.OPEN);
    }
    close() {
      (this.isOpen_ = !1),
        this.enableScroll_(),
        this.adapter_.deregisterSurfaceInteractionHandler(
          "click",
          this.dialogClickHandler_
        ),
        this.adapter_.deregisterDocumentKeydownHandler(
          this.documentKeydownHandler_
        ),
        this.adapter_.deregisterInteractionHandler(
          "click",
          this.componentClickHandler_
        ),
        this.adapter_.untrapFocusOnSurface(),
        clearTimeout(this.timerId_),
        (this.timerId_ = setTimeout(
          this.animationTimerEnd_,
          Zn.numbers.DIALOG_ANIMATION_TIME_MS
        )),
        this.adapter_.addClass(Zn.cssClasses.ANIMATING),
        this.adapter_.removeClass(Zn.cssClasses.OPEN);
    }
    isOpen() {
      return this.isOpen_;
    }
    accept(t) {
      t && this.adapter_.notifyAccept(), this.close();
    }
    cancel(t) {
      t && this.adapter_.notifyCancel(), this.close();
    }
    handleDialogClick_(t) {
      const { target: e } = t;
      this.adapter_.eventTargetHasClass(e, $n.ACCEPT_BTN)
        ? this.accept(!0)
        : this.adapter_.eventTargetHasClass(e, $n.CANCEL_BTN) &&
          this.cancel(!0);
    }
    handleAnimationTimerEnd_() {
      this.adapter_.removeClass(Zn.cssClasses.ANIMATING),
        this.isOpen_ && this.adapter_.trapFocusOnSurface();
    }
    disableScroll_() {
      this.adapter_.addBodyClass($n.SCROLL_LOCK);
    }
    enableScroll_() {
      this.adapter_.removeBodyClass($n.SCROLL_LOCK);
    }
  }
  var ti = null;
  function ei(t) {
    t &&
      t.focus &&
      t !== document.activeElement &&
      (t.focus(), "input" === t.tagName.toLowerCase() && t.select());
  }
  var ni = function(t, e) {
    var n = [],
      i = null,
      a = null,
      s = null,
      r = !1,
      o = !1,
      l = null,
      c = "string" == typeof t ? document.querySelector(t) : t,
      d = e || {};
    (d.returnFocusOnDeactivate =
      !e || void 0 === e.returnFocusOnDeactivate || e.returnFocusOnDeactivate),
      (d.escapeDeactivates =
        !e || void 0 === e.escapeDeactivates || e.escapeDeactivates);
    var u = {
      activate: function(t) {
        if (r) return;
        var e = {
          onActivate: t && void 0 !== t.onActivate ? t.onActivate : d.onActivate
        };
        (r = !0),
          (o = !1),
          (s = document.activeElement),
          e.onActivate && e.onActivate();
        return p(), u;
      },
      deactivate: h,
      pause: function() {
        if (o || !r) return;
        (o = !0), _();
      },
      unpause: function() {
        if (!o || !r) return;
        (o = !1), p();
      }
    };
    return u;
    function h(t) {
      if (r) {
        var e = {
          returnFocus:
            t && void 0 !== t.returnFocus
              ? t.returnFocus
              : d.returnFocusOnDeactivate,
          onDeactivate:
            t && void 0 !== t.onDeactivate ? t.onDeactivate : d.onDeactivate
        };
        return (
          _(),
          e.onDeactivate && e.onDeactivate(),
          e.returnFocus &&
            setTimeout(function() {
              ei(s);
            }, 0),
          (r = !1),
          (o = !1),
          this
        );
      }
    }
    function p() {
      if (r)
        return (
          ti && ti.pause(),
          (ti = u),
          b(),
          setTimeout(function() {
            ei(
              (function() {
                var t;
                t =
                  null !== f("initialFocus")
                    ? f("initialFocus")
                    : c.contains(document.activeElement)
                    ? document.activeElement
                    : n[0] || f("fallbackFocus");
                if (!t)
                  throw new Error(
                    "You can't have a focus-trap without at least one focusable element"
                  );
                return t;
              })()
            );
          }, 0),
          document.addEventListener("focus", g, !0),
          document.addEventListener("click", v, !0),
          document.addEventListener("mousedown", m, !0),
          document.addEventListener("touchstart", m, !0),
          document.addEventListener("keydown", C, !0),
          u
        );
    }
    function _() {
      if (r && ti === u)
        return (
          document.removeEventListener("focus", g, !0),
          document.removeEventListener("click", v, !0),
          document.removeEventListener("mousedown", m, !0),
          document.removeEventListener("touchstart", m, !0),
          document.removeEventListener("keydown", C, !0),
          (ti = null),
          u
        );
    }
    function f(t) {
      var e = d[t],
        n = e;
      if (!e) return null;
      if ("string" == typeof e && !(n = document.querySelector(e)))
        throw new Error("`" + t + "` refers to no known node");
      if ("function" == typeof e && !(n = e()))
        throw new Error("`" + t + "` did not return a node");
      return n;
    }
    function m(t) {
      d.clickOutsideDeactivates &&
        !c.contains(t.target) &&
        h({ returnFocus: !1 });
    }
    function v(t) {
      d.clickOutsideDeactivates ||
        c.contains(t.target) ||
        (t.preventDefault(), t.stopImmediatePropagation());
    }
    function g(t) {
      c.contains(t.target) ||
        (t.preventDefault(),
        t.stopImmediatePropagation(),
        "function" == typeof t.target.blur && t.target.blur(),
        l &&
          (function(t) {
            if (t.shiftKey) return ei(a);
            ei(i);
          })(l));
    }
    function C(t) {
      ("Tab" !== t.key && 9 !== t.keyCode) ||
        (function(t) {
          if (
            (b(),
            t.target.hasAttribute("tabindex") &&
              Number(t.target.getAttribute("tabindex")) < 0)
          )
            return (l = t);
          t.preventDefault();
          var e = n.indexOf(t.target);
          if (t.shiftKey)
            return t.target === i || -1 === n.indexOf(t.target)
              ? ei(a)
              : ei(n[e - 1]);
          if (t.target === a) return ei(i);
          ei(n[e + 1]);
        })(t),
        !1 !== d.escapeDeactivates &&
          (function(t) {
            return "Escape" === t.key || "Esc" === t.key || 27 === t.keyCode;
          })(t) &&
          h();
    }
    function b() {
      (n = (function(t, e) {
        e = e || {};
        var n,
          i,
          a,
          s = t.ownerDocument || t,
          r = [],
          o = [],
          l = (function(t) {
            var e = [];
            function n(i, a) {
              if (i === t.documentElement) return !1;
              for (var s = 0, r = e.length; s < r; s++)
                if (e[s][0] === i) return e[s][1];
              var o = !1;
              return (
                "none" === (a = a || t.defaultView.getComputedStyle(i)).display
                  ? (o = !0)
                  : i.parentNode && (o = n(i.parentNode)),
                e.push([i, o]),
                o
              );
            }
            return function(e) {
              if (e === t.documentElement) return !1;
              var i = t.defaultView.getComputedStyle(e);
              return !!n(e, i) || "hidden" === i.visibility;
            };
          })(s),
          c = [
            "input",
            "select",
            "a[href]",
            "textarea",
            "button",
            "[tabindex]"
          ],
          d = t.querySelectorAll(c.join(","));
        if (e.includeContainer) {
          var u =
            Element.prototype.matches ||
            Element.prototype.msMatchesSelector ||
            Element.prototype.webkitMatchesSelector;
          c.some(function(e) {
            return u.call(t, e);
          }) && (d = Array.prototype.slice.apply(d)).unshift(t);
        }
        for (var h = 0, p = d.length; h < p; h++)
          (n = d[h]),
            (i = parseInt(n.getAttribute("tabindex"), 10)),
            (a = isNaN(i) ? n.tabIndex : i) < 0 ||
              ("INPUT" === n.tagName && "hidden" === n.type) ||
              n.disabled ||
              l(n, s) ||
              (0 === a
                ? r.push(n)
                : o.push({ index: h, tabIndex: a, node: n }));
        var _ = o
          .sort(function(t, e) {
            return t.tabIndex === e.tabIndex
              ? t.index - e.index
              : t.tabIndex - e.tabIndex;
          })
          .map(function(t) {
            return t.node;
          });
        return Array.prototype.push.apply(_, r), _;
      })(c)),
        (i = n[0]),
        (a = n[n.length - 1]);
    }
  };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ function ii(t, e, n = ni) {
    return n(t, { initialFocus: e, clickOutsideDeactivates: !0 });
  }
  var ai = Object.freeze({ __proto__: null, createFocusTrapInstance: ii });
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class si extends Rn {
    static attachTo(t) {
      return new si(t);
    }
    get open() {
      return this.foundation_.isOpen();
    }
    get acceptButton_() {
      return this.root_.querySelector(Zn.strings.ACCEPT_SELECTOR);
    }
    get dialogSurface_() {
      return this.root_.querySelector(Zn.strings.DIALOG_SURFACE_SELECTOR);
    }
    initialize() {
      (this.focusTrap_ = ii(this.dialogSurface_, this.acceptButton_)),
        (this.footerBtnRipples_ = []);
      const t = this.root_.querySelectorAll(".mdc-dialog__footer__button");
      for (let e, n = 0; (e = t[n]); n++)
        this.footerBtnRipples_.push(new qn(e));
    }
    destroy() {
      this.footerBtnRipples_.forEach(t => t.destroy()), super.destroy();
    }
    show() {
      this.foundation_.open();
    }
    close() {
      this.foundation_.close();
    }
    getDefaultFoundation() {
      return new Zn({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        addBodyClass: t => document.body.classList.add(t),
        removeBodyClass: t => document.body.classList.remove(t),
        eventTargetHasClass: (t, e) => t.classList.contains(e),
        registerInteractionHandler: (t, e) => this.root_.addEventListener(t, e),
        deregisterInteractionHandler: (t, e) =>
          this.root_.removeEventListener(t, e),
        registerSurfaceInteractionHandler: (t, e) =>
          this.dialogSurface_.addEventListener(t, e),
        deregisterSurfaceInteractionHandler: (t, e) =>
          this.dialogSurface_.removeEventListener(t, e),
        registerDocumentKeydownHandler: t =>
          document.addEventListener("keydown", t),
        deregisterDocumentKeydownHandler: t =>
          document.removeEventListener("keydown", t),
        notifyAccept: () => this.emit(Zn.strings.ACCEPT_EVENT),
        notifyCancel: () => this.emit(Zn.strings.CANCEL_EVENT),
        trapFocusOnSurface: () => this.focusTrap_.activate(),
        untrapFocusOnSurface: () => this.focusTrap_.deactivate(),
        isDialog: t => t === this.dialogSurface_
      });
    }
  }
  var ri = Object.freeze({
      __proto__: null,
      MDCDialogFoundation: Zn,
      util: ai,
      MDCDialog: si
    }),
    oi = a(function(t, e) {
      var n;
      function i(t, e, i) {
        if (!i || typeof i.value !== n.typeOfFunction)
          throw new TypeError(
            "Only methods can be decorated with @bind. <" +
              e +
              "> is not a method!"
          );
        return {
          configurable: n.boolTrue,
          get: function() {
            var t = i.value.bind(this);
            return (
              Object.defineProperty(this, e, {
                value: t,
                configurable: n.boolTrue,
                writable: n.boolTrue
              }),
              t
            );
          }
        };
      }
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (function(t) {
          (t.typeOfFunction = "function"), (t.boolTrue = !0);
        })(n || (n = {})),
        (e.bind = i),
        (e.default = i);
    });
  i(oi);
  oi.bind;
  var li = a(function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.default = e.MaterialComponent = void 0);
    var n = Cn(Tn),
      i = Cn(An),
      a = Cn(Ln),
      s = Cn(bn),
      r = Cn(Nn),
      o = Cn(On),
      l = ["disabled"],
      c = (function(t) {
        function e() {
          return (
            (0, n.default)(this, e),
            (0, a.default)(this, (0, s.default)(e).apply(this, arguments))
          );
        }
        return (
          (0, r.default)(e, t),
          (0, i.default)(e, [
            {
              key: "render",
              value: function(t) {
                this.classText || (this.classText = this.buildClassName(t));
                var e = t,
                  n = e.className || e.class || "";
                e.class && delete e.class, e.className && delete e.className;
                var i = this.materialDom(e),
                  a = "attributes";
                return (
                  "props" in i
                    ? ((a = "props"), (i.props = i.props || {}))
                    : (i.attributes = i.attributes || {}),
                  (i[a].className = ""
                    .concat(n, " ")
                    .concat(this.getClassName(i))
                    .split(" ")
                    .filter(function(t, e, n) {
                      return n.indexOf(t) === e && "" !== t;
                    })
                    .join(" ")),
                  this.mdcProps.forEach(function(t) {
                    t in l || delete i[a][t];
                  }),
                  i
                );
              }
            },
            {
              key: "componentDidMount",
              value: function() {
                this.props.ripple &&
                  this.control &&
                  (this.ripple = new Jn.MDCRipple(this.control));
              }
            },
            {
              key: "componentWillReceiveProps",
              value: function(t) {
                if (this.MDComponent && this.mdcNotifyProps) {
                  var e = !0,
                    n = !1,
                    i = void 0;
                  try {
                    for (
                      var a, s = this.mdcNotifyProps[Symbol.iterator]();
                      !(e = (a = s.next()).done);
                      e = !0
                    ) {
                      var r = a.value;
                      this.props[r] !== t[r] && (this.MDComponent[r] = t[r]);
                    }
                  } catch (t) {
                    (n = !0), (i = t);
                  } finally {
                    try {
                      e || null == s.return || s.return();
                    } finally {
                      if (n) throw i;
                    }
                  }
                }
                var o = !0,
                  l = !1,
                  c = void 0;
                try {
                  for (
                    var d, u = this.mdcProps[Symbol.iterator]();
                    !(o = (d = u.next()).done);
                    o = !0
                  ) {
                    var h = d.value;
                    if (this.props[h] !== t[h]) {
                      this.classText = this.buildClassName(t);
                      break;
                    }
                  }
                } catch (t) {
                  (l = !0), (c = t);
                } finally {
                  try {
                    o || null == u.return || u.return();
                  } finally {
                    if (l) throw c;
                  }
                }
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                this.ripple && this.ripple.destroy();
              }
            },
            {
              key: "afterComponentDidMount",
              value: function() {
                if (this.MDComponent && this.mdcNotifyProps) {
                  var t = !0,
                    e = !1,
                    n = void 0;
                  try {
                    for (
                      var i, a = this.mdcNotifyProps[Symbol.iterator]();
                      !(t = (i = a.next()).done);
                      t = !0
                    ) {
                      var s = i.value;
                      this.MDComponent[s] = this.props[s];
                    }
                  } catch (t) {
                    (e = !0), (n = t);
                  } finally {
                    try {
                      t || null == a.return || a.return();
                    } finally {
                      if (e) throw n;
                    }
                  }
                }
              }
            },
            {
              key: "setControlRef",
              value: function(t) {
                this.control = t;
              }
            },
            {
              key: "buildClassName",
              value: function(t) {
                var e = "mdc-" + this.componentName;
                for (var n in t)
                  if (t.hasOwnProperty(n)) {
                    var i = t[n];
                    "boolean" == typeof i &&
                      i &&
                      -1 !== this.mdcProps.indexOf(n) &&
                      (e += " mdc-".concat(this.componentName, "--").concat(n));
                  }
                return e;
              }
            },
            {
              key: "getClassName",
              value: function(t) {
                if (!t) return "";
                var e = "attributes";
                "props" in t
                  ? ((e = "props"), (t.props = t.props || {}))
                  : (t.attributes = t.attributes || {});
                var n = (t[e] = t[e] || {}),
                  i = this.classText;
                return (
                  n.class && (i += " " + n.class),
                  n.className &&
                    n.className !== n.class &&
                    (i += " " + n.className),
                  i
                );
              }
            }
          ]),
          e
        );
      })(gn.Component);
    (e.MaterialComponent = c),
      (function(t, e, n, i) {
        var a,
          s = arguments.length,
          r =
            s < 3
              ? e
              : null === i
              ? (i = Object.getOwnPropertyDescriptor(e, n))
              : i;
        if (
          "object" ===
            ("undefined" == typeof Reflect
              ? "undefined"
              : (0, o.default)(Reflect)) &&
          "function" == typeof Reflect.decorate
        )
          r = Reflect.decorate(t, e, n, i);
        else
          for (var l = t.length - 1; l >= 0; l--)
            (a = t[l]) &&
              (r = (s < 3 ? a(r) : s > 3 ? a(e, n, r) : a(e, n)) || r);
        s > 3 && r && Object.defineProperty(e, n, r);
      })([oi.bind], c.prototype, "setControlRef", null);
    var d = c;
    e.default = d;
  });
  i(li);
  li.MaterialComponent;
  var ci = a(function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.default = e.Icon = void 0);
    var n = Cn(Tn),
      i = Cn(An),
      a = Cn(Ln),
      s = Cn(bn),
      r = Cn(Nn),
      o = (function(t) {
        function e() {
          var t;
          return (
            (0, n.default)(this, e),
            ((t = (0, a.default)(
              this,
              (0, s.default)(e).apply(this, arguments)
            )).componentName = "icon"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, r.default)(e, t),
          (0, i.default)(e, [
            {
              key: "materialDom",
              value: function(t) {
                var e = ["material-icons"];
                return (
                  t.className && e.push(t.className),
                  (0, gn.h)(
                    "i",
                    Object.assign({}, t, { className: e.join(" ") }),
                    t.children
                  )
                );
              }
            }
          ]),
          e
        );
      })(Cn(li).default);
    e.Icon = o;
    var l = o;
    e.default = l;
  });
  i(ci);
  ci.Icon;
  var di = a(function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.default = function(t) {
        return "mdc-theme--".concat(t, "-bg");
      });
  });
  i(di);
  var ui = a(function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }),
      (e.default = e.Button = e.ButtonIcon = void 0);
    var n = Cn(An),
      i = Cn(Tn),
      a = Cn(Ln),
      s = Cn(bn),
      r = Cn(Nn),
      o = Cn(li),
      l = Cn(ci),
      c = Cn(di),
      d = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, a.default)(
              this,
              (0, s.default)(e).apply(this, arguments)
            )).componentName = "button__icon"),
            t
          );
        }
        return (0, r.default)(e, t), e;
      })(l.default);
    e.ButtonIcon = d;
    var u = (function(t) {
      function e() {
        var t;
        return (
          (0, i.default)(this, e),
          ((t = (0, a.default)(
            this,
            (0, s.default)(e).apply(this, arguments)
          )).componentName = "button"),
          (t.mdcProps = ["dense", "raised", "unelevated", "outlined"]),
          (t.themeProps = ["primary", "secondary"]),
          t
        );
      }
      return (
        (0, r.default)(e, t),
        (0, n.default)(e, [
          {
            key: "materialDom",
            value: function(t) {
              var e = t.href ? "a" : "button",
                n = "";
              return (
                this.themeProps.forEach(function(e) {
                  e in t && !1 !== t[e] && (n += (0, c.default)(e) + " ");
                }),
                (0, gn.h)(
                  e,
                  Object.assign({ ref: this.setControlRef }, t, {
                    className: n
                  }),
                  this.props.children
                )
              );
            }
          }
        ]),
        e
      );
    })(o.default);
    e.Button = u;
    var h = (function(t) {
      function e() {
        return (
          (0, i.default)(this, e),
          (0, a.default)(this, (0, s.default)(e).apply(this, arguments))
        );
      }
      return (0, r.default)(e, t), e;
    })(u);
    (e.default = h), (h.Icon = d);
  });
  i(ui);
  ui.Button, ui.ButtonIcon;
  var hi = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Dialog = e.DialogFooterButton = e.DialogFooter = e.DialogBody = e.DialogHeader = void 0);
      var n = Cn(En),
        i = Cn(Tn),
        a = Cn(An),
        s = Cn(Ln),
        r = Cn(bn),
        o = Cn(Nn),
        l = Cn(On),
        c = Cn(li),
        d = function(t, e, n, i) {
          var a,
            s = arguments.length,
            r =
              s < 3
                ? e
                : null === i
                ? (i = Object.getOwnPropertyDescriptor(e, n))
                : i;
          if (
            "object" ===
              ("undefined" == typeof Reflect
                ? "undefined"
                : (0, l.default)(Reflect)) &&
            "function" == typeof Reflect.decorate
          )
            r = Reflect.decorate(t, e, n, i);
          else
            for (var o = t.length - 1; o >= 0; o--)
              (a = t[o]) &&
                (r = (s < 3 ? a(r) : s > 3 ? a(e, n, r) : a(e, n)) || r);
          return s > 3 && r && Object.defineProperty(e, n, r), r;
        },
        u = (function(t) {
          function e() {
            var t;
            return (
              (0, i.default)(this, e),
              ((t = (0, s.default)(
                this,
                (0, r.default)(e).apply(this, arguments)
              )).componentName = "dialog__header"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, a.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "header",
                    Object.assign({}, t),
                    (0, gn.h)(
                      "h2",
                      { className: "mdc-dialog__header__title" },
                      t.children
                    )
                  );
                }
              }
            ]),
            e
          );
        })(c.default);
      (e.DialogHeader = u), d([oi.bind], u.prototype, "materialDom", null);
      var h = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "dialog__body"),
            (t.mdcProps = ["scrollable"]),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)("section", Object.assign({}, t), t.children);
              }
            }
          ]),
          e
        );
      })(c.default);
      (e.DialogBody = h), d([oi.bind], h.prototype, "materialDom", null);
      var p = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "dialog__footer"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)("footer", Object.assign({}, t), t.children);
              }
            }
          ]),
          e
        );
      })(c.default);
      (e.DialogFooter = p), d([oi.bind], p.prototype, "materialDom", null);
      var _ = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "dialog__footer__button"),
            (t.mdcProps = ["cancel", "accept"]),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)(
                  "button",
                  Object.assign({}, t, {
                    className: "mdc-button",
                    ref: this.setControlRef
                  }),
                  t.children
                );
              }
            }
          ]),
          e
        );
      })(ui.Button);
      (e.DialogFooterButton = _),
        d([oi.bind], _.prototype, "materialDom", null);
      var f = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "dialog"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "componentDidMount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentDidMount",
                  this
                ).call(this),
                  this.control &&
                    ((this.MDComponent = new ri.MDCDialog(this.control)),
                    this.MDComponent.listen("MDCDialog:accept", this.onAccept),
                    this.MDComponent.listen("MDCDialog:cancel", this.onCancel));
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentWillUnmount",
                  this
                ).call(this),
                  this.MDComponent &&
                    (this.MDComponent.unlisten(
                      "MDCDialog:accept",
                      this.onAccept
                    ),
                    this.MDComponent.unlisten(
                      "MDCDialog:cancel",
                      this.onCancel
                    ),
                    this.MDComponent.destroy());
              }
            },
            {
              key: "onAccept",
              value: function(t) {
                this.props.onAccept && this.props.onAccept(t);
              }
            },
            {
              key: "onCancel",
              value: function(t) {
                this.props.onCancel && this.props.onCancel(t);
              }
            },
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)(
                  "dialog",
                  Object.assign(
                    { role: "alertdialog", ref: this.setControlRef },
                    t
                  ),
                  (0, gn.h)(
                    "div",
                    { className: "mdc-dialog__surface" },
                    t.children
                  ),
                  (0, gn.h)("div", { className: "mdc-dialog__backdrop" })
                );
              }
            }
          ]),
          e
        );
      })(c.default);
      (e.Dialog = f),
        d([oi.bind], f.prototype, "onAccept", null),
        d([oi.bind], f.prototype, "onCancel", null);
      var m = (function(t) {
        function e() {
          return (
            (0, i.default)(this, e),
            (0, s.default)(this, (0, r.default)(e).apply(this, arguments))
          );
        }
        return (0, o.default)(e, t), e;
      })(f);
      (e.default = m),
        (m.Header = u),
        (m.Body = h),
        (m.Footer = p),
        (m.FooterButton = _);
    }),
    pi = i(hi),
    _i =
      (hi.Dialog,
      hi.DialogFooterButton,
      hi.DialogFooter,
      hi.DialogBody,
      hi.DialogHeader,
      a(function(t, e) {
        Object.defineProperty(e, "__esModule", { value: !0 }),
          (e.default = e.List = e.ListGroupHeader = e.ListGroup = e.ListSecondaryText = e.ListPrimaryText = e.ListTextContainer = e.ListDivider = e.ListItemMetaText = e.ListItemMeta = e.ListItemGraphic = e.ListLinkItem = e.ListItem = void 0);
        var n = Cn(Tn),
          i = Cn(An),
          a = Cn(Ln),
          s = Cn(bn),
          r = Cn(Nn),
          o = Cn(li),
          l = Cn(ci),
          c = (function(t) {
            function e() {
              var t;
              return (
                (0, n.default)(this, e),
                ((t = (0, a.default)(
                  this,
                  (0, s.default)(e).apply(this, arguments)
                )).componentName = "list-item"),
                (t.mdcProps = []),
                t
              );
            }
            return (
              (0, r.default)(e, t),
              (0, i.default)(e, [
                {
                  key: "materialDom",
                  value: function(t) {
                    return (0, gn.h)(
                      "li",
                      Object.assign({ role: "option" }, t, {
                        ref: this.setControlRef
                      }),
                      t.children
                    );
                  }
                }
              ]),
              e
            );
          })(o.default);
        e.ListItem = c;
        var d = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "a",
                    Object.assign({ role: "option" }, t, {
                      ref: this.setControlRef
                    }),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListLinkItem = d;
        var u = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__graphic"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "span",
                    Object.assign({}, t, {
                      ref: this.setControlRef,
                      role: "presentation"
                    }),
                    (0, gn.h)(l.default, { "aria-hidden": "true" }, t.children)
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListItemGraphic = u;
        var h = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__meta"),
              t
            );
          }
          return (0, r.default)(e, t), e;
        })(u);
        e.ListItemMeta = h;
        var p = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__meta"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "span",
                    Object.assign({}, t, {
                      ref: this.setControlRef,
                      role: "presentation"
                    }),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListItemMetaText = p;
        var _ = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-divider"),
              (t.mdcProps = ["inset"]),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "li",
                    Object.assign({ role: "separator" }, t, {
                      ref: this.setControlRef
                    })
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListDivider = _;
        var f = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__text"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "span",
                    Object.assign({}, t, { ref: this.setControlRef }),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListTextContainer = f;
        var m = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__primary-text"),
              t
            );
          }
          return (0, r.default)(e, t), e;
        })(f);
        e.ListPrimaryText = m;
        var v = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-item__secondary-text"),
              t
            );
          }
          return (0, r.default)(e, t), e;
        })(f);
        e.ListSecondaryText = v;
        var g = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-group"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "div",
                    Object.assign({}, t),
                    this.props.children
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListGroup = g;
        var C = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list-group__subheader"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "h3",
                    Object.assign({}, t, { ref: this.setControlRef }),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.ListGroupHeader = C;
        var b = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "list"),
              (t.mdcProps = ["dense", "two-line", "avatar-list"]),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return t.interactive
                    ? (0, gn.h)(
                        "nav",
                        Object.assign({ ref: this.setControlRef }, t),
                        t.children
                      )
                    : (0, gn.h)(
                        "ul",
                        Object.assign({}, t, { ref: this.setControlRef }),
                        t.children
                      );
                }
              }
            ]),
            e
          );
        })(o.default);
        e.List = b;
        var y = (function(t) {
          function e() {
            return (
              (0, n.default)(this, e),
              (0, a.default)(this, (0, s.default)(e).apply(this, arguments))
            );
          }
          return (0, r.default)(e, t), e;
        })(b);
        (e.default = y),
          (y.Item = c),
          (y.LinkItem = d),
          (y.ItemGraphic = u),
          (y.ItemMeta = h),
          (y.ItemMetaText = p),
          (y.Divider = _),
          (y.TextContainer = f),
          (y.PrimaryText = m),
          (y.SecondaryText = v),
          (y.Group = g),
          (y.GroupHeader = C);
      }));
  i(_i);
  _i.List,
    _i.ListGroupHeader,
    _i.ListGroup,
    _i.ListSecondaryText,
    _i.ListPrimaryText,
    _i.ListTextContainer,
    _i.ListDivider,
    _i.ListItemMetaText,
    _i.ListItemMeta,
    _i.ListItemGraphic,
    _i.ListLinkItem,
    _i.ListItem;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const fi = {
      ARIA_CONTROLS: "aria-controls",
      INPUT_SELECTOR: ".mdc-text-field__input",
      LABEL_SELECTOR: ".mdc-floating-label",
      ICON_SELECTOR: ".mdc-text-field__icon",
      OUTLINE_SELECTOR: ".mdc-notched-outline",
      LINE_RIPPLE_SELECTOR: ".mdc-line-ripple"
    },
    mi = {
      ROOT: "mdc-text-field",
      DISABLED: "mdc-text-field--disabled",
      DENSE: "mdc-text-field--dense",
      FOCUSED: "mdc-text-field--focused",
      INVALID: "mdc-text-field--invalid",
      TEXTAREA: "mdc-text-field--textarea",
      OUTLINED: "mdc-text-field--outlined"
    },
    vi = { LABEL_SCALE: 0.75, DENSE_LABEL_SCALE: 0.923 },
    gi = [
      "pattern",
      "min",
      "max",
      "required",
      "step",
      "minlength",
      "maxlength"
    ],
    Ci = ["color", "date", "datetime-local", "month", "range", "time", "week"],
    bi = { ARIA_HIDDEN: "aria-hidden", ROLE: "role" },
    yi = {
      HELPER_TEXT_PERSISTENT: "mdc-text-field-helper-text--persistent",
      HELPER_TEXT_VALIDATION_MSG: "mdc-text-field-helper-text--validation-msg"
    };
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class Ei extends kn {
    static get cssClasses() {
      return yi;
    }
    static get strings() {
      return bi;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        setAttr: () => {},
        removeAttr: () => {},
        setContent: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Ei.defaultAdapter, t));
    }
    setContent(t) {
      this.adapter_.setContent(t);
    }
    setPersistent(t) {
      t
        ? this.adapter_.addClass(yi.HELPER_TEXT_PERSISTENT)
        : this.adapter_.removeClass(yi.HELPER_TEXT_PERSISTENT);
    }
    setValidation(t) {
      t
        ? this.adapter_.addClass(yi.HELPER_TEXT_VALIDATION_MSG)
        : this.adapter_.removeClass(yi.HELPER_TEXT_VALIDATION_MSG);
    }
    showToScreenReader() {
      this.adapter_.removeAttr(bi.ARIA_HIDDEN);
    }
    setValidity(t) {
      const e = this.adapter_.hasClass(yi.HELPER_TEXT_PERSISTENT),
        n = this.adapter_.hasClass(yi.HELPER_TEXT_VALIDATION_MSG) && !t;
      n
        ? this.adapter_.setAttr(bi.ROLE, "alert")
        : this.adapter_.removeAttr(bi.ROLE),
        e || n || this.hide_();
    }
    hide_() {
      this.adapter_.setAttr(bi.ARIA_HIDDEN, "true");
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const Ti = { ICON_EVENT: "MDCTextField:icon", ICON_ROLE: "button" };
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Ii extends kn {
    static get strings() {
      return Ti;
    }
    static get defaultAdapter() {
      return {
        getAttr: () => {},
        setAttr: () => {},
        removeAttr: () => {},
        setContent: () => {},
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {},
        notifyIconAction: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Ii.defaultAdapter, t)),
        (this.savedTabIndex_ = null),
        (this.interactionHandler_ = t => this.handleInteraction(t));
    }
    init() {
      (this.savedTabIndex_ = this.adapter_.getAttr("tabindex")),
        ["click", "keydown"].forEach(t => {
          this.adapter_.registerInteractionHandler(t, this.interactionHandler_);
        });
    }
    destroy() {
      ["click", "keydown"].forEach(t => {
        this.adapter_.deregisterInteractionHandler(t, this.interactionHandler_);
      });
    }
    setDisabled(t) {
      this.savedTabIndex_ &&
        (t
          ? (this.adapter_.setAttr("tabindex", "-1"),
            this.adapter_.removeAttr("role"))
          : (this.adapter_.setAttr("tabindex", this.savedTabIndex_),
            this.adapter_.setAttr("role", Ti.ICON_ROLE)));
    }
    setAriaLabel(t) {
      this.adapter_.setAttr("aria-label", t);
    }
    setContent(t) {
      this.adapter_.setContent(t);
    }
    handleInteraction(t) {
      ("click" !== t.type && "Enter" !== t.key && 13 !== t.keyCode) ||
        this.adapter_.notifyIconAction();
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Ai extends kn {
    static get cssClasses() {
      return mi;
    }
    static get strings() {
      return fi;
    }
    static get numbers() {
      return vi;
    }
    get shouldShake() {
      return !this.isValid() && !this.isFocused_ && !!this.getValue();
    }
    get shouldAlwaysFloat_() {
      const t = this.getNativeInput_().type;
      return Ci.indexOf(t) >= 0;
    }
    get shouldFloat() {
      return (
        this.shouldAlwaysFloat_ ||
        this.isFocused_ ||
        !!this.getValue() ||
        this.isBadInput_()
      );
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        registerTextFieldInteractionHandler: () => {},
        deregisterTextFieldInteractionHandler: () => {},
        registerInputInteractionHandler: () => {},
        deregisterInputInteractionHandler: () => {},
        registerValidationAttributeChangeHandler: () => {},
        deregisterValidationAttributeChangeHandler: () => {},
        getNativeInput: () => {},
        isFocused: () => {},
        isRtl: () => {},
        activateLineRipple: () => {},
        deactivateLineRipple: () => {},
        setLineRippleTransformOrigin: () => {},
        shakeLabel: () => {},
        floatLabel: () => {},
        hasLabel: () => {},
        getLabelWidth: () => {},
        hasOutline: () => {},
        notchOutline: () => {},
        closeOutline: () => {}
      };
    }
    constructor(t, e = {}) {
      super(Object.assign(Ai.defaultAdapter, t)),
        (this.helperText_ = e.helperText),
        (this.icon_ = e.icon),
        (this.isFocused_ = !1),
        (this.receivedUserInput_ = !1),
        (this.useCustomValidityChecking_ = !1),
        (this.isValid_ = !0),
        (this.useNativeValidation_ = !0),
        (this.inputFocusHandler_ = () => this.activateFocus()),
        (this.inputBlurHandler_ = () => this.deactivateFocus()),
        (this.inputInputHandler_ = () => this.autoCompleteFocus()),
        (this.setPointerXOffset_ = t => this.setTransformOrigin(t)),
        (this.textFieldInteractionHandler_ = () =>
          this.handleTextFieldInteraction()),
        (this.validationAttributeChangeHandler_ = t =>
          this.handleValidationAttributeChange(t)),
        this.validationObserver_;
    }
    init() {
      this.adapter_.isFocused()
        ? this.inputFocusHandler_()
        : this.adapter_.hasLabel() &&
          this.shouldFloat &&
          (this.notchOutline(!0), this.adapter_.floatLabel(!0)),
        this.adapter_.registerInputInteractionHandler(
          "focus",
          this.inputFocusHandler_
        ),
        this.adapter_.registerInputInteractionHandler(
          "blur",
          this.inputBlurHandler_
        ),
        this.adapter_.registerInputInteractionHandler(
          "input",
          this.inputInputHandler_
        ),
        ["mousedown", "touchstart"].forEach(t => {
          this.adapter_.registerInputInteractionHandler(
            t,
            this.setPointerXOffset_
          );
        }),
        ["click", "keydown"].forEach(t => {
          this.adapter_.registerTextFieldInteractionHandler(
            t,
            this.textFieldInteractionHandler_
          );
        }),
        (this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(
          this.validationAttributeChangeHandler_
        ));
    }
    destroy() {
      this.adapter_.deregisterInputInteractionHandler(
        "focus",
        this.inputFocusHandler_
      ),
        this.adapter_.deregisterInputInteractionHandler(
          "blur",
          this.inputBlurHandler_
        ),
        this.adapter_.deregisterInputInteractionHandler(
          "input",
          this.inputInputHandler_
        ),
        ["mousedown", "touchstart"].forEach(t => {
          this.adapter_.deregisterInputInteractionHandler(
            t,
            this.setPointerXOffset_
          );
        }),
        ["click", "keydown"].forEach(t => {
          this.adapter_.deregisterTextFieldInteractionHandler(
            t,
            this.textFieldInteractionHandler_
          );
        }),
        this.adapter_.deregisterValidationAttributeChangeHandler(
          this.validationObserver_
        );
    }
    handleTextFieldInteraction() {
      this.adapter_.getNativeInput().disabled || (this.receivedUserInput_ = !0);
    }
    handleValidationAttributeChange(t) {
      t.some(t => {
        if (gi.indexOf(t) > -1) return this.styleValidity_(!0), !0;
      });
    }
    notchOutline(t) {
      if (this.adapter_.hasOutline())
        if (t) {
          const t = this.adapter_.hasClass(mi.DENSE)
              ? vi.DENSE_LABEL_SCALE
              : vi.LABEL_SCALE,
            e = this.adapter_.getLabelWidth() * t,
            n = this.adapter_.isRtl();
          this.adapter_.notchOutline(e, n);
        } else this.adapter_.closeOutline();
    }
    activateFocus() {
      (this.isFocused_ = !0),
        this.styleFocused_(this.isFocused_),
        this.adapter_.activateLineRipple(),
        this.adapter_.hasLabel() &&
          (this.notchOutline(this.shouldFloat),
          this.adapter_.floatLabel(this.shouldFloat),
          this.adapter_.shakeLabel(this.shouldShake)),
        this.helperText_ && this.helperText_.showToScreenReader();
    }
    setTransformOrigin(t) {
      const e = t.target.getBoundingClientRect(),
        n = t.clientX,
        i = (t.clientY, n - e.left);
      this.adapter_.setLineRippleTransformOrigin(i);
    }
    autoCompleteFocus() {
      this.receivedUserInput_ || this.activateFocus();
    }
    deactivateFocus() {
      (this.isFocused_ = !1), this.adapter_.deactivateLineRipple();
      const t = this.isValid();
      this.styleValidity_(t),
        this.styleFocused_(this.isFocused_),
        this.adapter_.hasLabel() &&
          (this.notchOutline(this.shouldFloat),
          this.adapter_.floatLabel(this.shouldFloat),
          this.adapter_.shakeLabel(this.shouldShake)),
        this.shouldFloat || (this.receivedUserInput_ = !1);
    }
    getValue() {
      return this.getNativeInput_().value;
    }
    setValue(t) {
      this.getNativeInput_().value = t;
      const e = this.isValid();
      this.styleValidity_(e),
        this.adapter_.hasLabel() &&
          (this.notchOutline(this.shouldFloat),
          this.adapter_.floatLabel(this.shouldFloat),
          this.adapter_.shakeLabel(this.shouldShake));
    }
    isValid() {
      return this.useNativeValidation_
        ? this.isNativeInputValid_()
        : this.isValid_;
    }
    setValid(t) {
      (this.isValid_ = t), this.styleValidity_(t);
      const e = !t && !this.isFocused_;
      this.adapter_.hasLabel() && this.adapter_.shakeLabel(e);
    }
    setUseNativeValidation(t) {
      this.useNativeValidation_ = t;
    }
    isDisabled() {
      return this.getNativeInput_().disabled;
    }
    setDisabled(t) {
      (this.getNativeInput_().disabled = t), this.styleDisabled_(t);
    }
    setHelperTextContent(t) {
      this.helperText_ && this.helperText_.setContent(t);
    }
    setIconAriaLabel(t) {
      this.icon_ && this.icon_.setAriaLabel(t);
    }
    setIconContent(t) {
      this.icon_ && this.icon_.setContent(t);
    }
    isBadInput_() {
      return this.getNativeInput_().validity.badInput;
    }
    isNativeInputValid_() {
      return this.getNativeInput_().validity.valid;
    }
    styleValidity_(t) {
      const { INVALID: e } = Ai.cssClasses;
      t ? this.adapter_.removeClass(e) : this.adapter_.addClass(e),
        this.helperText_ && this.helperText_.setValidity(t);
    }
    styleFocused_(t) {
      const { FOCUSED: e } = Ai.cssClasses;
      t ? this.adapter_.addClass(e) : this.adapter_.removeClass(e);
    }
    styleDisabled_(t) {
      const { DISABLED: e, INVALID: n } = Ai.cssClasses;
      t
        ? (this.adapter_.addClass(e), this.adapter_.removeClass(n))
        : this.adapter_.removeClass(e),
        this.icon_ && this.icon_.setDisabled(t);
    }
    getNativeInput_() {
      return (
        this.adapter_.getNativeInput() || {
          value: "",
          disabled: !1,
          validity: { badInput: !1, valid: !0 }
        }
      );
    }
  }
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const Oi = {
    LINE_RIPPLE_ACTIVE: "mdc-line-ripple--active",
    LINE_RIPPLE_DEACTIVATING: "mdc-line-ripple--deactivating"
  };
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Di extends kn {
    static get cssClasses() {
      return Oi;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        setStyle: () => {},
        registerEventHandler: () => {},
        deregisterEventHandler: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Di.defaultAdapter, t)),
        (this.transitionEndHandler_ = t => this.handleTransitionEnd(t));
    }
    init() {
      this.adapter_.registerEventHandler(
        "transitionend",
        this.transitionEndHandler_
      );
    }
    destroy() {
      this.adapter_.deregisterEventHandler(
        "transitionend",
        this.transitionEndHandler_
      );
    }
    activate() {
      this.adapter_.removeClass(Oi.LINE_RIPPLE_DEACTIVATING),
        this.adapter_.addClass(Oi.LINE_RIPPLE_ACTIVE);
    }
    setRippleCenter(t) {
      this.adapter_.setStyle("transform-origin", t + "px center");
    }
    deactivate() {
      this.adapter_.addClass(Oi.LINE_RIPPLE_DEACTIVATING);
    }
    handleTransitionEnd(t) {
      const e = this.adapter_.hasClass(Oi.LINE_RIPPLE_DEACTIVATING);
      "opacity" === t.propertyName &&
        e &&
        (this.adapter_.removeClass(Oi.LINE_RIPPLE_ACTIVE),
        this.adapter_.removeClass(Oi.LINE_RIPPLE_DEACTIVATING));
    }
  }
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Li extends Rn {
    static attachTo(t) {
      return new Li(t);
    }
    activate() {
      this.foundation_.activate();
    }
    deactivate() {
      this.foundation_.deactivate();
    }
    setRippleCenter(t) {
      this.foundation_.setRippleCenter(t);
    }
    getDefaultFoundation() {
      return new Di(
        Object.assign({
          addClass: t => this.root_.classList.add(t),
          removeClass: t => this.root_.classList.remove(t),
          hasClass: t => this.root_.classList.contains(t),
          setStyle: (t, e) => (this.root_.style[t] = e),
          registerEventHandler: (t, e) => this.root_.addEventListener(t, e),
          deregisterEventHandler: (t, e) => this.root_.removeEventListener(t, e)
        })
      );
    }
  }
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Si extends Rn {
    static attachTo(t) {
      return new Si(t);
    }
    get foundation() {
      return this.foundation_;
    }
    getDefaultFoundation() {
      return new Ei(
        Object.assign({
          addClass: t => this.root_.classList.add(t),
          removeClass: t => this.root_.classList.remove(t),
          hasClass: t => this.root_.classList.contains(t),
          setAttr: (t, e) => this.root_.setAttribute(t, e),
          removeAttr: t => this.root_.removeAttribute(t),
          setContent: t => {
            this.root_.textContent = t;
          }
        })
      );
    }
  }
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Ni extends Rn {
    static attachTo(t) {
      return new Ni(t);
    }
    get foundation() {
      return this.foundation_;
    }
    getDefaultFoundation() {
      return new Ii(
        Object.assign({
          getAttr: t => this.root_.getAttribute(t),
          setAttr: (t, e) => this.root_.setAttribute(t, e),
          removeAttr: t => this.root_.removeAttribute(t),
          setContent: t => {
            this.root_.textContent = t;
          },
          registerInteractionHandler: (t, e) =>
            this.root_.addEventListener(t, e),
          deregisterInteractionHandler: (t, e) =>
            this.root_.removeEventListener(t, e),
          notifyIconAction: () => this.emit(Ii.strings.ICON_EVENT, {}, !0)
        })
      );
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const ki = {
    LABEL_FLOAT_ABOVE: "mdc-floating-label--float-above",
    LABEL_SHAKE: "mdc-floating-label--shake"
  };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Ri extends kn {
    static get cssClasses() {
      return ki;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        getWidth: () => {},
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Ri.defaultAdapter, t)),
        (this.shakeAnimationEndHandler_ = () =>
          this.handleShakeAnimationEnd_());
    }
    init() {
      this.adapter_.registerInteractionHandler(
        "animationend",
        this.shakeAnimationEndHandler_
      );
    }
    destroy() {
      this.adapter_.deregisterInteractionHandler(
        "animationend",
        this.shakeAnimationEndHandler_
      );
    }
    getWidth() {
      return this.adapter_.getWidth();
    }
    shake(t) {
      const { LABEL_SHAKE: e } = Ri.cssClasses;
      t ? this.adapter_.addClass(e) : this.adapter_.removeClass(e);
    }
    float(t) {
      const { LABEL_FLOAT_ABOVE: e, LABEL_SHAKE: n } = Ri.cssClasses;
      t
        ? this.adapter_.addClass(e)
        : (this.adapter_.removeClass(e), this.adapter_.removeClass(n));
    }
    handleShakeAnimationEnd_() {
      const { LABEL_SHAKE: t } = Ri.cssClasses;
      this.adapter_.removeClass(t);
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class xi extends Rn {
    static attachTo(t) {
      return new xi(t);
    }
    shake(t) {
      this.foundation_.shake(t);
    }
    float(t) {
      this.foundation_.float(t);
    }
    getWidth() {
      return this.foundation_.getWidth();
    }
    getDefaultFoundation() {
      return new Ri({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        getWidth: () => this.root_.offsetWidth,
        registerInteractionHandler: (t, e) => this.root_.addEventListener(t, e),
        deregisterInteractionHandler: (t, e) =>
          this.root_.removeEventListener(t, e)
      });
    }
  }
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const wi = {
      PATH_SELECTOR: ".mdc-notched-outline__path",
      IDLE_OUTLINE_SELECTOR: ".mdc-notched-outline__idle"
    },
    Hi = { OUTLINE_NOTCHED: "mdc-notched-outline--notched" };
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class Mi extends kn {
    static get strings() {
      return wi;
    }
    static get cssClasses() {
      return Hi;
    }
    static get defaultAdapter() {
      return {
        getWidth: () => {},
        getHeight: () => {},
        addClass: () => {},
        removeClass: () => {},
        setOutlinePathAttr: () => {},
        getIdleOutlineStyleValue: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Mi.defaultAdapter, t));
    }
    notch(t, e = !1) {
      const { OUTLINE_NOTCHED: n } = Mi.cssClasses;
      this.adapter_.addClass(n), this.updateSvgPath_(t, e);
    }
    closeNotch() {
      const { OUTLINE_NOTCHED: t } = Mi.cssClasses;
      this.adapter_.removeClass(t);
    }
    updateSvgPath_(t, e) {
      const n =
          this.adapter_.getIdleOutlineStyleValue("border-radius") ||
          this.adapter_.getIdleOutlineStyleValue("border-top-left-radius"),
        i = parseFloat(n),
        a = this.adapter_.getWidth(),
        s = this.adapter_.getHeight(),
        r = i + 1.2,
        o = Math.abs(12 - r);
      let l = 0;
      t > 0 && (l = t + 8);
      const c =
        "a" +
        i +
        "," +
        i +
        " 0 0 1 " +
        i +
        "," +
        i +
        "v" +
        (s - 2 * r) +
        "a" +
        i +
        "," +
        i +
        " 0 0 1 " +
        -i +
        "," +
        i +
        "h" +
        (2 * r - a) +
        "a" +
        i +
        "," +
        i +
        " 0 0 1 " +
        -i +
        "," +
        -i +
        "v" +
        (2 * r - s) +
        "a" +
        i +
        "," +
        i +
        " 0 0 1 " +
        i +
        "," +
        -i;
      let d;
      (d = e
        ? "M" + (a - r - o) + ",1h" + o + c + "h" + (a - 2 * r - l - o)
        : "M" + (r + o + l) + ",1h" + (a - 2 * r - l - o) + c + "h" + o),
        this.adapter_.setOutlinePathAttr(d);
    }
  }
  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Pi extends Rn {
    static attachTo(t) {
      return new Pi(t);
    }
    notch(t, e) {
      this.foundation_.notch(t, e);
    }
    closeNotch() {
      this.foundation_.closeNotch();
    }
    getDefaultFoundation() {
      return new Mi({
        getWidth: () => this.root_.offsetWidth,
        getHeight: () => this.root_.offsetHeight,
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        setOutlinePathAttr: t => {
          this.root_.querySelector(wi.PATH_SELECTOR).setAttribute("d", t);
        },
        getIdleOutlineStyleValue: t => {
          const e = this.root_.parentNode.querySelector(
            wi.IDLE_OUTLINE_SELECTOR
          );
          return window.getComputedStyle(e).getPropertyValue(t);
        }
      });
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class ji extends Rn {
    constructor(...t) {
      super(...t),
        this.input_,
        this.ripple,
        this.lineRipple_,
        this.helperText_,
        this.icon_,
        this.label_,
        this.outline_;
    }
    static attachTo(t) {
      return new ji(t);
    }
    initialize(
      t = (t, e) => new qn(t, e),
      e = t => new Li(t),
      n = t => new Si(t),
      i = t => new Ni(t),
      a = t => new xi(t),
      s = t => new Pi(t)
    ) {
      this.input_ = this.root_.querySelector(fi.INPUT_SELECTOR);
      const r = this.root_.querySelector(fi.LABEL_SELECTOR);
      r && (this.label_ = a(r));
      const o = this.root_.querySelector(fi.LINE_RIPPLE_SELECTOR);
      o && (this.lineRipple_ = e(o));
      const l = this.root_.querySelector(fi.OUTLINE_SELECTOR);
      if (
        (l && (this.outline_ = s(l)),
        this.input_.hasAttribute(fi.ARIA_CONTROLS))
      ) {
        const t = document.getElementById(
          this.input_.getAttribute(fi.ARIA_CONTROLS)
        );
        t && (this.helperText_ = n(t));
      }
      const c = this.root_.querySelector(fi.ICON_SELECTOR);
      if (
        (c && (this.icon_ = i(c)),
        (this.ripple = null),
        !this.root_.classList.contains(mi.TEXTAREA) &&
          !this.root_.classList.contains(mi.OUTLINED))
      ) {
        const e = Bn(HTMLElement.prototype),
          n = Object.assign(qn.createAdapter(this), {
            isSurfaceActive: () => this.input_[e](":active"),
            registerInteractionHandler: (t, e) =>
              this.input_.addEventListener(t, e),
            deregisterInteractionHandler: (t, e) =>
              this.input_.removeEventListener(t, e)
          }),
          i = new Kn(n);
        this.ripple = t(this.root_, i);
      }
    }
    destroy() {
      this.ripple && this.ripple.destroy(),
        this.lineRipple_ && this.lineRipple_.destroy(),
        this.helperText_ && this.helperText_.destroy(),
        this.icon_ && this.icon_.destroy(),
        this.label_ && this.label_.destroy(),
        this.outline_ && this.outline_.destroy(),
        super.destroy();
    }
    initialSyncWithDom() {
      this.disabled = this.input_.disabled;
    }
    get value() {
      return this.foundation_.getValue();
    }
    set value(t) {
      this.foundation_.setValue(t);
    }
    get disabled() {
      return this.foundation_.isDisabled();
    }
    set disabled(t) {
      this.foundation_.setDisabled(t);
    }
    get valid() {
      return this.foundation_.isValid();
    }
    set valid(t) {
      this.foundation_.setValid(t);
    }
    get required() {
      return this.input_.required;
    }
    set required(t) {
      this.input_.required = t;
    }
    get pattern() {
      return this.input_.pattern;
    }
    set pattern(t) {
      this.input_.pattern = t;
    }
    get minLength() {
      return this.input_.minLength;
    }
    set minLength(t) {
      this.input_.minLength = t;
    }
    get maxLength() {
      return this.input_.maxLength;
    }
    set maxLength(t) {
      t < 0
        ? this.input_.removeAttribute("maxLength")
        : (this.input_.maxLength = t);
    }
    get min() {
      return this.input_.min;
    }
    set min(t) {
      this.input_.min = t;
    }
    get max() {
      return this.input_.max;
    }
    set max(t) {
      this.input_.max = t;
    }
    get step() {
      return this.input_.step;
    }
    set step(t) {
      this.input_.step = t;
    }
    set helperTextContent(t) {
      this.foundation_.setHelperTextContent(t);
    }
    set iconAriaLabel(t) {
      this.foundation_.setIconAriaLabel(t);
    }
    set iconContent(t) {
      this.foundation_.setIconContent(t);
    }
    set useNativeValidation(t) {
      this.foundation_.setUseNativeValidation(t);
    }
    layout() {
      const t = this.foundation_.shouldFloat;
      this.foundation_.notchOutline(t);
    }
    getDefaultFoundation() {
      return new Ai(
        Object.assign(
          {
            addClass: t => this.root_.classList.add(t),
            removeClass: t => this.root_.classList.remove(t),
            hasClass: t => this.root_.classList.contains(t),
            registerTextFieldInteractionHandler: (t, e) =>
              this.root_.addEventListener(t, e),
            deregisterTextFieldInteractionHandler: (t, e) =>
              this.root_.removeEventListener(t, e),
            registerValidationAttributeChangeHandler: t => {
              const e = new MutationObserver(e =>
                  t((t => t.map(t => t.attributeName))(e))
                ),
                n = this.root_.querySelector(fi.INPUT_SELECTOR);
              return e.observe(n, { attributes: !0 }), e;
            },
            deregisterValidationAttributeChangeHandler: t => t.disconnect(),
            isFocused: () =>
              document.activeElement ===
              this.root_.querySelector(fi.INPUT_SELECTOR),
            isRtl: () =>
              "rtl" ===
              window.getComputedStyle(this.root_).getPropertyValue("direction")
          },
          this.getInputAdapterMethods_(),
          this.getLabelAdapterMethods_(),
          this.getLineRippleAdapterMethods_(),
          this.getOutlineAdapterMethods_()
        ),
        this.getFoundationMap_()
      );
    }
    getLabelAdapterMethods_() {
      return {
        shakeLabel: t => this.label_.shake(t),
        floatLabel: t => this.label_.float(t),
        hasLabel: () => !!this.label_,
        getLabelWidth: () => this.label_.getWidth()
      };
    }
    getLineRippleAdapterMethods_() {
      return {
        activateLineRipple: () => {
          this.lineRipple_ && this.lineRipple_.activate();
        },
        deactivateLineRipple: () => {
          this.lineRipple_ && this.lineRipple_.deactivate();
        },
        setLineRippleTransformOrigin: t => {
          this.lineRipple_ && this.lineRipple_.setRippleCenter(t);
        }
      };
    }
    getOutlineAdapterMethods_() {
      return {
        notchOutline: (t, e) => this.outline_.notch(t, e),
        closeOutline: () => this.outline_.closeNotch(),
        hasOutline: () => !!this.outline_
      };
    }
    getInputAdapterMethods_() {
      return {
        registerInputInteractionHandler: (t, e) =>
          this.input_.addEventListener(t, e),
        deregisterInputInteractionHandler: (t, e) =>
          this.input_.removeEventListener(t, e),
        getNativeInput: () => this.input_
      };
    }
    getFoundationMap_() {
      return {
        helperText: this.helperText_ ? this.helperText_.foundation : void 0,
        icon: this.icon_ ? this.icon_.foundation : void 0
      };
    }
  }
  var Fi = Object.freeze({
      __proto__: null,
      MDCTextField: ji,
      MDCTextFieldFoundation: Ai,
      MDCTextFieldHelperText: Si,
      MDCTextFieldHelperTextFoundation: Ei,
      MDCTextFieldIcon: Ni,
      MDCTextFieldIconFoundation: Ii
    }),
    Bi = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.TextField = e.TextFieldInput = e.Label = e.HelperText = void 0);
      var n = Cn(En),
        i = Cn(Tn),
        a = Cn(An),
        s = Cn(Ln),
        r = Cn(bn),
        o = Cn(Nn),
        l = Cn(li),
        c = Cn(ci),
        d = function(t, e) {
          var n = {};
          for (var i in t)
            Object.prototype.hasOwnProperty.call(t, i) &&
              e.indexOf(i) < 0 &&
              (n[i] = t[i]);
          if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
            var a = 0;
            for (i = Object.getOwnPropertySymbols(t); a < i.length; a++)
              e.indexOf(i[a]) < 0 &&
                Object.prototype.propertyIsEnumerable.call(t, i[a]) &&
                (n[i[a]] = t[i[a]]);
          }
          return n;
        },
        u = (function(t) {
          function e() {
            var t;
            return (
              (0, i.default)(this, e),
              ((t = (0, s.default)(
                this,
                (0, r.default)(e).apply(this, arguments)
              )).componentName = "text-field-helper-text"),
              (t.mdcProps = ["persistent", "validation-msg"]),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, a.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "p",
                    Object.assign({}, t, { "aria-hidden": "true" }),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(l.default);
      e.HelperText = u;
      var h = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "floating-label"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)("label", Object.assign({}, t), t.children);
              }
            }
          ]),
          e
        );
      })(l.default);
      e.Label = h;
      var p = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).state = { jsComponentAttached: !1 }),
            (t.componentName = "text-field"),
            (t.mdcProps = [
              "fullwidth",
              "textarea",
              "dense",
              "disabled",
              "box",
              "outlined"
            ]),
            (t.mdcNotifyProps = ["valid", "disabled"]),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "componentDidMount",
              value: function() {
                var t = this;
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentDidMount",
                  this
                ).call(this),
                  this.setState({ jsComponentAttached: !0 }, function() {
                    t.control &&
                      ((t.MDComponent = new Fi.MDCTextField(t.control)),
                      t.props.onInit && t.props.onInit(t.MDComponent),
                      t.props.value && (t.MDComponent.value = t.props.value)),
                      t.afterComponentDidMount();
                  });
              }
            },
            {
              key: "componentWillReceiveProps",
              value: function(t) {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentWillReceiveProps",
                  this
                ).call(this, t),
                  this.MDComponent &&
                    t.value &&
                    this.props.value !== t.value &&
                    this.MDComponent.value !== t.value &&
                    (this.MDComponent.value = t.value);
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentWillUnmount",
                  this
                ).call(this),
                  this.MDComponent && this.MDComponent.destroy();
              }
            },
            {
              key: "getValue",
              value: function() {
                return this.MDComponent ? this.MDComponent.value : null;
              }
            },
            {
              key: "materialDom",
              value: function(t) {
                var e = t.className,
                  n = t.outerStyle,
                  i = t.outlined,
                  a = d(t, ["className", "outerStyle", "outlined"]);
                return (
                  (e = e || ""),
                  "leadingIcon" in a &&
                    (e +=
                      " mdc-text-field--box mdc-text-field--with-leading-icon"),
                  "trailingIcon" in a &&
                    (e +=
                      " mdc-text-field--box mdc-text-field--with-trailing-icon"),
                  "value" in a &&
                    this.state.jsComponentAttached &&
                    (e = [e, "mdc-text-field--upgraded"].join(" ")),
                  a.label &&
                    a.fullwidth &&
                    console.log(
                      'Passing a "label" prop is not supported when using a "fullwidth" text field.'
                    ),
                  (0, gn.h)(
                    "div",
                    { className: e, ref: this.setControlRef, style: n },
                    a.leadingIcon
                      ? (0, gn.h)(
                          c.default,
                          { className: "mdc-text-field__icon" },
                          a.leadingIcon
                        )
                      : null,
                    a.textarea
                      ? (0, gn.h)(
                          "textarea",
                          Object.assign(
                            { className: "mdc-text-field__input" },
                            a
                          )
                        )
                      : (0, gn.h)(
                          "input",
                          Object.assign(
                            {
                              type: a.type || "text",
                              className: "mdc-text-field__input",
                              placeholder: this.state.jsComponentAttached
                                ? void 0
                                : a.label + this.props.required
                                ? "*"
                                : ""
                            },
                            a
                          )
                        ),
                    a.label &&
                      this.state.jsComponentAttached &&
                      (0, gn.h)(h, { for: a.id }, a.label),
                    a.trailingIcon
                      ? (0, gn.h)(
                          c.default,
                          { className: "mdc-text-field__icon" },
                          a.trailingIcon
                        )
                      : null,
                    a.textarea || i
                      ? null
                      : (0, gn.h)("div", { class: "mdc-line-ripple" }),
                    i
                      ? (0, gn.h)(
                          "div",
                          { class: "mdc-notched-outline" },
                          (0, gn.h)(
                            "svg",
                            null,
                            (0, gn.h)("path", {
                              className: "mdc-notched-outline__path"
                            })
                          )
                        )
                      : null,
                    i
                      ? (0, gn.h)("div", {
                          className: "mdc-notched-outline__idle"
                        })
                      : null
                  )
                );
              }
            },
            {
              key: "buildClassName",
              value: function(t) {
                var i = (0, n.default)(
                  (0, r.default)(e.prototype),
                  "buildClassName",
                  this
                ).call(this, t);
                return (
                  this.MDComponent && (i += " mdc-text-field--upgraded"), i
                );
              }
            }
          ]),
          e
        );
      })(l.default);
      (e.TextFieldInput = p), (p.defaultProps = { valid: !0 });
      var _ = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).id = e.uid()),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(
            e,
            [
              {
                key: "componentDidMount",
                value: function() {
                  this.setState({ jsComponentAttached: !0 });
                }
              },
              {
                key: "render",
                value: function(t) {
                  var e = this,
                    n = t.className,
                    i = t.outerStyle,
                    a = t.helperTextPersistent,
                    s = t.helperTextValidationMsg,
                    r = d(t, [
                      "className",
                      "outerStyle",
                      "helperTextPersistent",
                      "helperTextValidationMsg"
                    ]),
                    o = r.helperText;
                  (!r.helperText && !r.label) ||
                    r.id ||
                    (r.id = "tf-".concat(this.id));
                  var l = { persistent: a, "validation-msg": s };
                  return o
                    ? (0, gn.h)(
                        "div",
                        { className: n, style: i },
                        (0, gn.h)(
                          p,
                          Object.assign({}, r, {
                            onInit: function(t) {
                              e.MDComponent = t;
                            },
                            "aria-controls":
                              r.helperText && "".concat(r.id, "-helper-text")
                          })
                        ),
                        r.helperText &&
                          (0, gn.h)(
                            u,
                            Object.assign(
                              { id: "".concat(r.id, "-helper-text") },
                              l
                            ),
                            r.helperText
                          )
                      )
                    : (0, gn.h)(
                        p,
                        Object.assign({}, r, {
                          className: n,
                          outerStyle: i,
                          onInit: function(t) {
                            e.MDComponent = t;
                          }
                        })
                      );
                }
              }
            ],
            [
              {
                key: "uid",
                value: function() {
                  return ++this.uidCounter;
                }
              }
            ]
          ),
          e
        );
      })(gn.Component);
      (e.TextField = _), (_.uidCounter = 0);
      var f = (function(t) {
        function e() {
          return (
            (0, i.default)(this, e),
            (0, s.default)(this, (0, r.default)(e).apply(this, arguments))
          );
        }
        return (0, o.default)(e, t), e;
      })(_);
      (e.default = f), (f.HelperText = u);
    }),
    Vi = i(Bi);
  Bi.TextField, Bi.TextFieldInput, Bi.Label, Bi.HelperText;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const Ui = { NATIVE_CONTROL_SELECTOR: ".mdc-radio__native-control" },
    Wi = { ROOT: "mdc-radio", DISABLED: "mdc-radio--disabled" };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class Gi extends kn {
    static get cssClasses() {
      return Wi;
    }
    static get strings() {
      return Ui;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        getNativeControl: () => {}
      };
    }
    isChecked() {
      return this.getNativeControl_().checked;
    }
    setChecked(t) {
      this.getNativeControl_().checked = t;
    }
    isDisabled() {
      return this.getNativeControl_().disabled;
    }
    setDisabled(t) {
      const { DISABLED: e } = Gi.cssClasses;
      (this.getNativeControl_().disabled = t),
        t ? this.adapter_.addClass(e) : this.adapter_.removeClass(e);
    }
    getValue() {
      return this.getNativeControl_().value;
    }
    setValue(t) {
      this.getNativeControl_().value = t;
    }
    getNativeControl_() {
      return (
        this.adapter_.getNativeControl() || {
          checked: !1,
          disabled: !1,
          value: null
        }
      );
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class zi extends Rn {
    static attachTo(t) {
      return new zi(t);
    }
    get checked() {
      return this.foundation_.isChecked();
    }
    set checked(t) {
      this.foundation_.setChecked(t);
    }
    get disabled() {
      return this.foundation_.isDisabled();
    }
    set disabled(t) {
      this.foundation_.setDisabled(t);
    }
    get value() {
      return this.foundation_.getValue();
    }
    set value(t) {
      this.foundation_.setValue(t);
    }
    get ripple() {
      return this.ripple_;
    }
    constructor(...t) {
      super(...t), (this.ripple_ = this.initRipple_());
    }
    initRipple_() {
      const t = Object.assign(qn.createAdapter(this), {
          isUnbounded: () => !0,
          isSurfaceActive: () => !1,
          registerInteractionHandler: (t, e) =>
            this.nativeControl_.addEventListener(t, e),
          deregisterInteractionHandler: (t, e) =>
            this.nativeControl_.removeEventListener(t, e)
        }),
        e = new Kn(t);
      return new qn(this.root_, e);
    }
    get nativeControl_() {
      const { NATIVE_CONTROL_SELECTOR: t } = Gi.strings;
      return this.root_.querySelector(t);
    }
    destroy() {
      this.ripple_.destroy(), super.destroy();
    }
    getDefaultFoundation() {
      return new Gi({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        getNativeControl: () =>
          this.root_.querySelector(Gi.strings.NATIVE_CONTROL_SELECTOR)
      });
    }
  }
  var Ki = Object.freeze({
      __proto__: null,
      MDCRadio: zi,
      MDCRadioFoundation: Gi
    }),
    qi = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Radio = void 0);
      var n = Cn(Tn),
        i = Cn(An),
        a = Cn(Ln),
        s = Cn(bn),
        r = Cn(En),
        o = Cn(Nn),
        l = Cn(li),
        c = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "radio"),
              (t.mdcProps = ["disabled"]),
              (t.mdcNotifyProps = ["checked"]),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, i.default)(e, [
              {
                key: "componentDidMount",
                value: function() {
                  (0, r.default)(
                    (0, s.default)(e.prototype),
                    "componentDidMount",
                    this
                  ).call(this),
                    this.control &&
                      (this.MDComponent = new Ki.MDCRadio(this.control)),
                    this.afterComponentDidMount();
                }
              },
              {
                key: "componentWillUnmount",
                value: function() {
                  (0, r.default)(
                    (0, s.default)(e.prototype),
                    "componentWillUnmount",
                    this
                  ).call(this),
                    this.MDComponent && this.MDComponent.destroy();
                }
              },
              {
                key: "materialDom",
                value: function(t) {
                  var e = t.className,
                    n = (function(t, e) {
                      var n = {};
                      for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) &&
                          e.indexOf(i) < 0 &&
                          (n[i] = t[i]);
                      if (
                        null != t &&
                        "function" == typeof Object.getOwnPropertySymbols
                      ) {
                        var a = 0;
                        for (
                          i = Object.getOwnPropertySymbols(t);
                          a < i.length;
                          a++
                        )
                          e.indexOf(i[a]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(
                              t,
                              i[a]
                            ) &&
                            (n[i[a]] = t[i[a]]);
                      }
                      return n;
                    })(t, ["className"]);
                  return (0, gn.h)(
                    "div",
                    { className: e, ref: this.setControlRef },
                    (0, gn.h)(
                      "input",
                      Object.assign(
                        {
                          className: "mdc-radio__native-control",
                          type: "radio"
                        },
                        n
                      )
                    ),
                    (0, gn.h)(
                      "div",
                      { className: "mdc-radio__background" },
                      (0, gn.h)("div", {
                        className: "mdc-radio__outer-circle"
                      }),
                      (0, gn.h)("div", { className: "mdc-radio__inner-circle" })
                    )
                  );
                }
              }
            ]),
            e
          );
        })(l.default);
      e.Radio = c;
      var d = c;
      e.default = d;
    });
  i(qi);
  qi.Radio;
  var Xi = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Formfield = void 0);
      var n = Cn(Tn),
        i = Cn(An),
        a = Cn(Ln),
        s = Cn(bn),
        r = Cn(Nn),
        o = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "form-field"),
              (t.mdcProps = ["align-end"]),
              t
            );
          }
          return (
            (0, r.default)(e, t),
            (0, i.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "div",
                    Object.assign({}, t),
                    this.props.children
                  );
                }
              }
            ]),
            e
          );
        })(Cn(li).default);
      e.Formfield = o;
      var l = o;
      e.default = l;
    }),
    Ji = i(Xi);
  Xi.Formfield;
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const $i = { ROOT: "mdc-icon-button", ICON_BUTTON_ON: "mdc-icon-button--on" },
    Yi = {
      ARIA_PRESSED: "aria-pressed",
      ARIA_LABEL: "aria-label",
      CHANGE_EVENT: "MDCIconButtonToggle:change"
    };
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class Qi extends kn {
    static get cssClasses() {
      return $i;
    }
    static get strings() {
      return Yi;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        setAttr: () => {},
        notifyChange: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Qi.defaultAdapter, t)), (this.disabled_ = !1);
    }
    init() {
      this.adapter_.setAttr(Yi.ARIA_PRESSED, "" + this.isOn());
    }
    handleClick() {
      this.toggle(), this.adapter_.notifyChange({ isOn: this.isOn() });
    }
    isOn() {
      return this.adapter_.hasClass($i.ICON_BUTTON_ON);
    }
    toggle(t = !this.isOn()) {
      t
        ? this.adapter_.addClass($i.ICON_BUTTON_ON)
        : this.adapter_.removeClass($i.ICON_BUTTON_ON),
        this.adapter_.setAttr(Yi.ARIA_PRESSED, "" + t);
    }
  }
  /**
   * @license
   * Copyright 2018 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class Zi extends Rn {
    static attachTo(t) {
      return new Zi(t);
    }
    constructor(...t) {
      super(...t), (this.ripple_ = this.initRipple_()), this.handleClick_;
    }
    initRipple_() {
      const t = new qn(this.root_);
      return (t.unbounded = !0), t;
    }
    destroy() {
      this.root_.removeEventListener("click", this.handleClick_),
        this.ripple_.destroy(),
        super.destroy();
    }
    getDefaultFoundation() {
      return new Qi({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        hasClass: t => this.root_.classList.contains(t),
        setAttr: (t, e) => this.root_.setAttribute(t, e),
        notifyChange: t => this.emit(Qi.strings.CHANGE_EVENT, t)
      });
    }
    initialSyncWithDOM() {
      (this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_)),
        this.root_.addEventListener("click", this.handleClick_);
    }
    get ripple() {
      return this.ripple_;
    }
    get on() {
      return this.foundation_.isOn();
    }
    set on(t) {
      this.foundation_.toggle(t);
    }
  }
  var ta = Object.freeze({
      __proto__: null,
      MDCIconButtonToggle: Zi,
      MDCIconButtonToggleFoundation: Qi
    }),
    ea = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.IconButton = e.Icon = void 0);
      var n = Cn(En),
        i = Cn(Tn),
        a = Cn(An),
        s = Cn(Ln),
        r = Cn(bn),
        o = Cn(Nn),
        l = Cn(li),
        c = (function(t) {
          function e() {
            var t;
            return (
              (0, i.default)(this, e),
              ((t = (0, s.default)(
                this,
                (0, r.default)(e).apply(this, arguments)
              )).componentName = "icon-button__icon"),
              (t.mdcProps = ["on"]),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, a.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  var e = t.element || "i";
                  return (0, gn.h)(
                    e,
                    Object.assign({ class: "material-icons" }, t),
                    t.children
                  );
                }
              }
            ]),
            e
          );
        })(l.default);
      e.Icon = c;
      var d = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "icon-button"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "componentDidMount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentDidMount",
                  this
                ).call(this),
                  (this.MDComponent = new ta.MDCIconButtonToggle(this.control));
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentWillUnmount",
                  this
                ).call(this),
                  this.MDComponent && this.MDComponent.destroy();
              }
            },
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)(
                  "button",
                  Object.assign({ ref: this.setControlRef }, t),
                  this.props.children
                );
              }
            }
          ]),
          e
        );
      })(l.default);
      e.IconButton = d;
      var u = (function(t) {
        function e() {
          return (
            (0, i.default)(this, e),
            (0, s.default)(this, (0, r.default)(e).apply(this, arguments))
          );
        }
        return (0, o.default)(e, t), e;
      })(d);
      (e.default = u), (u.Icon = c);
    });
  i(ea);
  ea.IconButton, ea.Icon;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const na = {
      BOX: "mdc-select--box",
      DISABLED: "mdc-select--disabled",
      ROOT: "mdc-select",
      OUTLINED: "mdc-select--outlined"
    },
    ia = {
      CHANGE_EVENT: "MDCSelect:change",
      LINE_RIPPLE_SELECTOR: ".mdc-line-ripple",
      LABEL_SELECTOR: ".mdc-floating-label",
      NATIVE_CONTROL_SELECTOR: ".mdc-select__native-control",
      OUTLINE_SELECTOR: ".mdc-notched-outline"
    },
    aa = { LABEL_SCALE: 0.75 };
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class sa extends kn {
    static get cssClasses() {
      return na;
    }
    static get numbers() {
      return aa;
    }
    static get strings() {
      return ia;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => !1,
        activateBottomLine: () => {},
        deactivateBottomLine: () => {},
        getValue: () => {},
        isRtl: () => !1,
        hasLabel: () => !1,
        floatLabel: () => {},
        getLabelWidth: () => {},
        hasOutline: () => !1,
        notchOutline: () => {},
        closeOutline: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(sa.defaultAdapter, t));
    }
    updateDisabledStyle(t) {
      const { DISABLED: e } = sa.cssClasses;
      t ? this.adapter_.addClass(e) : this.adapter_.removeClass(e);
    }
    handleChange() {
      const t = this.adapter_.getValue().length > 0;
      this.adapter_.floatLabel(t), this.notchOutline(t);
    }
    handleFocus() {
      this.adapter_.floatLabel(!0),
        this.notchOutline(!0),
        this.adapter_.activateBottomLine();
    }
    handleBlur() {
      this.handleChange(), this.adapter_.deactivateBottomLine();
    }
    notchOutline(t) {
      if (this.adapter_.hasOutline())
        if (t) {
          const t = aa.LABEL_SCALE,
            e = this.adapter_.getLabelWidth() * t,
            n = this.adapter_.isRtl();
          this.adapter_.notchOutline(e, n);
        } else this.adapter_.closeOutline();
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class ra extends Rn {
    constructor(...t) {
      super(...t),
        this.nativeControl_,
        this.ripple,
        this.lineRipple_,
        this.label_,
        this.outline_,
        this.handleChange_,
        this.handleFocus_,
        this.handleBlur_,
        this.handleClick_;
    }
    static attachTo(t) {
      return new ra(t);
    }
    get value() {
      return this.nativeControl_.value;
    }
    set value(t) {
      (this.nativeControl_.value = t), this.foundation_.handleChange();
    }
    get selectedIndex() {
      return this.nativeControl_.selectedIndex;
    }
    set selectedIndex(t) {
      (this.nativeControl_.selectedIndex = t), this.foundation_.handleChange();
    }
    get disabled() {
      return this.nativeControl_.disabled;
    }
    set disabled(t) {
      (this.nativeControl_.disabled = t),
        this.foundation_.updateDisabledStyle(t);
    }
    layout() {
      const t = this.nativeControl_.value.length > 0;
      this.foundation_.notchOutline(t);
    }
    initialize(t = t => new xi(t), e = t => new Li(t), n = t => new Pi(t)) {
      this.nativeControl_ = this.root_.querySelector(
        ia.NATIVE_CONTROL_SELECTOR
      );
      const i = this.root_.querySelector(ia.LABEL_SELECTOR);
      i && (this.label_ = t(i));
      const a = this.root_.querySelector(ia.LINE_RIPPLE_SELECTOR);
      a && (this.lineRipple_ = e(a));
      const s = this.root_.querySelector(ia.OUTLINE_SELECTOR);
      s && (this.outline_ = n(s)),
        this.root_.classList.contains(na.BOX) &&
          (this.ripple = this.initRipple_());
    }
    initRipple_() {
      const t = Object.assign(qn.createAdapter(this), {
          registerInteractionHandler: (t, e) =>
            this.nativeControl_.addEventListener(t, e),
          deregisterInteractionHandler: (t, e) =>
            this.nativeControl_.removeEventListener(t, e)
        }),
        e = new Kn(t);
      return new qn(this.root_, e);
    }
    initialSyncWithDOM() {
      (this.handleChange_ = () => this.foundation_.handleChange()),
        (this.handleFocus_ = () => this.foundation_.handleFocus()),
        (this.handleBlur_ = () => this.foundation_.handleBlur()),
        (this.handleClick_ = t => this.setTransformOrigin_(t)),
        this.nativeControl_.addEventListener("change", this.handleChange_),
        this.nativeControl_.addEventListener("focus", this.handleFocus_),
        this.nativeControl_.addEventListener("blur", this.handleBlur_),
        this.lineRipple_ &&
          ["mousedown", "touchstart"].forEach(t => {
            this.nativeControl_.addEventListener(t, this.handleClick_);
          }),
        this.foundation_.handleChange(),
        this.nativeControl_.disabled && (this.disabled = !0);
    }
    destroy() {
      this.nativeControl_.removeEventListener("change", this.handleChange_),
        this.nativeControl_.removeEventListener("focus", this.handleFocus_),
        this.nativeControl_.removeEventListener("blur", this.handleBlur_),
        ["mousedown", "touchstart"].forEach(t => {
          this.nativeControl_.removeEventListener(t, this.handleClick_);
        }),
        this.ripple && this.ripple.destroy(),
        this.outline_ && this.outline_.destroy(),
        super.destroy();
    }
    getDefaultFoundation() {
      return new sa(
        Object.assign(
          {
            addClass: t => this.root_.classList.add(t),
            removeClass: t => this.root_.classList.remove(t),
            hasClass: t => this.root_.classList.contains(t),
            getValue: () => this.nativeControl_.value,
            isRtl: () =>
              "rtl" ===
              window.getComputedStyle(this.root_).getPropertyValue("direction"),
            activateBottomLine: () => {
              this.lineRipple_ && this.lineRipple_.activate();
            },
            deactivateBottomLine: () => {
              this.lineRipple_ && this.lineRipple_.deactivate();
            }
          },
          this.getOutlineAdapterMethods_(),
          this.getLabelAdapterMethods_()
        )
      );
    }
    getOutlineAdapterMethods_() {
      return {
        hasOutline: () => !!this.outline_,
        notchOutline: (t, e) => {
          this.outline_ && this.outline_.notch(t, e);
        },
        closeOutline: () => {
          this.outline_ && this.outline_.closeNotch();
        }
      };
    }
    getLabelAdapterMethods_() {
      return {
        hasLabel: () => !!this.label_,
        floatLabel: t => {
          this.label_ && this.label_.float(t);
        },
        getLabelWidth: () => (this.label_ ? this.label_.getWidth() : 0)
      };
    }
    setTransformOrigin_(t) {
      const e = t.target.getBoundingClientRect(),
        n = t.clientX - e.left;
      this.lineRipple_.setRippleCenter(n);
    }
  }
  var oa = Object.freeze({
      __proto__: null,
      MDCSelect: ra,
      MDCSelectFoundation: sa
    }),
    la = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Select = e.SelectOption = void 0);
      var n = Cn(En),
        i = Cn(Tn),
        a = Cn(An),
        s = Cn(Ln),
        r = Cn(bn),
        o = Cn(Nn),
        l = Cn(On),
        c = Cn(li),
        d = (function(t) {
          function e() {
            var t;
            return (
              (0, i.default)(this, e),
              ((t = (0, s.default)(
                this,
                (0, r.default)(e).apply(this, arguments)
              )).componentName = "select-item"),
              (t.mdcProps = []),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, a.default)(e, [
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)("option", Object.assign({}, t), t.children);
                }
              }
            ]),
            e
          );
        })(c.default);
      e.SelectOption = d;
      var u = (function(t) {
        function e() {
          var t;
          return (
            (0, i.default)(this, e),
            ((t = (0, s.default)(
              this,
              (0, r.default)(e).apply(this, arguments)
            )).componentName = "select"),
            (t.mdcProps = ["disabled", "box", "outlined"]),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, a.default)(e, [
            {
              key: "componentDidMount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentDidMount",
                  this
                ).call(this),
                  this.control &&
                    ((this.MDComponent = new oa.MDCSelect(this.control)),
                    this.MDComponent.listen(
                      "MDCSelect:change",
                      this.onChanged
                    )),
                  this.updateSelection();
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                (0, n.default)(
                  (0, r.default)(e.prototype),
                  "componentWillUnmount",
                  this
                ).call(this),
                  this.MDComponent &&
                    (this.MDComponent.unlisten(
                      "MDCSelect:change",
                      this.onChanged
                    ),
                    this.MDComponent.destroy());
              }
            },
            {
              key: "componentDidUpdate",
              value: function() {
                this.updateSelection();
              }
            },
            {
              key: "onChanged",
              value: function(t) {
                this.MDComponent &&
                  (((t = t || {}).selectedIndex =
                    t.selectedIndex || this.MDComponent.selectedIndex),
                  this.props.onChange && this.props.onChange(t));
              }
            },
            {
              key: "updateSelection",
              value: function() {
                this.MDComponent &&
                  (this.props.selectedIndex &&
                    (this.MDComponent.selectedIndex =
                      "number" == typeof this.props.selectedIndex
                        ? this.props.selectedIndex
                        : 0),
                  0 === this.MDComponent.selectedIndex
                    ? this.labelRef &&
                      this.labelRef.classList.remove(
                        "mdc-floating-label--float-above"
                      )
                    : this.labelRef &&
                      this.labelRef.classList.add(
                        "mdc-floating-label--float-above"
                      ));
              }
            },
            {
              key: "materialDom",
              value: function(t) {
                var e = this,
                  n = t.outlined,
                  i = t.name,
                  a = (function(t, e) {
                    var n = {};
                    for (var i in t)
                      Object.prototype.hasOwnProperty.call(t, i) &&
                        e.indexOf(i) < 0 &&
                        (n[i] = t[i]);
                    if (
                      null != t &&
                      "function" == typeof Object.getOwnPropertySymbols
                    ) {
                      var a = 0;
                      for (
                        i = Object.getOwnPropertySymbols(t);
                        a < i.length;
                        a++
                      )
                        e.indexOf(i[a]) < 0 &&
                          Object.prototype.propertyIsEnumerable.call(t, i[a]) &&
                          (n[i[a]] = t[i[a]]);
                    }
                    return n;
                  })(t, ["outlined", "name"]);
                return (0, gn.h)(
                  "div",
                  Object.assign({ ref: this.setControlRef }, a),
                  (0, gn.h)(
                    "select",
                    { class: "mdc-select__native-control", name: i },
                    a.hintText &&
                      (0, gn.h)("option", {
                        value: "",
                        disabled: !0,
                        selected: !0
                      }),
                    a.children
                  ),
                  a.hintText &&
                    (0, gn.h)(
                      "div",
                      {
                        class: "mdc-floating-label",
                        ref: function(t) {
                          e.labelRef = t;
                        }
                      },
                      a.hintText
                    ),
                  !n && (0, gn.h)("div", { class: "mdc-line-ripple" }),
                  n &&
                    (0, gn.h)(
                      "div",
                      { class: "mdc-notched-outline" },
                      (0, gn.h)(
                        "svg",
                        null,
                        (0, gn.h)("path", {
                          class: "mdc-notched-outline__path"
                        })
                      )
                    ),
                  n && (0, gn.h)("div", { class: "mdc-notched-outline__idle" })
                );
              }
            }
          ]),
          e
        );
      })(c.default);
      (e.Select = u),
        (function(t, e, n, i) {
          var a,
            s = arguments.length,
            r =
              s < 3
                ? e
                : null === i
                ? (i = Object.getOwnPropertyDescriptor(e, n))
                : i;
          if (
            "object" ===
              ("undefined" == typeof Reflect
                ? "undefined"
                : (0, l.default)(Reflect)) &&
            "function" == typeof Reflect.decorate
          )
            r = Reflect.decorate(t, e, n, i);
          else
            for (var o = t.length - 1; o >= 0; o--)
              (a = t[o]) &&
                (r = (s < 3 ? a(r) : s > 3 ? a(e, n, r) : a(e, n)) || r);
          s > 3 && r && Object.defineProperty(e, n, r);
        })([oi.bind], u.prototype, "onChanged", null);
      var h = (function(t) {
        function e() {
          return (
            (0, i.default)(this, e),
            (0, s.default)(this, (0, r.default)(e).apply(this, arguments))
          );
        }
        return (0, o.default)(e, t), e;
      })(u);
      (e.default = h), (h.Item = d);
    }),
    ca = i(la);
  la.Select, la.SelectOption;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const da = {
      ROOT: "mdc-snackbar",
      TEXT: "mdc-snackbar__text",
      ACTION_WRAPPER: "mdc-snackbar__action-wrapper",
      ACTION_BUTTON: "mdc-snackbar__action-button",
      ACTIVE: "mdc-snackbar--active",
      MULTILINE: "mdc-snackbar--multiline",
      ACTION_ON_BOTTOM: "mdc-snackbar--action-on-bottom"
    },
    ua = {
      TEXT_SELECTOR: ".mdc-snackbar__text",
      ACTION_WRAPPER_SELECTOR: ".mdc-snackbar__action-wrapper",
      ACTION_BUTTON_SELECTOR: ".mdc-snackbar__action-button",
      SHOW_EVENT: "MDCSnackbar:show",
      HIDE_EVENT: "MDCSnackbar:hide"
    },
    ha = 2750;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  class pa extends kn {
    static get cssClasses() {
      return da;
    }
    static get strings() {
      return ua;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        setAriaHidden: () => {},
        unsetAriaHidden: () => {},
        setActionAriaHidden: () => {},
        unsetActionAriaHidden: () => {},
        setActionText: () => {},
        setMessageText: () => {},
        setFocus: () => {},
        isFocused: () => !1,
        visibilityIsHidden: () => !1,
        registerCapturedBlurHandler: () => {},
        deregisterCapturedBlurHandler: () => {},
        registerVisibilityChangeHandler: () => {},
        deregisterVisibilityChangeHandler: () => {},
        registerCapturedInteractionHandler: () => {},
        deregisterCapturedInteractionHandler: () => {},
        registerActionClickHandler: () => {},
        deregisterActionClickHandler: () => {},
        registerTransitionEndHandler: () => {},
        deregisterTransitionEndHandler: () => {},
        notifyShow: () => {},
        notifyHide: () => {}
      };
    }
    get active() {
      return this.active_;
    }
    constructor(t) {
      super(Object.assign(pa.defaultAdapter, t)),
        (this.active_ = !1),
        (this.actionWasClicked_ = !1),
        (this.dismissOnAction_ = !0),
        (this.firstFocus_ = !0),
        (this.pointerDownRecognized_ = !1),
        (this.snackbarHasFocus_ = !1),
        (this.snackbarData_ = null),
        (this.queue_ = []),
        (this.actionClickHandler_ = () => {
          (this.actionWasClicked_ = !0), this.invokeAction_();
        }),
        (this.visibilitychangeHandler_ = () => {
          clearTimeout(this.timeoutId_),
            (this.snackbarHasFocus_ = !0),
            this.adapter_.visibilityIsHidden() ||
              setTimeout(
                this.cleanup_.bind(this),
                this.snackbarData_.timeout || ha
              );
        }),
        (this.interactionHandler_ = t => {
          ("focus" !== t.type || this.adapter_.isFocused()) &&
            (("touchstart" !== t.type && "mousedown" !== t.type) ||
              (this.pointerDownRecognized_ = !0),
            this.handlePossibleTabKeyboardFocus_(t),
            "focus" === t.type && (this.pointerDownRecognized_ = !1));
        }),
        (this.blurHandler_ = () => {
          clearTimeout(this.timeoutId_),
            (this.snackbarHasFocus_ = !1),
            (this.timeoutId_ = setTimeout(
              this.cleanup_.bind(this),
              this.snackbarData_.timeout || ha
            ));
        });
    }
    init() {
      this.adapter_.registerActionClickHandler(this.actionClickHandler_),
        this.adapter_.setAriaHidden(),
        this.adapter_.setActionAriaHidden();
    }
    destroy() {
      this.adapter_.deregisterActionClickHandler(this.actionClickHandler_),
        this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_),
        this.adapter_.deregisterVisibilityChangeHandler(
          this.visibilitychangeHandler_
        ),
        ["touchstart", "mousedown", "focus"].forEach(t => {
          this.adapter_.deregisterCapturedInteractionHandler(
            t,
            this.interactionHandler_
          );
        });
    }
    dismissesOnAction() {
      return this.dismissOnAction_;
    }
    setDismissOnAction(t) {
      this.dismissOnAction_ = !!t;
    }
    show(t) {
      if (!t)
        throw new Error(
          "Please provide a data object with at least a message to display."
        );
      if (!t.message)
        throw new Error("Please provide a message to be displayed.");
      if (t.actionHandler && !t.actionText)
        throw new Error("Please provide action text with the handler.");
      if (this.active) return void this.queue_.push(t);
      clearTimeout(this.timeoutId_),
        (this.snackbarData_ = t),
        (this.firstFocus_ = !0),
        this.adapter_.registerVisibilityChangeHandler(
          this.visibilitychangeHandler_
        ),
        this.adapter_.registerCapturedBlurHandler(this.blurHandler_),
        ["touchstart", "mousedown", "focus"].forEach(t => {
          this.adapter_.registerCapturedInteractionHandler(
            t,
            this.interactionHandler_
          );
        });
      const { ACTIVE: e, MULTILINE: n, ACTION_ON_BOTTOM: i } = da;
      this.adapter_.setMessageText(this.snackbarData_.message),
        this.snackbarData_.multiline &&
          (this.adapter_.addClass(n),
          this.snackbarData_.actionOnBottom && this.adapter_.addClass(i)),
        this.snackbarData_.actionHandler
          ? (this.adapter_.setActionText(this.snackbarData_.actionText),
            (this.actionHandler_ = this.snackbarData_.actionHandler),
            this.setActionHidden_(!1))
          : (this.setActionHidden_(!0),
            (this.actionHandler_ = null),
            this.adapter_.setActionText(null)),
        (this.active_ = !0),
        this.adapter_.addClass(e),
        this.adapter_.unsetAriaHidden(),
        this.adapter_.notifyShow(),
        (this.timeoutId_ = setTimeout(
          this.cleanup_.bind(this),
          this.snackbarData_.timeout || ha
        ));
    }
    handlePossibleTabKeyboardFocus_() {
      this.firstFocus_ &&
        !this.pointerDownRecognized_ &&
        this.setFocusOnAction_(),
        (this.firstFocus_ = !1);
    }
    setFocusOnAction_() {
      this.adapter_.setFocus(),
        (this.snackbarHasFocus_ = !0),
        (this.firstFocus_ = !1);
    }
    invokeAction_() {
      try {
        if (!this.actionHandler_) return;
        this.actionHandler_();
      } finally {
        this.dismissOnAction_ && this.cleanup_();
      }
    }
    cleanup_() {
      if (!this.snackbarHasFocus_ || this.actionWasClicked_) {
        const { ACTIVE: t, MULTILINE: e, ACTION_ON_BOTTOM: n } = da;
        this.adapter_.removeClass(t);
        const i = () => {
          clearTimeout(this.timeoutId_),
            this.adapter_.deregisterTransitionEndHandler(i),
            this.adapter_.removeClass(e),
            this.adapter_.removeClass(n),
            this.setActionHidden_(!0),
            this.adapter_.setAriaHidden(),
            (this.active_ = !1),
            (this.snackbarHasFocus_ = !1),
            this.adapter_.notifyHide(),
            this.showNext_();
        };
        this.adapter_.registerTransitionEndHandler(i);
      }
    }
    showNext_() {
      this.queue_.length && this.show(this.queue_.shift());
    }
    setActionHidden_(t) {
      t
        ? this.adapter_.setActionAriaHidden()
        : this.adapter_.unsetActionAriaHidden();
    }
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ const _a = {
      animationstart: {
        noPrefix: "animationstart",
        webkitPrefix: "webkitAnimationStart",
        styleProperty: "animation"
      },
      animationend: {
        noPrefix: "animationend",
        webkitPrefix: "webkitAnimationEnd",
        styleProperty: "animation"
      },
      animationiteration: {
        noPrefix: "animationiteration",
        webkitPrefix: "webkitAnimationIteration",
        styleProperty: "animation"
      },
      transitionend: {
        noPrefix: "transitionend",
        webkitPrefix: "webkitTransitionEnd",
        styleProperty: "transition"
      }
    },
    fa = {
      animation: { noPrefix: "animation", webkitPrefix: "-webkit-animation" },
      transform: { noPrefix: "transform", webkitPrefix: "-webkit-transform" },
      transition: { noPrefix: "transition", webkitPrefix: "-webkit-transition" }
    };
  function ma(t, e) {
    if (
      !(function(t) {
        return (
          void 0 !== t.document && "function" == typeof t.document.createElement
        );
      })(t) ||
      !(function(t) {
        return t in _a || t in fa;
      })(e)
    )
      return e;
    const n = e in _a ? _a : fa,
      i = t.document.createElement("div");
    let a = "";
    return (
      (a =
        n === _a
          ? (function(t, e, n) {
              return e[t].styleProperty in n.style
                ? e[t].noPrefix
                : e[t].webkitPrefix;
            })(e, n, i)
          : n[e].noPrefix in i.style
          ? n[e].noPrefix
          : n[e].webkitPrefix),
      a
    );
  }
  function va(t, e) {
    return ma(t, e);
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class ga extends Rn {
    static attachTo(t) {
      return new ga(t);
    }
    show(t) {
      this.foundation_.show(t);
    }
    getDefaultFoundation() {
      const { TEXT_SELECTOR: t, ACTION_BUTTON_SELECTOR: e } = pa.strings,
        n = () => this.root_.querySelector(t),
        i = () => this.root_.querySelector(e);
      return new pa({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        setAriaHidden: () => this.root_.setAttribute("aria-hidden", "true"),
        unsetAriaHidden: () => this.root_.removeAttribute("aria-hidden"),
        setActionAriaHidden: () => i().setAttribute("aria-hidden", "true"),
        unsetActionAriaHidden: () => i().removeAttribute("aria-hidden"),
        setActionText: t => {
          i().textContent = t;
        },
        setMessageText: t => {
          n().textContent = t;
        },
        setFocus: () => i().focus(),
        isFocused: () => document.activeElement === i(),
        visibilityIsHidden: () => document.hidden,
        registerCapturedBlurHandler: t => i().addEventListener("blur", t, !0),
        deregisterCapturedBlurHandler: t =>
          i().removeEventListener("blur", t, !0),
        registerVisibilityChangeHandler: t =>
          document.addEventListener("visibilitychange", t),
        deregisterVisibilityChangeHandler: t =>
          document.removeEventListener("visibilitychange", t),
        registerCapturedInteractionHandler: (t, e) =>
          document.body.addEventListener(t, e, !0),
        deregisterCapturedInteractionHandler: (t, e) =>
          document.body.removeEventListener(t, e, !0),
        registerActionClickHandler: t => i().addEventListener("click", t),
        deregisterActionClickHandler: t => i().removeEventListener("click", t),
        registerTransitionEndHandler: t =>
          this.root_.addEventListener(va(window, "transitionend"), t),
        deregisterTransitionEndHandler: t =>
          this.root_.removeEventListener(va(window, "transitionend"), t),
        notifyShow: () => this.emit(pa.strings.SHOW_EVENT),
        notifyHide: () => this.emit(pa.strings.HIDE_EVENT)
      });
    }
    get dismissesOnAction() {
      return this.foundation_.dismissesOnAction();
    }
    set dismissesOnAction(t) {
      this.foundation_.setDismissOnAction(t);
    }
  }
  var Ca = Object.freeze({
      __proto__: null,
      MDCSnackbarFoundation: pa,
      MDCSnackbar: ga
    }),
    ba = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Snackbar = void 0);
      var n = Cn(Tn),
        i = Cn(An),
        a = Cn(Ln),
        s = Cn(bn),
        r = Cn(En),
        o = Cn(Nn);
      function l(t, e) {
        for (var n in t) if (!(n in e)) return !0;
        for (var i in e) if (t[i] !== e[i]) return !0;
        return !1;
      }
      var c = (function(t) {
        function e() {
          var t;
          return (
            (0, n.default)(this, e),
            ((t = (0, a.default)(
              this,
              (0, s.default)(e).apply(this, arguments)
            )).componentName = "snackbar"),
            (t.mdcProps = []),
            t
          );
        }
        return (
          (0, o.default)(e, t),
          (0, i.default)(e, [
            {
              key: "componentDidMount",
              value: function() {
                (0, r.default)(
                  (0, s.default)(e.prototype),
                  "componentDidMount",
                  this
                ).call(this),
                  this.control &&
                    ((this.MDComponent = new Ca.MDCSnackbar(this.control)),
                    void 0 === this.props.dismissesOnAction ||
                    null === this.props.dismissesOnAction
                      ? (this.MDComponent.dismissesOnAction = !0)
                      : (this.MDComponent.dismissesOnAction = this.props.dismissesOnAction));
              }
            },
            {
              key: "componentWillUnmount",
              value: function() {
                (0, r.default)(
                  (0, s.default)(e.prototype),
                  "componentWillUnmount",
                  this
                ).call(this),
                  this.MDComponent && this.MDComponent.destroy();
              }
            },
            {
              key: "shouldComponentUpdate",
              value: function(t, e) {
                return l(this.props, t) || l(this.state, e);
              }
            },
            {
              key: "materialDom",
              value: function(t) {
                return (0, gn.h)(
                  "div",
                  Object.assign(
                    {
                      "aria-live": "assertive",
                      "aria-atomic": "true",
                      "aria-hidden": "true",
                      ref: this.setControlRef
                    },
                    t
                  ),
                  (0, gn.h)("div", { className: "mdc-snackbar__text" }),
                  (0, gn.h)(
                    "div",
                    { className: "mdc-snackbar__action-wrapper" },
                    (0, gn.h)("button", {
                      type: "button",
                      className: "mdc-snackbar__action-button"
                    })
                  )
                );
              }
            }
          ]),
          e
        );
      })(Cn(li).default);
      e.Snackbar = c;
      var d = c;
      e.default = d;
    }),
    ya = i(ba);
  ba.Snackbar;
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  const Ea = {
      UPGRADED: "mdc-checkbox--upgraded",
      CHECKED: "mdc-checkbox--checked",
      INDETERMINATE: "mdc-checkbox--indeterminate",
      DISABLED: "mdc-checkbox--disabled",
      ANIM_UNCHECKED_CHECKED: "mdc-checkbox--anim-unchecked-checked",
      ANIM_UNCHECKED_INDETERMINATE:
        "mdc-checkbox--anim-unchecked-indeterminate",
      ANIM_CHECKED_UNCHECKED: "mdc-checkbox--anim-checked-unchecked",
      ANIM_CHECKED_INDETERMINATE: "mdc-checkbox--anim-checked-indeterminate",
      ANIM_INDETERMINATE_CHECKED: "mdc-checkbox--anim-indeterminate-checked",
      ANIM_INDETERMINATE_UNCHECKED: "mdc-checkbox--anim-indeterminate-unchecked"
    },
    Ta = {
      NATIVE_CONTROL_SELECTOR: ".mdc-checkbox__native-control",
      TRANSITION_STATE_INIT: "init",
      TRANSITION_STATE_CHECKED: "checked",
      TRANSITION_STATE_UNCHECKED: "unchecked",
      TRANSITION_STATE_INDETERMINATE: "indeterminate",
      ARIA_CHECKED_ATTR: "aria-checked",
      ARIA_CHECKED_INDETERMINATE_VALUE: "mixed"
    },
    Ia = { ANIM_END_LATCH_MS: 250 },
    Aa = ["checked", "indeterminate"];
  class Oa extends kn {
    static get cssClasses() {
      return Ea;
    }
    static get strings() {
      return Ta;
    }
    static get numbers() {
      return Ia;
    }
    static get defaultAdapter() {
      return {
        addClass: () => {},
        removeClass: () => {},
        setNativeControlAttr: () => {},
        removeNativeControlAttr: () => {},
        getNativeControl: () => {},
        forceLayout: () => {},
        isAttachedToDOM: () => {}
      };
    }
    constructor(t) {
      super(Object.assign(Oa.defaultAdapter, t)),
        (this.currentCheckState_ = Ta.TRANSITION_STATE_INIT),
        (this.currentAnimationClass_ = ""),
        (this.animEndLatchTimer_ = 0),
        (this.enableAnimationEndHandler_ = !1);
    }
    init() {
      (this.currentCheckState_ = this.determineCheckState_(
        this.getNativeControl_()
      )),
        this.updateAriaChecked_(),
        this.adapter_.addClass(Ea.UPGRADED),
        this.installPropertyChangeHooks_();
    }
    destroy() {
      this.uninstallPropertyChangeHooks_();
    }
    isChecked() {
      return this.getNativeControl_().checked;
    }
    setChecked(t) {
      this.getNativeControl_().checked = t;
    }
    isIndeterminate() {
      return this.getNativeControl_().indeterminate;
    }
    setIndeterminate(t) {
      this.getNativeControl_().indeterminate = t;
    }
    isDisabled() {
      return this.getNativeControl_().disabled;
    }
    setDisabled(t) {
      (this.getNativeControl_().disabled = t),
        t
          ? this.adapter_.addClass(Ea.DISABLED)
          : this.adapter_.removeClass(Ea.DISABLED);
    }
    getValue() {
      return this.getNativeControl_().value;
    }
    setValue(t) {
      this.getNativeControl_().value = t;
    }
    handleAnimationEnd() {
      this.enableAnimationEndHandler_ &&
        (clearTimeout(this.animEndLatchTimer_),
        (this.animEndLatchTimer_ = setTimeout(() => {
          this.adapter_.removeClass(this.currentAnimationClass_),
            (this.enableAnimationEndHandler_ = !1);
        }, Ia.ANIM_END_LATCH_MS)));
    }
    handleChange() {
      this.transitionCheckState_();
    }
    installPropertyChangeHooks_() {
      const t = this.getNativeControl_(),
        e = Object.getPrototypeOf(t);
      Aa.forEach(n => {
        const i = Object.getOwnPropertyDescriptor(e, n);
        if (Da(i)) {
          const e = {
            get: i.get,
            set: e => {
              i.set.call(t, e), this.transitionCheckState_();
            },
            configurable: i.configurable,
            enumerable: i.enumerable
          };
          Object.defineProperty(t, n, e);
        }
      });
    }
    uninstallPropertyChangeHooks_() {
      const t = this.getNativeControl_(),
        e = Object.getPrototypeOf(t);
      Aa.forEach(n => {
        const i = Object.getOwnPropertyDescriptor(e, n);
        Da(i) && Object.defineProperty(t, n, i);
      });
    }
    transitionCheckState_() {
      const t = this.adapter_.getNativeControl();
      if (!t) return;
      const e = this.currentCheckState_,
        n = this.determineCheckState_(t);
      e !== n &&
        (this.updateAriaChecked_(),
        this.currentAnimationClass_.length > 0 &&
          (clearTimeout(this.animEndLatchTimer_),
          this.adapter_.forceLayout(),
          this.adapter_.removeClass(this.currentAnimationClass_)),
        (this.currentAnimationClass_ = this.getTransitionAnimationClass_(e, n)),
        (this.currentCheckState_ = n),
        this.adapter_.isAttachedToDOM() &&
          this.currentAnimationClass_.length > 0 &&
          (this.adapter_.addClass(this.currentAnimationClass_),
          (this.enableAnimationEndHandler_ = !0)));
    }
    determineCheckState_(t) {
      const {
        TRANSITION_STATE_INDETERMINATE: e,
        TRANSITION_STATE_CHECKED: n,
        TRANSITION_STATE_UNCHECKED: i
      } = Ta;
      return t.indeterminate ? e : t.checked ? n : i;
    }
    getTransitionAnimationClass_(t, e) {
      const {
          TRANSITION_STATE_INIT: n,
          TRANSITION_STATE_CHECKED: i,
          TRANSITION_STATE_UNCHECKED: a
        } = Ta,
        {
          ANIM_UNCHECKED_CHECKED: s,
          ANIM_UNCHECKED_INDETERMINATE: r,
          ANIM_CHECKED_UNCHECKED: o,
          ANIM_CHECKED_INDETERMINATE: l,
          ANIM_INDETERMINATE_CHECKED: c,
          ANIM_INDETERMINATE_UNCHECKED: d
        } = Oa.cssClasses;
      switch (t) {
        case n:
          if (e === a) return "";
        case a:
          return e === i ? s : r;
        case i:
          return e === a ? o : l;
        default:
          return e === i ? c : d;
      }
    }
    updateAriaChecked_() {
      this.isIndeterminate()
        ? this.adapter_.setNativeControlAttr(
            Ta.ARIA_CHECKED_ATTR,
            Ta.ARIA_CHECKED_INDETERMINATE_VALUE
          )
        : this.adapter_.removeNativeControlAttr(Ta.ARIA_CHECKED_ATTR);
    }
    getNativeControl_() {
      return (
        this.adapter_.getNativeControl() || {
          checked: !1,
          indeterminate: !1,
          disabled: !1,
          value: null
        }
      );
    }
  }
  function Da(t) {
    return !!t && "function" == typeof t.set;
  }
  /**
   * @license
   * Copyright 2016 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */ class La extends Rn {
    static attachTo(t) {
      return new La(t);
    }
    get nativeCb_() {
      const { NATIVE_CONTROL_SELECTOR: t } = Oa.strings;
      return this.root_.querySelector(t);
    }
    constructor(...t) {
      super(...t),
        (this.ripple_ = this.initRipple_()),
        this.handleChange_,
        this.handleAnimationEnd_;
    }
    initialSyncWithDOM() {
      (this.handleChange_ = () => this.foundation_.handleChange()),
        (this.handleAnimationEnd_ = () =>
          this.foundation_.handleAnimationEnd()),
        this.nativeCb_.addEventListener("change", this.handleChange_),
        this.listen(va(window, "animationend"), this.handleAnimationEnd_);
    }
    initRipple_() {
      const t = Bn(HTMLElement.prototype),
        e = Object.assign(qn.createAdapter(this), {
          isUnbounded: () => !0,
          isSurfaceActive: () => this.nativeCb_[t](":active"),
          registerInteractionHandler: (t, e) =>
            this.nativeCb_.addEventListener(t, e),
          deregisterInteractionHandler: (t, e) =>
            this.nativeCb_.removeEventListener(t, e)
        }),
        n = new Kn(e);
      return new qn(this.root_, n);
    }
    getDefaultFoundation() {
      return new Oa({
        addClass: t => this.root_.classList.add(t),
        removeClass: t => this.root_.classList.remove(t),
        setNativeControlAttr: (t, e) => this.nativeCb_.setAttribute(t, e),
        removeNativeControlAttr: t => this.nativeCb_.removeAttribute(t),
        getNativeControl: () => this.nativeCb_,
        forceLayout: () => this.root_.offsetWidth,
        isAttachedToDOM: () => Boolean(this.root_.parentNode)
      });
    }
    get ripple() {
      return this.ripple_;
    }
    get checked() {
      return this.foundation_.isChecked();
    }
    set checked(t) {
      this.foundation_.setChecked(t);
    }
    get indeterminate() {
      return this.foundation_.isIndeterminate();
    }
    set indeterminate(t) {
      this.foundation_.setIndeterminate(t);
    }
    get disabled() {
      return this.foundation_.isDisabled();
    }
    set disabled(t) {
      this.foundation_.setDisabled(t);
    }
    get value() {
      return this.foundation_.getValue();
    }
    set value(t) {
      this.foundation_.setValue(t);
    }
    destroy() {
      this.ripple_.destroy(),
        this.nativeCb_.removeEventListener("change", this.handleChange_),
        this.unlisten(va(window, "animationend"), this.handleAnimationEnd_),
        super.destroy();
    }
  }
  var Sa = Object.freeze({
      __proto__: null,
      MDCCheckboxFoundation: Oa,
      MDCCheckbox: La
    }),
    Na = a(function(t, e) {
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.default = e.Checkbox = void 0);
      var n = Cn(Tn),
        i = Cn(An),
        a = Cn(Ln),
        s = Cn(bn),
        r = Cn(En),
        o = Cn(Nn),
        l = (function(t) {
          function e() {
            var t;
            return (
              (0, n.default)(this, e),
              ((t = (0, a.default)(
                this,
                (0, s.default)(e).apply(this, arguments)
              )).componentName = "checkbox"),
              (t.mdcProps = ["disabled"]),
              (t.mdcNotifyProps = ["checked", "indeterminate", "disabled"]),
              t
            );
          }
          return (
            (0, o.default)(e, t),
            (0, i.default)(e, [
              {
                key: "componentDidMount",
                value: function() {
                  (0, r.default)(
                    (0, s.default)(e.prototype),
                    "componentDidMount",
                    this
                  ).call(this),
                    this.control &&
                      (this.MDComponent = new Sa.MDCCheckbox(this.control)),
                    this.afterComponentDidMount();
                }
              },
              {
                key: "componentWillUnmount",
                value: function() {
                  (0, r.default)(
                    (0, s.default)(e.prototype),
                    "componentWillUnmount",
                    this
                  ).call(this),
                    this.MDComponent && this.MDComponent.destroy();
                }
              },
              {
                key: "materialDom",
                value: function(t) {
                  return (0, gn.h)(
                    "div",
                    { ref: this.setControlRef },
                    (0, gn.h)(
                      "input",
                      Object.assign(
                        {
                          type: "checkbox",
                          className: "mdc-checkbox__native-control"
                        },
                        t
                      )
                    ),
                    (0, gn.h)(
                      "div",
                      { className: "mdc-checkbox__background" },
                      (0, gn.h)(
                        "svg",
                        {
                          version: "1.1",
                          className: "mdc-checkbox__checkmark",
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 24 24"
                        },
                        (0, gn.h)("path", {
                          className: "mdc-checkbox__checkmark-path",
                          fill: "none",
                          stroke: "white",
                          d: "M1.73,12.91 8.1,19.28 22.79,4.59"
                        })
                      ),
                      (0, gn.h)("div", { className: "mdc-checkbox__mixedmark" })
                    )
                  );
                }
              }
            ]),
            e
          );
        })(Cn(li).default);
      e.Checkbox = l;
      var c = l;
      e.default = c;
    }),
    ka = i(Na);
  Na.Checkbox;
  class Ra extends Qe {
    constructor(...n) {
      super(...n),
        e(this, "state", {
          object: null,
          objectType: null,
          objectToBe: {
            title: "",
            description: "",
            author: null,
            work_classification: -1,
            activity_classification: -1,
            column: null
          },
          parentActivity: null,
          linkID: null,
          parentID: null,
          isNode: null,
          isWeek: null,
          isActivity: null,
          isWeek: null,
          isCourse: null,
          isProgram: null,
          isCourseLevelComponent: null,
          isProgramLevelComponent: null,
          isDeleteForm: !1,
          isUpdateForm: !1,
          isOwnView: !1
        }),
        e(this, "componentDidMount", e => {
          t.currentComponentInstance = this;
        }),
        e(this, "onRemove", t => {
          var e;
          (e = this),
            $.post(e.props.removeURL, {
              linkID: JSON.stringify(e.state.linkID),
              isProgramLevelComponent: JSON.stringify(
                e.state.isProgramLevelComponent
              ),
              objectID: JSON.stringify(e.state.object.id),
              objectType: JSON.stringify(e.state.objectType)
            })
              .done(function(t) {
                "posted" == t.action
                  ? e.snack.MDComponent.show({
                      message: e.props.snackMessageOnSuccess
                    })
                  : e.snack.MDComponent.show({
                      message: e.props.snackMessageOnFailure
                    });
              })
              .fail(function(t) {
                e.snack.MDComponent.show({
                  message: e.props.snackMessageOnFailure
                });
              }),
            t.preventDefault(),
            this.setState({
              object: null,
              objectType: null,
              objectToBe: {
                title: "",
                description: "",
                author: null,
                work_classification: -1,
                activity_classification: -1,
                column: null
              },
              parentActivity: null,
              linkID: null,
              parentID: null,
              isNode: null,
              isWeek: null,
              isActivity: null,
              isWeek: null,
              isCourse: null,
              isProgram: null,
              isCourseLevelComponent: null,
              isProgramLevelComponent: null,
              isDeleteForm: !1,
              isUpdateForm: !1,
              isOwnView: !1
            });
        }),
        e(this, "onSubmit", t => {
          var e;
          this.state.isDeleteForm
            ? ((e = this),
              $.post(e.props.deleteURL, {
                objectID: JSON.stringify(e.state.object.id),
                objectType: JSON.stringify(e.state.objectType)
              })
                .done(function(t) {
                  "posted" == t.action
                    ? e.snack.MDComponent.show({
                        message: e.props.snackMessageOnSuccess
                      })
                    : e.snack.MDComponent.show({
                        message: e.props.snackMessageOnFailure
                      });
                })
                .fail(function(t) {
                  e.snack.MDComponent.show({
                    message: e.props.snackMessageOnFailure
                  });
                }),
              e.state.isOwnView &&
                setTimeout(function() {
                  window.location.href = e.props.homeURL;
                }, 2e3))
            : this.state.isUpdateForm
            ? (function(t) {
                console.log(t.props.updateURL),
                  console.log(JSON.stringify(t.state.objectToBe)),
                  console.log(JSON.stringify(t.state.objectType)),
                  console.log(JSON.stringify(t.state.parentID)),
                  console.log(JSON.stringify(t.state.isProgramLevelComponent)),
                  $.post(t.props.updateURL, {
                    object: JSON.stringify(t.state.object),
                    objectID: JSON.stringify(t.state.object.id),
                    objectType: JSON.stringify(t.state.objectType)
                  })
                    .done(function(e) {
                      "posted" == e.action
                        ? t.snack.MDComponent.show({
                            message: t.props.snackMessageOnSuccess
                          })
                        : t.snack.MDComponent.show({
                            message: t.props.snackMessageOnFailure
                          });
                    })
                    .fail(function(e) {
                      t.snack.MDComponent.show({
                        message: t.props.snackMessageOnFailure
                      });
                    });
              })(this)
            : (function(t) {
                console.log(t.props.createURL),
                  console.log(JSON.stringify(t.state.objectToBe)),
                  console.log(JSON.stringify(t.state.objectType)),
                  console.log(JSON.stringify(t.state.parentID)),
                  console.log(JSON.stringify(t.state.isProgramLevelComponent)),
                  $.post(t.props.createURL, {
                    object: JSON.stringify(t.state.objectToBe),
                    objectType: JSON.stringify(t.state.objectType),
                    parentID: JSON.stringify(t.state.parentID),
                    isProgramLevelComponent: JSON.stringify(
                      t.state.isProgramLevelComponent
                    )
                  })
                    .done(function(e) {
                      "posted" == e.action
                        ? t.snack.MDComponent.show({
                            message: t.props.snackMessageOnSuccess
                          })
                        : t.snack.MDComponent.show({
                            message: t.props.snackMessageOnFailure
                          });
                    })
                    .fail(function(e) {
                      t.snack.MDComponent.show({
                        message: t.props.snackMessageOnFailure
                      });
                    });
              })(this),
            t.preventDefault(),
            this.setState({
              object: null,
              objectType: null,
              objectToBe: {
                title: "",
                description: "",
                author: null,
                work_classification: -1,
                activity_classification: -1,
                column: null
              },
              parentActivity: null,
              linkID: null,
              parentID: null,
              isNode: null,
              isWeek: null,
              isActivity: null,
              isWeek: null,
              isCourse: null,
              isProgram: null,
              isCourseLevelComponent: null,
              isProgramLevelComponent: null,
              isDeleteForm: !1,
              isUpdateForm: !1,
              isOwnView: !1
            });
        }),
        e(this, "onClose", t => {
          t.preventDefault(),
            this.setState({
              object: null,
              objectType: null,
              objectToBe: {
                title: "",
                description: "",
                author: null,
                work_classification: -1,
                activity_classification: -1,
                column: null
              },
              parentActivity: null,
              linkID: null,
              parentID: null,
              isNode: null,
              isWeek: null,
              isActivity: null,
              isWeek: null,
              isCourse: null,
              isProgram: null,
              isCourseLevelComponent: null,
              isProgramLevelComponent: null,
              isDeleteForm: !1,
              isUpdateForm: !1
            });
        }),
        e(this, "updateObjectToBeDescription", t => {
          this.setState({
            objectToBe: {
              ...this.state.objectToBe,
              description: t.target.value
            }
          });
        }),
        e(this, "updateObjectDescription", t => {
          this.setState({
            object: { ...this.state.object, description: t.target.value }
          });
        }),
        e(this, "updateObjectToBeTitle", t => {
          this.setState({
            objectToBe: { ...this.state.objectToBe, title: t.target.value }
          });
        }),
        e(this, "updateObjectTitle", t => {
          this.setState({
            object: { ...this.state.object, title: t.target.value }
          });
        }),
        e(this, "updateObjectToBeWorkClassification", t => {
          this.setState({
            objectToBe: {
              ...this.state.objectToBe,
              work_classification: +t.target.value
            }
          });
        }),
        e(this, "updateObjectWorkClassification", t => {
          this.setState({
            object: {
              ...this.state.object,
              work_classification: +t.target.value
            }
          });
        }),
        e(this, "updateObjectToBeActivityClassification", t => {
          this.setState({
            objectToBe: {
              ...this.state.objectToBe,
              activity_classification: +t.target.value
            }
          });
        }),
        e(this, "updateObjectActivityClassification", t => {
          this.setState({
            object: {
              ...this.state.object,
              activity_classification: +t.target.value
            }
          });
        }),
        e(this, "updateObjectNodeColumn", t => {
          this.setState({
            object: { ...this.state.object, column: t.target.value }
          });
        }),
        e(this, "updateObjectToBeNodeColumn", t => {
          this.setState({
            objectToBe: { ...this.state.objectToBe, column: t.target.value }
          });
        }),
        e(this, "updateObjectType", t => {
          this.setState({ objectType: t.target.value });
        });
    }
    render() {
      if (this.state.isDeleteForm)
        return React.createElement(
          "div",
          null,
          React.createElement(
            pi,
            {
              style: "padding: 0; border: 0; width: 0;",
              ref: t => {
                this.dlg = t;
              }
            },
            React.createElement(
              "form",
              { class: "deletion-form" },
              React.createElement(pi.Header, null, this.state.object.title),
              React.createElement(
                pi.Body,
                { scrollable: !1 },
                "Are you sure you'd like to delete or remove this",
                " ",
                this.state.objectType,
                "?"
              ),
              React.createElement(
                pi.Footer,
                null,
                React.createElement(
                  pi.FooterButton,
                  { id: "cancel-button", cancel: !0, onClick: this.onClose },
                  "Cancel"
                ),
                React.createElement(
                  pi.FooterButton,
                  {
                    id: "remove-button",
                    accept: !0,
                    disabled: !(
                      this.state.isProgramLevelComponent ||
                      this.state.isCourseLevelComponent
                    ),
                    raised: !0,
                    onClick: this.onRemove
                  },
                  "Remove"
                ),
                React.createElement(
                  pi.FooterButton,
                  {
                    id: "submit-button",
                    accept: !0,
                    disabled: !1,
                    raised: !0,
                    onClick: this.onSubmit
                  },
                  "Delete"
                )
              )
            )
          ),
          React.createElement(ya, {
            ref: t => {
              this.snack = t;
            }
          })
        );
      if (this.state.isUpdateForm) {
        var t = [];
        if (this.state.isNode)
          for (
            var e = this.state.parentActivity.columnworkflow_set, n = 0;
            n < e.length;
            n++
          )
            t.push(
              React.createElement(
                ca.Item,
                { value: e[n].column.id },
                e[n].column.title
              )
            );
        return React.createElement(
          "div",
          null,
          React.createElement(
            pi,
            {
              style: "padding: 0; border: 0; width: 0;",
              ref: t => {
                this.dlg = t;
              }
            },
            React.createElement(
              "form",
              { class: "update-form" },
              React.createElement(
                pi.Header,
                null,
                "Edit your ",
                this.state.objectType,
                "."
              ),
              React.createElement(
                pi.Body,
                { scrollable: !1 },
                React.createElement(
                  "div",
                  null,
                  React.createElement(Vi, {
                    id: "title-field",
                    label: "Title",
                    value: this.state.object.title,
                    onInput: this.updateObjectTitle,
                    maxlength: "30"
                  })
                ),
                !this.state.isWeek &&
                  React.createElement(
                    "div",
                    null,
                    React.createElement(Vi, {
                      id: "description-field",
                      textarea: !0,
                      label: "Description",
                      value: this.state.object.description,
                      onInput: this.updateObjectDescription,
                      maxlength: "400"
                    })
                  ),
                this.state.isNode &&
                  React.createElement(
                    "div",
                    null,
                    React.createElement(
                      ca,
                      {
                        id: "work-classification-field",
                        hintText: "Select a work classification",
                        selectedIndex: this.state.object.work_classification,
                        onChange: this.updateObjectWorkClassification,
                        style: "min-width: 240px;"
                      },
                      React.createElement(
                        ca.Item,
                        { value: "1" },
                        "Individual Work"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "2" },
                        "Work in Groups"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "3" },
                        "Whole Class"
                      )
                    )
                  ),
                this.state.isNode &&
                  React.createElement(
                    "div",
                    null,
                    React.createElement(
                      ca,
                      {
                        id: "activity-classification-field",
                        hintText: "Select an activity classification",
                        selectedIndex: this.state.object
                          .activity_classification,
                        onChange: this.updateObjectActivityClassification,
                        style: "min-width: 265px;"
                      },
                      React.createElement(
                        ca.Item,
                        { value: "1" },
                        "Gather Information"
                      ),
                      React.createElement(ca.Item, { value: "2" }, "Discuss"),
                      React.createElement(ca.Item, { value: "3" }, "Solve"),
                      React.createElement(ca.Item, { value: "4" }, "Analyze"),
                      React.createElement(
                        ca.Item,
                        { value: "5" },
                        "Assess/Review Papers"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "6" },
                        "Evaluate Peers"
                      ),
                      React.createElement(ca.Item, { value: "7" }, "Debate"),
                      React.createElement(
                        ca.Item,
                        { value: "8" },
                        "Game/Roleplay"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "9" },
                        "Create/Design"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "10" },
                        "Revise/Improve"
                      ),
                      React.createElement(ca.Item, { value: "11" }, "Read"),
                      React.createElement(ca.Item, { value: "12" }, "Write"),
                      React.createElement(ca.Item, { value: "13" }, "Present"),
                      React.createElement(
                        ca.Item,
                        { value: "14" },
                        "Experiment/Inquiry"
                      ),
                      React.createElement(
                        ca.Item,
                        { value: "15" },
                        "Quiz/Test"
                      ),
                      React.createElement(ca.Item, { value: "16" }, "Other")
                    )
                  ),
                this.state.isNode &&
                  React.createElement(
                    "div",
                    null,
                    React.createElement(
                      ca,
                      {
                        id: "node-column-field",
                        hintText: "Select a column",
                        onChange: this.updateObjectNodeColumn,
                        style: "min-width: 265px;"
                      },
                      t
                    )
                  )
              ),
              React.createElement(
                pi.Footer,
                null,
                React.createElement(
                  pi.FooterButton,
                  { id: "cancel-button", cancel: !0, onClick: this.onClose },
                  "Cancel"
                ),
                React.createElement(
                  pi.FooterButton,
                  {
                    id: "submit-button",
                    accept: !0,
                    disabled:
                      (!this.state.object.title && this.state.isWeek) ||
                      ((!this.state.object.title ||
                        !this.state.object.description) &&
                        !this.state.isWeek) ||
                      (this.state.isNode &&
                        (!this.state.object.work_classification ||
                          !this.state.object.activity_classification)),
                    raised: !0,
                    onClick: this.onSubmit
                  },
                  "Update"
                )
              )
            )
          ),
          React.createElement(ya, {
            ref: t => {
              this.snack = t;
            }
          })
        );
      }
      t = [];
      if (this.state.isNode)
        for (
          e = this.state.parentActivity.columnworkflow_set, n = 0;
          n < e.length;
          n++
        )
          t.push(
            React.createElement(
              ca.Item,
              { value: e[n].column.id },
              e[n].column.title
            )
          );
      return React.createElement(
        "div",
        null,
        React.createElement(
          pi,
          {
            style: "padding: 0; border: 0; width: 0;",
            ref: t => {
              this.dlg = t;
            }
          },
          React.createElement(
            "form",
            { class: "creation-form" },
            React.createElement(
              pi.Header,
              null,
              "Create a",
              " ",
              (this.state.isCourseLevelComponent ||
                this.state.isProgramLevelComponent) &&
                "node",
              !(
                this.state.isCourseLevelComponent ||
                this.state.isProgramLevelComponent
              ) && this.state.objectType,
              "."
            ),
            React.createElement(
              pi.Body,
              { scrollable: !1 },
              this.state.isProgramLevelComponent &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(
                    ca,
                    {
                      id: "component-field",
                      hintText: "Select a node type",
                      onChange: this.updateObjectType,
                      style: "min-width:180px;"
                    },
                    React.createElement(ca.Item, { value: "course" }, "Course"),
                    React.createElement(
                      ca.Item,
                      { value: "assessment" },
                      "Assessment"
                    )
                  )
                ),
              this.state.isCourseLevelComponent &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(
                    ca,
                    {
                      id: "component_field",
                      hintText: "Select a node type",
                      onChange: this.updateObjectType,
                      style: "min-width:180px;"
                    },
                    React.createElement(
                      ca.Item,
                      { value: "activity" },
                      "Activity"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "assessment" },
                      "Assessment"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "artifact" },
                      "Artifact"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "preparation" },
                      "Preparation"
                    )
                  )
                ),
              React.createElement(
                "div",
                null,
                React.createElement(Vi, {
                  id: "title-field",
                  label: "Title",
                  value: this.state.objectToBe.title,
                  onInput: this.updateObjectToBeTitle,
                  maxlength: "30"
                })
              ),
              !this.state.isWeek &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(Vi, {
                    id: "description-field",
                    textarea: !0,
                    label: "Description",
                    value: this.state.objectToBe.description,
                    onInput: this.updateObjectToBeDescription,
                    maxlength: "400"
                  })
                ),
              this.state.isNode &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(
                    ca,
                    {
                      id: "work-classification-field",
                      hintText: "Select a work classification",
                      selectedIndex: this.state.objectToBe.work_classification,
                      onChange: this.updateObjectToBeWorkClassification,
                      style: "min-width: 240px;"
                    },
                    React.createElement(
                      ca.Item,
                      { value: "1" },
                      "Individual Work"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "2" },
                      "Work in Groups"
                    ),
                    React.createElement(ca.Item, { value: "3" }, "Whole Class")
                  )
                ),
              this.state.isNode &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(
                    ca,
                    {
                      id: "activity-classification-field",
                      hintText: "Select an activity classification",
                      selectedIndex: this.state.objectToBe
                        .activity_classification,
                      onChange: this.updateObjectToBeActivityClassification,
                      style: "min-width: 265px;"
                    },
                    React.createElement(
                      ca.Item,
                      { value: "1" },
                      "Gather Information"
                    ),
                    React.createElement(ca.Item, { value: "2" }, "Discuss"),
                    React.createElement(ca.Item, { value: "3" }, "Solve"),
                    React.createElement(ca.Item, { value: "4" }, "Analyze"),
                    React.createElement(
                      ca.Item,
                      { value: "5" },
                      "Assess/Review Papers"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "6" },
                      "Evaluate Peers"
                    ),
                    React.createElement(ca.Item, { value: "7" }, "Debate"),
                    React.createElement(
                      ca.Item,
                      { value: "8" },
                      "Game/Roleplay"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "9" },
                      "Create/Design"
                    ),
                    React.createElement(
                      ca.Item,
                      { value: "10" },
                      "Revise/Improve"
                    ),
                    React.createElement(ca.Item, { value: "11" }, "Read"),
                    React.createElement(ca.Item, { value: "12" }, "Write"),
                    React.createElement(ca.Item, { value: "13" }, "Present"),
                    React.createElement(
                      ca.Item,
                      { value: "14" },
                      "Experiment/Inquiry"
                    ),
                    React.createElement(ca.Item, { value: "15" }, "Quiz/Test"),
                    React.createElement(ca.Item, { value: "16" }, "Other")
                  )
                ),
              this.state.isNode &&
                React.createElement(
                  "div",
                  null,
                  React.createElement(
                    ca,
                    {
                      id: "node-column-field",
                      hintText: "Select a column",
                      onChange: this.updateObjectToBeNodeColumn,
                      style: "min-width: 265px;"
                    },
                    t
                  )
                )
            ),
            React.createElement(
              pi.Footer,
              null,
              React.createElement(
                pi.FooterButton,
                { id: "cancel-button", cancel: !0, onClick: this.onClose },
                "Cancel"
              ),
              React.createElement(
                pi.FooterButton,
                {
                  id: "submit-button",
                  accept: !0,
                  disabled:
                    (!this.state.objectToBe.title && this.state.isWeek) ||
                    ((!this.state.objectToBe.title ||
                      !this.state.objectToBe.description) &&
                      !this.state.isWeek) ||
                    (this.state.isNode &&
                      (!this.state.objectToBe.work_classification ||
                        !this.state.objectToBe.activity_classification)) ||
                    ((this.state.isProgramLevelComponent ||
                      this.state.isCourseLevelComponent) &&
                      !this.state.objectType),
                  raised: !0,
                  onClick: this.onSubmit
                },
                "Create"
              )
            )
          )
        ),
        React.createElement(ya, {
          ref: t => {
            this.snack = t;
          }
        })
      );
    }
  }
  class xa extends Qe {
    constructor(...n) {
      super(...n),
        e(this, "state", {
          object: null,
          objectType: null,
          isComponent: null,
          isCompleted: null
        }),
        e(this, "componentDidMount", e => {
          t.currentStudentComponentInstance = this;
        }),
        e(this, "onSubmit", t => {
          var e;
          (e = this),
            $.post(e.props.switchURL, {
              pk: JSON.stringify(e.state.object.id),
              isCompleted: JSON.stringify(e.state.isCompleted)
            })
              .done(function(t) {
                "posted" == t.action
                  ? e.snack.MDComponent.show({
                      message: e.props.snackMessageOnSuccess
                    })
                  : e.snack.MDComponent.show({
                      message: e.props.snackMessageOnFailure
                    });
              })
              .fail(function(t) {
                e.snack.MDComponent.show({
                  message: e.props.snackMessageOnFailure
                });
              }),
            t.preventDefault(),
            this.setState({
              object: null,
              objectType: null,
              isComponent: null,
              isCompleted: null
            });
        }),
        e(this, "onClose", t => {
          t.preventDefault(),
            this.setState({
              object: null,
              objectType: null,
              isComponent: null,
              isCompleted: null
            });
        }),
        e(this, "updateIsCompleted", t => {
          this.setState({ isCompleted: !this.state.isCompleted });
        });
    }
    render() {
      return React.createElement(
        "div",
        null,
        React.createElement(
          pi,
          {
            style: "padding: 0; border: 0; width: 0;",
            ref: t => {
              this.dlg = t;
            }
          },
          React.createElement(
            "form",
            { class: "student-node-form" },
            React.createElement(
              pi.Header,
              null,
              this.state.isComponent &&
                this.state.object &&
                this.state.object.content_object.title,
              !this.state.isComponent &&
                this.state.object &&
                this.state.object.title
            ),
            React.createElement(
              pi.Body,
              { scrollable: !1 },
              React.createElement(
                "div",
                { id: "description" },
                this.state.isComponent &&
                  this.state.object &&
                  this.state.object.content_object.description,
                !this.state.isComponent &&
                  this.state.object &&
                  this.state.object.description
              ),
              React.createElement(
                Ji,
                null,
                React.createElement(
                  "label",
                  {
                    for: "completion-checkbox",
                    id: "completion-checkbox-label"
                  },
                  "Have you completed this task?"
                ),
                React.createElement(ka, {
                  id: "completion-checkbox",
                  checked: this.state.isCompleted,
                  onchange: this.updateIsCompleted
                })
              )
            ),
            React.createElement(
              pi.Footer,
              null,
              React.createElement(
                pi.FooterButton,
                { id: "cancel-button", cancel: !0, onClick: this.onClose },
                "Cancel"
              ),
              React.createElement(
                pi.FooterButton,
                {
                  id: "submit-button",
                  accept: !0,
                  disabled: !1,
                  raised: !0,
                  onClick: this.onSubmit
                },
                "Submit"
              )
            )
          )
        ),
        React.createElement(ya, {
          ref: t => {
            this.snack = t;
          }
        })
      );
    }
  }
  return (
    $.ajaxSetup({
      beforeSend: function(t, e) {
        var n;
        (n = e.type),
          /^(GET|HEAD|OPTIONS|TRACE)$/.test(n) ||
            this.crossDomain ||
            t.setRequestHeader(
              "X-CSRFToken",
              document
                .getElementsByName("csrfmiddlewaretoken")[0]
                .getAttribute("value")
            );
      }
    }),
    (t.currentComponentInstance = null),
    (t.currentStudentComponentInstance = null),
    (t.DialogForm = Ra),
    (t.StudentCompletionStatusDialog = xa),
    (t.injectDialogForm = function(t, e, n, i, a, s, r) {
      document.body.contains(document.getElementById("node-form-container")) &&
        vn(
          React.createElement(Ra, {
            createURL: t,
            updateURL: e,
            deleteURL: n,
            removeURL: i,
            homeURL: a,
            snackMessageOnSuccess: s,
            snackMessageOnFailure: r
          }),
          document.getElementById("node-form-container")
        );
    }),
    (t.injectStudentCompletionStatusDialog = function(t, e, n) {
      document.body.contains(
        document.getElementById("student-node-form-container")
      ) &&
        vn(
          React.createElement(xa, {
            switchURL: t,
            snackMessageOnSuccess: e,
            snackMessageOnFailure: n
          }),
          document.getElementById("student-node-form-container")
        );
    }),
    t
  );
})({});
