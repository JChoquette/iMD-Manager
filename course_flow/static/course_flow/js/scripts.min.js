var root = (function (exports) {
	'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var check = function (it) {
	  return it && it.Math == Math && it;
	};

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global_1 =
	  // eslint-disable-next-line no-undef
	  check(typeof globalThis == 'object' && globalThis) ||
	  check(typeof window == 'object' && window) ||
	  check(typeof self == 'object' && self) ||
	  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
	  // eslint-disable-next-line no-new-func
	  Function('return this')();

	var fails = function (exec) {
	  try {
	    return !!exec();
	  } catch (error) {
	    return true;
	  }
	};

	// Thank's IE8 for his funny defineProperty
	var descriptors = !fails(function () {
	  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
	});

	var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

	// Nashorn ~ JDK8 bug
	var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

	// `Object.prototype.propertyIsEnumerable` method implementation
	// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
	var f = NASHORN_BUG ? function propertyIsEnumerable(V) {
	  var descriptor = getOwnPropertyDescriptor(this, V);
	  return !!descriptor && descriptor.enumerable;
	} : nativePropertyIsEnumerable;

	var objectPropertyIsEnumerable = {
		f: f
	};

	var createPropertyDescriptor = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

	var toString = {}.toString;

	var classofRaw = function (it) {
	  return toString.call(it).slice(8, -1);
	};

	var split = ''.split;

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var indexedObject = fails(function () {
	  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
	  // eslint-disable-next-line no-prototype-builtins
	  return !Object('z').propertyIsEnumerable(0);
	}) ? function (it) {
	  return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);
	} : Object;

	// `RequireObjectCoercible` abstract operation
	// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
	var requireObjectCoercible = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on " + it);
	  return it;
	};

	// toObject with fallback for non-array-like ES3 strings



	var toIndexedObject = function (it) {
	  return indexedObject(requireObjectCoercible(it));
	};

	var isObject = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

	// `ToPrimitive` abstract operation
	// https://tc39.github.io/ecma262/#sec-toprimitive
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	var toPrimitive = function (input, PREFERRED_STRING) {
	  if (!isObject(input)) return input;
	  var fn, val;
	  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
	  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
	  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};

	var hasOwnProperty = {}.hasOwnProperty;

	var has = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};

	var document$1 = global_1.document;
	// typeof document.createElement is 'object' in old IE
	var EXISTS = isObject(document$1) && isObject(document$1.createElement);

	var documentCreateElement = function (it) {
	  return EXISTS ? document$1.createElement(it) : {};
	};

	// Thank's IE8 for his funny defineProperty
	var ie8DomDefine = !descriptors && !fails(function () {
	  return Object.defineProperty(documentCreateElement('div'), 'a', {
	    get: function () { return 7; }
	  }).a != 7;
	});

	var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

	// `Object.getOwnPropertyDescriptor` method
	// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
	var f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
	  O = toIndexedObject(O);
	  P = toPrimitive(P, true);
	  if (ie8DomDefine) try {
	    return nativeGetOwnPropertyDescriptor(O, P);
	  } catch (error) { /* empty */ }
	  if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);
	};

	var objectGetOwnPropertyDescriptor = {
		f: f$1
	};

	var anObject = function (it) {
	  if (!isObject(it)) {
	    throw TypeError(String(it) + ' is not an object');
	  } return it;
	};

	var nativeDefineProperty = Object.defineProperty;

	// `Object.defineProperty` method
	// https://tc39.github.io/ecma262/#sec-object.defineproperty
	var f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (ie8DomDefine) try {
	    return nativeDefineProperty(O, P, Attributes);
	  } catch (error) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

	var objectDefineProperty = {
		f: f$2
	};

	var createNonEnumerableProperty = descriptors ? function (object, key, value) {
	  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

	var setGlobal = function (key, value) {
	  try {
	    createNonEnumerableProperty(global_1, key, value);
	  } catch (error) {
	    global_1[key] = value;
	  } return value;
	};

	var SHARED = '__core-js_shared__';
	var store = global_1[SHARED] || setGlobal(SHARED, {});

	var sharedStore = store;

	var functionToString = Function.toString;

	// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
	if (typeof sharedStore.inspectSource != 'function') {
	  sharedStore.inspectSource = function (it) {
	    return functionToString.call(it);
	  };
	}

	var inspectSource = sharedStore.inspectSource;

	var WeakMap = global_1.WeakMap;

	var nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));

	var shared = createCommonjsModule(function (module) {
	(module.exports = function (key, value) {
	  return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: '3.6.4',
	  mode:  'global',
	  copyright: 'Â© 2020 Denis Pushkarev (zloirock.ru)'
	});
	});

	var id = 0;
	var postfix = Math.random();

	var uid = function (key) {
	  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
	};

	var keys = shared('keys');

	var sharedKey = function (key) {
	  return keys[key] || (keys[key] = uid(key));
	};

	var hiddenKeys = {};

	var WeakMap$1 = global_1.WeakMap;
	var set, get, has$1;

	var enforce = function (it) {
	  return has$1(it) ? get(it) : set(it, {});
	};

	var getterFor = function (TYPE) {
	  return function (it) {
	    var state;
	    if (!isObject(it) || (state = get(it)).type !== TYPE) {
	      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
	    } return state;
	  };
	};

	if (nativeWeakMap) {
	  var store$1 = new WeakMap$1();
	  var wmget = store$1.get;
	  var wmhas = store$1.has;
	  var wmset = store$1.set;
	  set = function (it, metadata) {
	    wmset.call(store$1, it, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return wmget.call(store$1, it) || {};
	  };
	  has$1 = function (it) {
	    return wmhas.call(store$1, it);
	  };
	} else {
	  var STATE = sharedKey('state');
	  hiddenKeys[STATE] = true;
	  set = function (it, metadata) {
	    createNonEnumerableProperty(it, STATE, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return has(it, STATE) ? it[STATE] : {};
	  };
	  has$1 = function (it) {
	    return has(it, STATE);
	  };
	}

	var internalState = {
	  set: set,
	  get: get,
	  has: has$1,
	  enforce: enforce,
	  getterFor: getterFor
	};

	var redefine = createCommonjsModule(function (module) {
	var getInternalState = internalState.get;
	var enforceInternalState = internalState.enforce;
	var TEMPLATE = String(String).split('String');

	(module.exports = function (O, key, value, options) {
	  var unsafe = options ? !!options.unsafe : false;
	  var simple = options ? !!options.enumerable : false;
	  var noTargetGet = options ? !!options.noTargetGet : false;
	  if (typeof value == 'function') {
	    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
	    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
	  }
	  if (O === global_1) {
	    if (simple) O[key] = value;
	    else setGlobal(key, value);
	    return;
	  } else if (!unsafe) {
	    delete O[key];
	  } else if (!noTargetGet && O[key]) {
	    simple = true;
	  }
	  if (simple) O[key] = value;
	  else createNonEnumerableProperty(O, key, value);
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, 'toString', function toString() {
	  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
	});
	});

	var path = global_1;

	var aFunction = function (variable) {
	  return typeof variable == 'function' ? variable : undefined;
	};

	var getBuiltIn = function (namespace, method) {
	  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace])
	    : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
	};

	var ceil = Math.ceil;
	var floor = Math.floor;

	// `ToInteger` abstract operation
	// https://tc39.github.io/ecma262/#sec-tointeger
	var toInteger = function (argument) {
	  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
	};

	var min = Math.min;

	// `ToLength` abstract operation
	// https://tc39.github.io/ecma262/#sec-tolength
	var toLength = function (argument) {
	  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
	};

	var max = Math.max;
	var min$1 = Math.min;

	// Helper for a popular repeating case of the spec:
	// Let integer be ? ToInteger(index).
	// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
	var toAbsoluteIndex = function (index, length) {
	  var integer = toInteger(index);
	  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
	};

	// `Array.prototype.{ indexOf, includes }` methods implementation
	var createMethod = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIndexedObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) {
	      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

	var arrayIncludes = {
	  // `Array.prototype.includes` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
	  includes: createMethod(true),
	  // `Array.prototype.indexOf` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
	  indexOf: createMethod(false)
	};

	var indexOf = arrayIncludes.indexOf;


	var objectKeysInternal = function (object, names) {
	  var O = toIndexedObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~indexOf(result, key) || result.push(key);
	  }
	  return result;
	};

	// IE8- don't enum bug keys
	var enumBugKeys = [
	  'constructor',
	  'hasOwnProperty',
	  'isPrototypeOf',
	  'propertyIsEnumerable',
	  'toLocaleString',
	  'toString',
	  'valueOf'
	];

	var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');

	// `Object.getOwnPropertyNames` method
	// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
	var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return objectKeysInternal(O, hiddenKeys$1);
	};

	var objectGetOwnPropertyNames = {
		f: f$3
	};

	var f$4 = Object.getOwnPropertySymbols;

	var objectGetOwnPropertySymbols = {
		f: f$4
	};

	// all object keys, includes non-enumerable and symbols
	var ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
	  var keys = objectGetOwnPropertyNames.f(anObject(it));
	  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
	  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
	};

	var copyConstructorProperties = function (target, source) {
	  var keys = ownKeys(source);
	  var defineProperty = objectDefineProperty.f;
	  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
	  }
	};

	var replacement = /#|\.prototype\./;

	var isForced = function (feature, detection) {
	  var value = data[normalize(feature)];
	  return value == POLYFILL ? true
	    : value == NATIVE ? false
	    : typeof detection == 'function' ? fails(detection)
	    : !!detection;
	};

	var normalize = isForced.normalize = function (string) {
	  return String(string).replace(replacement, '.').toLowerCase();
	};

	var data = isForced.data = {};
	var NATIVE = isForced.NATIVE = 'N';
	var POLYFILL = isForced.POLYFILL = 'P';

	var isForced_1 = isForced;

	var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;






	/*
	  options.target      - name of the target object
	  options.global      - target is the global object
	  options.stat        - export as static methods of target
	  options.proto       - export as prototype methods of target
	  options.real        - real prototype method for the `pure` version
	  options.forced      - export even if the native feature is available
	  options.bind        - bind methods to the target, required for the `pure` version
	  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
	  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
	  options.sham        - add a flag to not completely full polyfills
	  options.enumerable  - export as enumerable property
	  options.noTargetGet - prevent calling a getter on target
	*/
	var _export = function (options, source) {
	  var TARGET = options.target;
	  var GLOBAL = options.global;
	  var STATIC = options.stat;
	  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
	  if (GLOBAL) {
	    target = global_1;
	  } else if (STATIC) {
	    target = global_1[TARGET] || setGlobal(TARGET, {});
	  } else {
	    target = (global_1[TARGET] || {}).prototype;
	  }
	  if (target) for (key in source) {
	    sourceProperty = source[key];
	    if (options.noTargetGet) {
	      descriptor = getOwnPropertyDescriptor$1(target, key);
	      targetProperty = descriptor && descriptor.value;
	    } else targetProperty = target[key];
	    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
	    // contained in target
	    if (!FORCED && targetProperty !== undefined) {
	      if (typeof sourceProperty === typeof targetProperty) continue;
	      copyConstructorProperties(sourceProperty, targetProperty);
	    }
	    // add a flag to not completely full polyfills
	    if (options.sham || (targetProperty && targetProperty.sham)) {
	      createNonEnumerableProperty(sourceProperty, 'sham', true);
	    }
	    // extend global
	    redefine(target, key, sourceProperty, options);
	  }
	};

	var defineProperty = objectDefineProperty.f;


	var NativeSymbol = global_1.Symbol;

	if (descriptors && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
	  // Safari 12 bug
	  NativeSymbol().description !== undefined
	)) {
	  var EmptyStringDescriptionStore = {};
	  // wrap Symbol constructor for correct work with undefined description
	  var SymbolWrapper = function Symbol() {
	    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
	    var result = this instanceof SymbolWrapper
	      ? new NativeSymbol(description)
	      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
	      : description === undefined ? NativeSymbol() : NativeSymbol(description);
	    if (description === '') EmptyStringDescriptionStore[result] = true;
	    return result;
	  };
	  copyConstructorProperties(SymbolWrapper, NativeSymbol);
	  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
	  symbolPrototype.constructor = SymbolWrapper;

	  var symbolToString = symbolPrototype.toString;
	  var native = String(NativeSymbol('test')) == 'Symbol(test)';
	  var regexp = /^Symbol\((.*)\)[^)]+$/;
	  defineProperty(symbolPrototype, 'description', {
	    configurable: true,
	    get: function description() {
	      var symbol = isObject(this) ? this.valueOf() : this;
	      var string = symbolToString.call(symbol);
	      if (has(EmptyStringDescriptionStore, symbol)) return '';
	      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
	      return desc === '' ? undefined : desc;
	    }
	  });

	  _export({ global: true, forced: true }, {
	    Symbol: SymbolWrapper
	  });
	}

	// iterable DOM collections
	// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
	var domIterables = {
	  CSSRuleList: 0,
	  CSSStyleDeclaration: 0,
	  CSSValueList: 0,
	  ClientRectList: 0,
	  DOMRectList: 0,
	  DOMStringList: 0,
	  DOMTokenList: 1,
	  DataTransferItemList: 0,
	  FileList: 0,
	  HTMLAllCollection: 0,
	  HTMLCollection: 0,
	  HTMLFormElement: 0,
	  HTMLSelectElement: 0,
	  MediaList: 0,
	  MimeTypeArray: 0,
	  NamedNodeMap: 0,
	  NodeList: 1,
	  PaintRequestList: 0,
	  Plugin: 0,
	  PluginArray: 0,
	  SVGLengthList: 0,
	  SVGNumberList: 0,
	  SVGPathSegList: 0,
	  SVGPointList: 0,
	  SVGStringList: 0,
	  SVGTransformList: 0,
	  SourceBufferList: 0,
	  StyleSheetList: 0,
	  TextTrackCueList: 0,
	  TextTrackList: 0,
	  TouchList: 0
	};

	var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {
	  // Chrome 38 Symbol has incorrect toString conversion
	  // eslint-disable-next-line no-undef
	  return !String(Symbol());
	});

	var useSymbolAsUid = nativeSymbol
	  // eslint-disable-next-line no-undef
	  && !Symbol.sham
	  // eslint-disable-next-line no-undef
	  && typeof Symbol.iterator == 'symbol';

	var WellKnownSymbolsStore = shared('wks');
	var Symbol$1 = global_1.Symbol;
	var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;

	var wellKnownSymbol = function (name) {
	  if (!has(WellKnownSymbolsStore, name)) {
	    if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];
	    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
	  } return WellKnownSymbolsStore[name];
	};

	// `Object.keys` method
	// https://tc39.github.io/ecma262/#sec-object.keys
	var objectKeys = Object.keys || function keys(O) {
	  return objectKeysInternal(O, enumBugKeys);
	};

	// `Object.defineProperties` method
	// https://tc39.github.io/ecma262/#sec-object.defineproperties
	var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = objectKeys(Properties);
	  var length = keys.length;
	  var index = 0;
	  var key;
	  while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);
	  return O;
	};

	var html = getBuiltIn('document', 'documentElement');

	var GT = '>';
	var LT = '<';
	var PROTOTYPE = 'prototype';
	var SCRIPT = 'script';
	var IE_PROTO = sharedKey('IE_PROTO');

	var EmptyConstructor = function () { /* empty */ };

	var scriptTag = function (content) {
	  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
	};

	// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
	var NullProtoObjectViaActiveX = function (activeXDocument) {
	  activeXDocument.write(scriptTag(''));
	  activeXDocument.close();
	  var temp = activeXDocument.parentWindow.Object;
	  activeXDocument = null; // avoid memory leak
	  return temp;
	};

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var NullProtoObjectViaIFrame = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = documentCreateElement('iframe');
	  var JS = 'java' + SCRIPT + ':';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  html.appendChild(iframe);
	  // https://github.com/zloirock/core-js/issues/475
	  iframe.src = String(JS);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(scriptTag('document.F=Object'));
	  iframeDocument.close();
	  return iframeDocument.F;
	};

	// Check for document.domain and active x support
	// No need to use active x approach when document.domain is not set
	// see https://github.com/es-shims/es5-shim/issues/150
	// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
	// avoid IE GC bug
	var activeXDocument;
	var NullProtoObject = function () {
	  try {
	    /* global ActiveXObject */
	    activeXDocument = document.domain && new ActiveXObject('htmlfile');
	  } catch (error) { /* ignore */ }
	  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
	  var length = enumBugKeys.length;
	  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
	  return NullProtoObject();
	};

	hiddenKeys[IE_PROTO] = true;

	// `Object.create` method
	// https://tc39.github.io/ecma262/#sec-object.create
	var objectCreate = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    EmptyConstructor[PROTOTYPE] = anObject(O);
	    result = new EmptyConstructor();
	    EmptyConstructor[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = NullProtoObject();
	  return Properties === undefined ? result : objectDefineProperties(result, Properties);
	};

	var UNSCOPABLES = wellKnownSymbol('unscopables');
	var ArrayPrototype = Array.prototype;

	// Array.prototype[@@unscopables]
	// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
	if (ArrayPrototype[UNSCOPABLES] == undefined) {
	  objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {
	    configurable: true,
	    value: objectCreate(null)
	  });
	}

	// add a key to Array.prototype[@@unscopables]
	var addToUnscopables = function (key) {
	  ArrayPrototype[UNSCOPABLES][key] = true;
	};

	// `ToObject` abstract operation
	// https://tc39.github.io/ecma262/#sec-toobject
	var toObject = function (argument) {
	  return Object(requireObjectCoercible(argument));
	};

	var correctPrototypeGetter = !fails(function () {
	  function F() { /* empty */ }
	  F.prototype.constructor = null;
	  return Object.getPrototypeOf(new F()) !== F.prototype;
	});

	var IE_PROTO$1 = sharedKey('IE_PROTO');
	var ObjectPrototype = Object.prototype;

	// `Object.getPrototypeOf` method
	// https://tc39.github.io/ecma262/#sec-object.getprototypeof
	var objectGetPrototypeOf = correctPrototypeGetter ? Object.getPrototypeOf : function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO$1)) return O[IE_PROTO$1];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectPrototype : null;
	};

	var ITERATOR = wellKnownSymbol('iterator');
	var BUGGY_SAFARI_ITERATORS = false;

	var returnThis = function () { return this; };

	// `%IteratorPrototype%` object
	// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
	var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

	if ([].keys) {
	  arrayIterator = [].keys();
	  // Safari 8 has buggy iterators w/o `next`
	  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
	  else {
	    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));
	    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
	  }
	}

	if (IteratorPrototype == undefined) IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	if ( !has(IteratorPrototype, ITERATOR)) {
	  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
	}

	var iteratorsCore = {
	  IteratorPrototype: IteratorPrototype,
	  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
	};

	var defineProperty$1 = objectDefineProperty.f;



	var TO_STRING_TAG = wellKnownSymbol('toStringTag');

	var setToStringTag = function (it, TAG, STATIC) {
	  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
	    defineProperty$1(it, TO_STRING_TAG, { configurable: true, value: TAG });
	  }
	};

	var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;

	var createIteratorConstructor = function (IteratorConstructor, NAME, next) {
	  var TO_STRING_TAG = NAME + ' Iterator';
	  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(1, next) });
	  setToStringTag(IteratorConstructor, TO_STRING_TAG, false);
	  return IteratorConstructor;
	};

	var aPossiblePrototype = function (it) {
	  if (!isObject(it) && it !== null) {
	    throw TypeError("Can't set " + String(it) + ' as a prototype');
	  } return it;
	};

	// `Object.setPrototypeOf` method
	// https://tc39.github.io/ecma262/#sec-object.setprototypeof
	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
	  var CORRECT_SETTER = false;
	  var test = {};
	  var setter;
	  try {
	    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
	    setter.call(test, []);
	    CORRECT_SETTER = test instanceof Array;
	  } catch (error) { /* empty */ }
	  return function setPrototypeOf(O, proto) {
	    anObject(O);
	    aPossiblePrototype(proto);
	    if (CORRECT_SETTER) setter.call(O, proto);
	    else O.__proto__ = proto;
	    return O;
	  };
	}() : undefined);

	var IteratorPrototype$2 = iteratorsCore.IteratorPrototype;
	var BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;
	var ITERATOR$1 = wellKnownSymbol('iterator');
	var KEYS = 'keys';
	var VALUES = 'values';
	var ENTRIES = 'entries';

	var returnThis$1 = function () { return this; };

	var defineIterator = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
	  createIteratorConstructor(IteratorConstructor, NAME, next);

	  var getIterationMethod = function (KIND) {
	    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
	    if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];
	    switch (KIND) {
	      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
	      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
	      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
	    } return function () { return new IteratorConstructor(this); };
	  };

	  var TO_STRING_TAG = NAME + ' Iterator';
	  var INCORRECT_VALUES_NAME = false;
	  var IterablePrototype = Iterable.prototype;
	  var nativeIterator = IterablePrototype[ITERATOR$1]
	    || IterablePrototype['@@iterator']
	    || DEFAULT && IterablePrototype[DEFAULT];
	  var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);
	  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
	  var CurrentIteratorPrototype, methods, KEY;

	  // fix native
	  if (anyNativeIterator) {
	    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));
	    if (IteratorPrototype$2 !== Object.prototype && CurrentIteratorPrototype.next) {
	      if ( objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {
	        if (objectSetPrototypeOf) {
	          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);
	        } else if (typeof CurrentIteratorPrototype[ITERATOR$1] != 'function') {
	          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR$1, returnThis$1);
	        }
	      }
	      // Set @@toStringTag to native iterators
	      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
	    }
	  }

	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
	    INCORRECT_VALUES_NAME = true;
	    defaultIterator = function values() { return nativeIterator.call(this); };
	  }

	  // define iterator
	  if ( IterablePrototype[ITERATOR$1] !== defaultIterator) {
	    createNonEnumerableProperty(IterablePrototype, ITERATOR$1, defaultIterator);
	  }

	  // export additional methods
	  if (DEFAULT) {
	    methods = {
	      values: getIterationMethod(VALUES),
	      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
	      entries: getIterationMethod(ENTRIES)
	    };
	    if (FORCED) for (KEY in methods) {
	      if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
	        redefine(IterablePrototype, KEY, methods[KEY]);
	      }
	    } else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME }, methods);
	  }

	  return methods;
	};

	var ARRAY_ITERATOR = 'Array Iterator';
	var setInternalState = internalState.set;
	var getInternalState = internalState.getterFor(ARRAY_ITERATOR);

	// `Array.prototype.entries` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.entries
	// `Array.prototype.keys` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.keys
	// `Array.prototype.values` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.values
	// `Array.prototype[@@iterator]` method
	// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
	// `CreateArrayIterator` internal method
	// https://tc39.github.io/ecma262/#sec-createarrayiterator
	var es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {
	  setInternalState(this, {
	    type: ARRAY_ITERATOR,
	    target: toIndexedObject(iterated), // target
	    index: 0,                          // next index
	    kind: kind                         // kind
	  });
	// `%ArrayIteratorPrototype%.next` method
	// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
	}, function () {
	  var state = getInternalState(this);
	  var target = state.target;
	  var kind = state.kind;
	  var index = state.index++;
	  if (!target || index >= target.length) {
	    state.target = undefined;
	    return { value: undefined, done: true };
	  }
	  if (kind == 'keys') return { value: index, done: false };
	  if (kind == 'values') return { value: target[index], done: false };
	  return { value: [index, target[index]], done: false };
	}, 'values');

	// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

	var ITERATOR$2 = wellKnownSymbol('iterator');
	var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');
	var ArrayValues = es_array_iterator.values;

	for (var COLLECTION_NAME in domIterables) {
	  var Collection = global_1[COLLECTION_NAME];
	  var CollectionPrototype = Collection && Collection.prototype;
	  if (CollectionPrototype) {
	    // some Chrome versions have non-configurable methods on DOMTokenList
	    if (CollectionPrototype[ITERATOR$2] !== ArrayValues) try {
	      createNonEnumerableProperty(CollectionPrototype, ITERATOR$2, ArrayValues);
	    } catch (error) {
	      CollectionPrototype[ITERATOR$2] = ArrayValues;
	    }
	    if (!CollectionPrototype[TO_STRING_TAG$1]) {
	      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);
	    }
	    if (domIterables[COLLECTION_NAME]) for (var METHOD_NAME in es_array_iterator) {
	      // some Chrome versions have non-configurable methods on DOMTokenList
	      if (CollectionPrototype[METHOD_NAME] !== es_array_iterator[METHOD_NAME]) try {
	        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, es_array_iterator[METHOD_NAME]);
	      } catch (error) {
	        CollectionPrototype[METHOD_NAME] = es_array_iterator[METHOD_NAME];
	      }
	    }
	  }
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	}

	function ownKeys$1(object, enumerableOnly) {
	  var keys = Object.keys(object);

	  if (Object.getOwnPropertySymbols) {
	    var symbols = Object.getOwnPropertySymbols(object);
	    if (enumerableOnly) symbols = symbols.filter(function (sym) {
	      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
	    });
	    keys.push.apply(keys, symbols);
	  }

	  return keys;
	}

	function _objectSpread2(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};

	    if (i % 2) {
	      ownKeys$1(Object(source), true).forEach(function (key) {
	        _defineProperty(target, key, source[key]);
	      });
	    } else if (Object.getOwnPropertyDescriptors) {
	      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
	    } else {
	      ownKeys$1(Object(source)).forEach(function (key) {
	        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
	      });
	    }
	  }

	  return target;
	}

	var n,l,u,t,i,o,r,f$5={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var t,i=arguments,o={};for(t in l)"key"!==t&&"ref"!==t&&(o[t]=l[t]);if(arguments.length>3)for(u=[u],t=3;t<arguments.length;t++)u.push(i[t]);if(null!=u&&(o.children=u),"function"==typeof n&&null!=n.defaultProps)for(t in n.defaultProps)void 0===o[t]&&(o[t]=n.defaultProps[t]);return v(n,o,l&&l.key,l&&l.ref)}function v(l,u,t,i){var o={type:l,props:u,key:t,ref:i,__k:null,__:null,__b:0,__e:null,__d:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(o),o}function p(){return {}}function y(n){return n.children}function d(n,l){this.props=n,this.context=l;}function m(n,l){if(null==l)return n.__?m(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return "function"==typeof n.type?m(n):null}function w(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return w(n)}}function g(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&((i=n.debounceRendering)||t)(k);}function k(){var n,l,t,i,o,r,f;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();)n.__d&&(t=void 0,i=void 0,r=(o=(l=n).__v).__e,(f=l.__P)&&(t=[],i=T(f,o,s({},o),l.__n,void 0!==f.ownerSVGElement,null,t,null==r?m(o):r),$$1(t,o),i!=r&&w(o)));}function _(n,l,u,t,i,o,r,c,s){var h,v,p,y,d,w,g,k=u&&u.__k||e,_=k.length;if(c==f$5&&(c=null!=o?o[0]:_?m(u,0):null),h=0,l.__k=b(l.__k,function(u){if(null!=u){if(u.__=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type)k[h]=void 0;else for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null;}if(y=T(n,u,p=p||f$5,t,i,o,r,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[]),p.ref&&g.push(p.ref,null,u),g.push(v,u.__c||y,u)),null!=y){if(null==w&&(w=y),null!=u.__d)y=u.__d,u.__d=null;else if(o==p||y!=c||null==y.parentNode){n:if(null==c||c.parentNode!==n)n.appendChild(y);else{for(d=c,v=0;(d=d.nextSibling)&&v<_;v+=2)if(d==y)break n;n.insertBefore(y,c);}"option"==l.type&&(n.value="");}c=y.nextSibling,"function"==typeof l.type&&(l.__d=y);}}return h++,u}),l.__e=w,null!=o&&"function"!=typeof l.type)for(h=o.length;h--;)null!=o[h]&&a(o[h]);for(h=_;h--;)null!=k[h]&&A(k[h],k[h]);if(g)for(h=0;h<g.length;h++)z(g[h],g[++h],g[++h]);}function b(n,l,u){if(null==u&&(u=[]),null==n||"boolean"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var t=0;t<n.length;t++)b(n[t],l,u);else u.push(l?l("string"==typeof n||"number"==typeof n?v(null,n,null,null):null!=n.__e||null!=n.__c?v(n.type,n.props,n.key,null):n):n);return u}function x(n,l,u,t,i){var o;for(o in u)o in l||P(n,o,null,u[o],t);for(o in l)i&&"function"!=typeof l[o]||"value"===o||"checked"===o||u[o]===l[o]||P(n,o,l[o],u[o],t);}function C(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]="number"==typeof u&&!1===c.test(l)?u+"px":null==u?"":u;}function P(n,l,u,t,i){var o,r,f,e,c;if(i?"className"===l&&(l="class"):"class"===l&&(l="className"),"key"===l||"children"===l);else if("style"===l)if(o=n.style,"string"==typeof u)o.cssText=u;else{if("string"==typeof t&&(o.cssText="",t=null),t)for(r in t)u&&r in u||C(o,r,"");if(u)for(f in u)t&&u[f]===t[f]||C(o,f,u[f]);}else"o"===l[0]&&"n"===l[1]?(e=l!==(l=l.replace(/Capture$/,"")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,N,e),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,N,e)):"list"!==l&&"tagName"!==l&&"form"!==l&&"type"!==l&&!i&&l in n?n[l]=null==u?"":u:"function"!=typeof u&&"dangerouslySetInnerHTML"!==l&&(l!==(l=l.replace(/^xlink:?/,""))?null==u||!1===u?n.removeAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase()):n.setAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u));}function N(l){this.l[l.type](n.event?n.event(l):l);}function T(l,u,t,i,o,r,f,e,c){var a,h,v,p,m,w,g,k,x,C,P=u.type;if(void 0!==u.constructor)return null;(a=n.__b)&&a(u);try{n:if("function"==typeof P){if(k=u.props,x=(a=P.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:("prototype"in P&&P.prototype.render?u.__c=h=new P(k,C):(u.__c=h=new d(k,C),h.constructor=P,h.render=D),x&&x.sub(h),h.props=k,h.state||(h.state={}),h.context=C,h.__n=i,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=P.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,P.getDerivedStateFromProps(k,h.__s))),p=h.props,m=h.state,v)null==P.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==P.getDerivedStateFromProps&&k!==p&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(k,C),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(k,h.__s,C)){for(h.props=k,h.state=h.__s,h.__d=!1,h.__v=u,u.__e=t.__e,u.__k=t.__k,h.__h.length&&f.push(h),a=0;a<u.__k.length;a++)u.__k[a]&&(u.__k[a].__=u);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(k,h.__s,C),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(p,m,w);});}h.context=C,h.props=k,h.state=h.__s,(a=n.__r)&&a(u),h.__d=!1,h.__v=u,h.__P=l,a=h.render(h.props,h.state,h.context),u.__k=b(null!=a&&a.type==y&&null==a.key?a.props.children:a),null!=h.getChildContext&&(i=s(s({},i),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(w=h.getSnapshotBeforeUpdate(p,m)),_(l,u,t,i,o,r,f,e,c),h.base=u.__e,h.__h.length&&f.push(h),g&&(h.__E=h.__=null),h.__e=null;}else u.__e=j(t.__e,u,t,i,o,r,f,c);(a=n.diffed)&&a(u);}catch(l){n.__e(l,u,t);}return u.__e}function $$1(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u);});}catch(l){n.__e(l,u.__v);}});}function j(n,l,u,t,i,o,r,c){var s,a,h,v,p,y=u.props,d=l.props;if(i="svg"===l.type||i,null==n&&null!=o)for(s=0;s<o.length;s++)if(null!=(a=o[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,o[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=i?document.createElementNS("http://www.w3.org/2000/svg",l.type):document.createElement(l.type),o=null;}if(null===l.type)null!=o&&(o[o.indexOf(n)]=null),y!==d&&n.data!=d&&(n.data=d);else if(l!==u){if(null!=o&&(o=e.slice.call(n.childNodes)),h=(y=u.props||f$5).dangerouslySetInnerHTML,v=d.dangerouslySetInnerHTML,!c){if(y===f$5)for(y={},p=0;p<n.attributes.length;p++)y[n.attributes[p].name]=n.attributes[p].value;(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||""));}x(n,d,y,i,c),l.__k=l.props.children,v||_(n,l,u,t,"foreignObject"!==l.type&&i,o,r,f$5,c),c||("value"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?"":d.value),"checked"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked));}return n}function z(l,u,t){try{"function"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,t);}}function A(l,u,t){var i,o,r;if(n.unmount&&n.unmount(l),(i=l.ref)&&(i.current&&i.current!==l.__e||z(i,null,u)),t||"function"==typeof l.type||(t=null!=(o=l.__e)),l.__e=l.__d=null,null!=(i=l.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount();}catch(l){n.__e(l,u);}i.base=i.__P=null;}if(i=l.__k)for(r=0;r<i.length;r++)i[r]&&A(i[r],u,t);null!=o&&a(o);}function D(n,l,u){return this.constructor(n,u)}function E(l,u,t){var i,r,c;n.__&&n.__(l,u),r=(i=t===o)?null:t&&t.__k||u.__k,l=h(y,null,[l]),c=[],T(u,(i?u:t||u).__k=l,r||f$5,f$5,void 0!==u.ownerSVGElement,t&&!i?[t]:r?null:e.slice.call(u.childNodes),c,t||f$5,i),$$1(c,l);}function H(n,l){E(n,l,o);}function I(n,l){return l=s(s({},n.props),l),arguments.length>2&&(l.children=e.slice.call(arguments,2)),v(n.type,l,l.key||n.key,l.ref||n.ref)}function L(n){var l={},u={__c:"__cC"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var t,i=this;return this.getChildContext||(t=[],this.getChildContext=function(){return l[u.__c]=i,l},this.shouldComponentUpdate=function(l){n.value!==l.value&&t.some(function(n){n.context=l.value,g(n);});},this.sub=function(n){t.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){t.splice(t.indexOf(n),1),l&&l.call(n);};}),n.children}};return u.Consumer.contextType=u,u}n={__e:function(n,l){for(var u,t;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(t=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(t=!0,u.componentDidCatch(n)),t)return g(u.__E=u)}catch(l){n=l;}throw n}},l=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=s({},this.state),"function"==typeof n&&(n=n(u,this.props)),n&&s(u,n),null!=n&&this.__v&&(this.__e=!1,l&&this.__h.push(l),g(this));},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),g(this));},d.prototype.render=y,u=[],t="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,o=f$5,r=0;

	var preact_module = /*#__PURE__*/Object.freeze({
		__proto__: null,
		render: E,
		hydrate: H,
		createElement: h,
		h: h,
		Fragment: y,
		createRef: p,
		get isValidElement () { return l; },
		Component: d,
		cloneElement: I,
		createContext: L,
		toChildArray: b,
		_unmount: A,
		get options () { return n; }
	});

	var interopRequireDefault = createCommonjsModule(function (module) {
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	}

	module.exports = _interopRequireDefault;
	});

	unwrapExports(interopRequireDefault);

	var getPrototypeOf = createCommonjsModule(function (module) {
	function _getPrototypeOf(o) {
	  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}

	module.exports = _getPrototypeOf;
	});

	function _superPropBase(object, property) {
	  while (!Object.prototype.hasOwnProperty.call(object, property)) {
	    object = getPrototypeOf(object);
	    if (object === null) break;
	  }

	  return object;
	}

	var superPropBase = _superPropBase;

	var get$1 = createCommonjsModule(function (module) {
	function _get(target, property, receiver) {
	  if (typeof Reflect !== "undefined" && Reflect.get) {
	    module.exports = _get = Reflect.get;
	  } else {
	    module.exports = _get = function _get(target, property, receiver) {
	      var base = superPropBase(target, property);
	      if (!base) return;
	      var desc = Object.getOwnPropertyDescriptor(base, property);

	      if (desc.get) {
	        return desc.get.call(receiver);
	      }

	      return desc.value;
	    };
	  }

	  return _get(target, property, receiver || target);
	}

	module.exports = _get;
	});

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var classCallCheck = _classCallCheck;

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}

	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}

	var createClass = _createClass;

	var _typeof_1 = createCommonjsModule(function (module) {
	function _typeof(obj) {
	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return typeof obj;
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	  }

	  return _typeof(obj);
	}

	module.exports = _typeof;
	});

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return self;
	}

	var assertThisInitialized = _assertThisInitialized;

	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof_1(call) === "object" || typeof call === "function")) {
	    return call;
	  }

	  return assertThisInitialized(self);
	}

	var possibleConstructorReturn = _possibleConstructorReturn;

	var setPrototypeOf = createCommonjsModule(function (module) {
	function _setPrototypeOf(o, p) {
	  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };

	  return _setPrototypeOf(o, p);
	}

	module.exports = _setPrototypeOf;
	});

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) setPrototypeOf(subClass, superClass);
	}

	var inherits = _inherits;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @template A
	 */
	class MDCFoundation {
	  /** @return enum{cssClasses} */
	  static get cssClasses() {
	    // Classes extending MDCFoundation should implement this method to return an object which exports every
	    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
	    return {};
	  }

	  /** @return enum{strings} */
	  static get strings() {
	    // Classes extending MDCFoundation should implement this method to return an object which exports all
	    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
	    return {};
	  }

	  /** @return enum{numbers} */
	  static get numbers() {
	    // Classes extending MDCFoundation should implement this method to return an object which exports all
	    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
	    return {};
	  }

	  /** @return {!Object} */
	  static get defaultAdapter() {
	    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
	    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
	    // validation.
	    return {};
	  }

	  /**
	   * @param {A=} adapter
	   */
	  constructor(adapter = {}) {
	    /** @protected {!A} */
	    this.adapter_ = adapter;
	  }

	  init() {
	    // Subclasses should override this method to perform initialization routines (registering events, etc.)
	  }

	  destroy() {
	    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @template F
	 */
	class MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCComponent}
	   */
	  static attachTo(root) {
	    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
	    // returns an instantiated component with its root set to that element. Also note that in the cases of
	    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
	    // from getDefaultFoundation().
	    return new MDCComponent(root, new MDCFoundation());
	  }

	  /**
	   * @param {!Element} root
	   * @param {F=} foundation
	   * @param {...?} args
	   */
	  constructor(root, foundation = undefined, ...args) {
	    /** @protected {!Element} */
	    this.root_ = root;
	    this.initialize(...args);
	    // Note that we initialize foundation here and not within the constructor's default param so that
	    // this.root_ is defined and can be used within the foundation class.
	    /** @protected {!F} */
	    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
	    this.foundation_.init();
	    this.initialSyncWithDOM();
	  }

	  initialize(/* ...args */) {
	    // Subclasses can override this to do any additional setup work that would be considered part of a
	    // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
	    // initialized. Any additional arguments besides root and foundation will be passed in here.
	  }

	  /**
	   * @return {!F} foundation
	   */
	  getDefaultFoundation() {
	    // Subclasses must override this method to return a properly configured foundation class for the
	    // component.
	    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +
	      'foundation class');
	  }

	  initialSyncWithDOM() {
	    // Subclasses should override this method if they need to perform work to synchronize with a host DOM
	    // object. An example of this would be a form control wrapper that needs to synchronize its internal state
	    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
	    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
	  }

	  destroy() {
	    // Subclasses may implement this method to release any resources / deregister any listeners they have
	    // attached. An example of this might be deregistering a resize event from the window object.
	    this.foundation_.destroy();
	  }

	  /**
	   * Wrapper method to add an event listener to the component's root element. This is most useful when
	   * listening for custom events.
	   * @param {string} evtType
	   * @param {!Function} handler
	   */
	  listen(evtType, handler) {
	    this.root_.addEventListener(evtType, handler);
	  }

	  /**
	   * Wrapper method to remove an event listener to the component's root element. This is most useful when
	   * unlistening for custom events.
	   * @param {string} evtType
	   * @param {!Function} handler
	   */
	  unlisten(evtType, handler) {
	    this.root_.removeEventListener(evtType, handler);
	  }

	  /**
	   * Fires a cross-browser-compatible custom event from the component root of the given type,
	   * with the given data.
	   * @param {string} evtType
	   * @param {!Object} evtData
	   * @param {boolean=} shouldBubble
	   */
	  emit(evtType, evtData, shouldBubble = false) {
	    let evt;
	    if (typeof CustomEvent === 'function') {
	      evt = new CustomEvent(evtType, {
	        detail: evtData,
	        bubbles: shouldBubble,
	      });
	    } else {
	      evt = document.createEvent('CustomEvent');
	      evt.initCustomEvent(evtType, shouldBubble, false, evtData);
	    }

	    this.root_.dispatchEvent(evt);
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	const cssClasses = {
	  // Ripple is a special case where the "root" component is really a "mixin" of sorts,
	  // given that it's an 'upgrade' to an existing component. That being said it is the root
	  // CSS class that all other CSS classes derive from.
	  ROOT: 'mdc-ripple-upgraded',
	  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
	  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
	  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
	  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',
	};

	const strings = {
	  VAR_LEFT: '--mdc-ripple-left',
	  VAR_TOP: '--mdc-ripple-top',
	  VAR_FG_SIZE: '--mdc-ripple-fg-size',
	  VAR_FG_SCALE: '--mdc-ripple-fg-scale',
	  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
	  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',
	};

	const numbers = {
	  PADDING: 10,
	  INITIAL_ORIGIN_SCALE: 0.6,
	  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
	  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
	  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices
	};

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
	 * @private {boolean|undefined}
	 */
	let supportsCssVariables_;

	/**
	 * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
	 * @private {boolean|undefined}
	 */
	let supportsPassive_;

	/**
	 * @param {!Window} windowObj
	 * @return {boolean}
	 */
	function detectEdgePseudoVarBug(windowObj) {
	  // Detect versions of Edge with buggy var() support
	  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
	  const document = windowObj.document;
	  const node = document.createElement('div');
	  node.className = 'mdc-ripple-surface--test-edge-var-bug';
	  document.body.appendChild(node);

	  // The bug exists if ::before style ends up propagating to the parent element.
	  // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
	  // but Firefox is known to support CSS custom properties correctly.
	  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397
	  const computedStyle = windowObj.getComputedStyle(node);
	  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
	  node.remove();
	  return hasPseudoVarBug;
	}

	/**
	 * @param {!Window} windowObj
	 * @param {boolean=} forceRefresh
	 * @return {boolean|undefined}
	 */

	function supportsCssVariables(windowObj, forceRefresh = false) {
	  let supportsCssVariables = supportsCssVariables_;
	  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
	    return supportsCssVariables;
	  }

	  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';
	  if (!supportsFunctionPresent) {
	    return;
	  }

	  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');
	  // See: https://bugs.webkit.org/show_bug.cgi?id=154669
	  // See: README section on Safari
	  const weAreFeatureDetectingSafari10plus = (
	    windowObj.CSS.supports('(--css-vars: yes)') &&
	    windowObj.CSS.supports('color', '#00000000')
	  );

	  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
	    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
	  } else {
	    supportsCssVariables = false;
	  }

	  if (!forceRefresh) {
	    supportsCssVariables_ = supportsCssVariables;
	  }
	  return supportsCssVariables;
	}

	//
	/**
	 * Determine whether the current browser supports passive event listeners, and if so, use them.
	 * @param {!Window=} globalObj
	 * @param {boolean=} forceRefresh
	 * @return {boolean|{passive: boolean}}
	 */
	function applyPassive(globalObj = window, forceRefresh = false) {
	  if (supportsPassive_ === undefined || forceRefresh) {
	    let isSupported = false;
	    try {
	      globalObj.document.addEventListener('test', null, {get passive() {
	        isSupported = true;
	      }});
	    } catch (e) { }

	    supportsPassive_ = isSupported;
	  }

	  return supportsPassive_ ? {passive: true} : false;
	}

	/**
	 * @param {!Object} HTMLElementPrototype
	 * @return {!Array<string>}
	 */
	function getMatchesProperty(HTMLElementPrototype) {
	  return [
	    'webkitMatchesSelector', 'msMatchesSelector', 'matches',
	  ].filter((p) => p in HTMLElementPrototype).pop();
	}

	/**
	 * @param {!Event} ev
	 * @param {{x: number, y: number}} pageOffset
	 * @param {!ClientRect} clientRect
	 * @return {{x: number, y: number}}
	 */
	function getNormalizedEventCoords(ev, pageOffset, clientRect) {
	  const {x, y} = pageOffset;
	  const documentX = x + clientRect.left;
	  const documentY = y + clientRect.top;

	  let normalizedX;
	  let normalizedY;
	  // Determine touch point relative to the ripple container.
	  if (ev.type === 'touchstart') {
	    normalizedX = ev.changedTouches[0].pageX - documentX;
	    normalizedY = ev.changedTouches[0].pageY - documentY;
	  } else {
	    normalizedX = ev.pageX - documentX;
	    normalizedY = ev.pageY - documentY;
	  }

	  return {x: normalizedX, y: normalizedY};
	}

	var util = /*#__PURE__*/Object.freeze({
		__proto__: null,
		supportsCssVariables: supportsCssVariables,
		applyPassive: applyPassive,
		getMatchesProperty: getMatchesProperty,
		getNormalizedEventCoords: getNormalizedEventCoords
	});

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	// Activation events registered on the root element of each instance for activation
	const ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];

	// Deactivation events registered on documentElement when a pointer-related down event occurs
	const POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];

	// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations
	/** @type {!Array<!EventTarget>} */
	let activatedTargets = [];

	/**
	 * @extends {MDCFoundation<!MDCRippleAdapter>}
	 */
	class MDCRippleFoundation extends MDCFoundation {
	  static get cssClasses() {
	    return cssClasses;
	  }

	  static get strings() {
	    return strings;
	  }

	  static get numbers() {
	    return numbers;
	  }

	  static get defaultAdapter() {
	    return {
	      browserSupportsCssVars: () => /* boolean - cached */ {},
	      isUnbounded: () => /* boolean */ {},
	      isSurfaceActive: () => /* boolean */ {},
	      isSurfaceDisabled: () => /* boolean */ {},
	      addClass: (/* className: string */) => {},
	      removeClass: (/* className: string */) => {},
	      containsEventTarget: (/* target: !EventTarget */) => {},
	      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      registerResizeHandler: (/* handler: EventListener */) => {},
	      deregisterResizeHandler: (/* handler: EventListener */) => {},
	      updateCssVariable: (/* varName: string, value: string */) => {},
	      computeBoundingRect: () => /* ClientRect */ {},
	      getWindowPageOffset: () => /* {x: number, y: number} */ {},
	    };
	  }

	  constructor(adapter) {
	    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));

	    /** @private {number} */
	    this.layoutFrame_ = 0;

	    /** @private {!ClientRect} */
	    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});

	    /** @private {!ActivationStateType} */
	    this.activationState_ = this.defaultActivationState_();

	    /** @private {number} */
	    this.initialSize_ = 0;

	    /** @private {number} */
	    this.maxRadius_ = 0;

	    /** @private {function(!Event)} */
	    this.activateHandler_ = (e) => this.activate_(e);

	    /** @private {function(!Event)} */
	    this.deactivateHandler_ = (e) => this.deactivate_(e);

	    /** @private {function(?Event=)} */
	    this.focusHandler_ = () => this.handleFocus();

	    /** @private {function(?Event=)} */
	    this.blurHandler_ = () => this.handleBlur();

	    /** @private {!Function} */
	    this.resizeHandler_ = () => this.layout();

	    /** @private {{left: number, top:number}} */
	    this.unboundedCoords_ = {
	      left: 0,
	      top: 0,
	    };

	    /** @private {number} */
	    this.fgScale_ = 0;

	    /** @private {number} */
	    this.activationTimer_ = 0;

	    /** @private {number} */
	    this.fgDeactivationRemovalTimer_ = 0;

	    /** @private {boolean} */
	    this.activationAnimationHasEnded_ = false;

	    /** @private {!Function} */
	    this.activationTimerCallback_ = () => {
	      this.activationAnimationHasEnded_ = true;
	      this.runDeactivationUXLogicIfReady_();
	    };

	    /** @private {?Event} */
	    this.previousActivationEvent_ = null;
	  }

	  /**
	   * We compute this property so that we are not querying information about the client
	   * until the point in time where the foundation requests it. This prevents scenarios where
	   * client-side feature-detection may happen too early, such as when components are rendered on the server
	   * and then initialized at mount time on the client.
	   * @return {boolean}
	   * @private
	   */
	  supportsPressRipple_() {
	    return this.adapter_.browserSupportsCssVars();
	  }

	  /**
	   * @return {!ActivationStateType}
	   */
	  defaultActivationState_() {
	    return {
	      isActivated: false,
	      hasDeactivationUXRun: false,
	      wasActivatedByPointer: false,
	      wasElementMadeActive: false,
	      activationEvent: null,
	      isProgrammatic: false,
	    };
	  }

	  /** @override */
	  init() {
	    const supportsPressRipple = this.supportsPressRipple_();

	    this.registerRootHandlers_(supportsPressRipple);

	    if (supportsPressRipple) {
	      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;
	      requestAnimationFrame(() => {
	        this.adapter_.addClass(ROOT);
	        if (this.adapter_.isUnbounded()) {
	          this.adapter_.addClass(UNBOUNDED);
	          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple
	          this.layoutInternal_();
	        }
	      });
	    }
	  }

	  /** @override */
	  destroy() {
	    if (this.supportsPressRipple_()) {
	      if (this.activationTimer_) {
	        clearTimeout(this.activationTimer_);
	        this.activationTimer_ = 0;
	        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
	      }

	      if (this.fgDeactivationRemovalTimer_) {
	        clearTimeout(this.fgDeactivationRemovalTimer_);
	        this.fgDeactivationRemovalTimer_ = 0;
	        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
	      }

	      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;
	      requestAnimationFrame(() => {
	        this.adapter_.removeClass(ROOT);
	        this.adapter_.removeClass(UNBOUNDED);
	        this.removeCssVars_();
	      });
	    }

	    this.deregisterRootHandlers_();
	    this.deregisterDeactivationHandlers_();
	  }

	  /**
	   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
	   * @private
	   */
	  registerRootHandlers_(supportsPressRipple) {
	    if (supportsPressRipple) {
	      ACTIVATION_EVENT_TYPES.forEach((type) => {
	        this.adapter_.registerInteractionHandler(type, this.activateHandler_);
	      });
	      if (this.adapter_.isUnbounded()) {
	        this.adapter_.registerResizeHandler(this.resizeHandler_);
	      }
	    }

	    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
	    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
	  }

	  /**
	   * @param {!Event} e
	   * @private
	   */
	  registerDeactivationHandlers_(e) {
	    if (e.type === 'keydown') {
	      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
	    } else {
	      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {
	        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);
	      });
	    }
	  }

	  /** @private */
	  deregisterRootHandlers_() {
	    ACTIVATION_EVENT_TYPES.forEach((type) => {
	      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);
	    });
	    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
	    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

	    if (this.adapter_.isUnbounded()) {
	      this.adapter_.deregisterResizeHandler(this.resizeHandler_);
	    }
	  }

	  /** @private */
	  deregisterDeactivationHandlers_() {
	    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
	    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {
	      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);
	    });
	  }

	  /** @private */
	  removeCssVars_() {
	    const {strings} = MDCRippleFoundation;
	    Object.keys(strings).forEach((k) => {
	      if (k.indexOf('VAR_') === 0) {
	        this.adapter_.updateCssVariable(strings[k], null);
	      }
	    });
	  }

	  /**
	   * @param {?Event} e
	   * @private
	   */
	  activate_(e) {
	    if (this.adapter_.isSurfaceDisabled()) {
	      return;
	    }

	    const activationState = this.activationState_;
	    if (activationState.isActivated) {
	      return;
	    }

	    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction
	    const previousActivationEvent = this.previousActivationEvent_;
	    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;
	    if (isSameInteraction) {
	      return;
	    }

	    activationState.isActivated = true;
	    activationState.isProgrammatic = e === null;
	    activationState.activationEvent = e;
	    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (
	      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'
	    );

	    const hasActivatedChild =
	      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));
	    if (hasActivatedChild) {
	      // Immediately reset activation state, while preserving logic that prevents touch follow-on events
	      this.resetActivationState_();
	      return;
	    }

	    if (e) {
	      activatedTargets.push(/** @type {!EventTarget} */ (e.target));
	      this.registerDeactivationHandlers_(e);
	    }

	    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);
	    if (activationState.wasElementMadeActive) {
	      this.animateActivation_();
	    }

	    requestAnimationFrame(() => {
	      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
	      activatedTargets = [];

	      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {
	        // If space was pressed, try again within an rAF call to detect :active, because different UAs report
	        // active states inconsistently when they're called within event handling code:
	        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
	        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
	        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
	        // variable is set within a rAF callback for a submit button interaction (#2241).
	        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);
	        if (activationState.wasElementMadeActive) {
	          this.animateActivation_();
	        }
	      }

	      if (!activationState.wasElementMadeActive) {
	        // Reset activation state immediately if element was not made active.
	        this.activationState_ = this.defaultActivationState_();
	      }
	    });
	  }

	  /**
	   * @param {?Event} e
	   * @private
	   */
	  checkElementMadeActive_(e) {
	    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;
	  }

	  /**
	   * @param {?Event=} event Optional event containing position information.
	   */
	  activate(event = null) {
	    this.activate_(event);
	  }

	  /** @private */
	  animateActivation_() {
	    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;
	    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;
	    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;

	    this.layoutInternal_();

	    let translateStart = '';
	    let translateEnd = '';

	    if (!this.adapter_.isUnbounded()) {
	      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();
	      translateStart = `${startPoint.x}px, ${startPoint.y}px`;
	      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;
	    }

	    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
	    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);
	    // Cancel any ongoing activation/deactivation animations
	    clearTimeout(this.activationTimer_);
	    clearTimeout(this.fgDeactivationRemovalTimer_);
	    this.rmBoundedActivationClasses_();
	    this.adapter_.removeClass(FG_DEACTIVATION);

	    // Force layout in order to re-trigger the animation.
	    this.adapter_.computeBoundingRect();
	    this.adapter_.addClass(FG_ACTIVATION);
	    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);
	  }

	  /**
	   * @private
	   * @return {{startPoint: PointType, endPoint: PointType}}
	   */
	  getFgTranslationCoordinates_() {
	    const {activationEvent, wasActivatedByPointer} = this.activationState_;

	    let startPoint;
	    if (wasActivatedByPointer) {
	      startPoint = getNormalizedEventCoords(
	        /** @type {!Event} */ (activationEvent),
	        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()
	      );
	    } else {
	      startPoint = {
	        x: this.frame_.width / 2,
	        y: this.frame_.height / 2,
	      };
	    }
	    // Center the element around the start point.
	    startPoint = {
	      x: startPoint.x - (this.initialSize_ / 2),
	      y: startPoint.y - (this.initialSize_ / 2),
	    };

	    const endPoint = {
	      x: (this.frame_.width / 2) - (this.initialSize_ / 2),
	      y: (this.frame_.height / 2) - (this.initialSize_ / 2),
	    };

	    return {startPoint, endPoint};
	  }

	  /** @private */
	  runDeactivationUXLogicIfReady_() {
	    // This method is called both when a pointing device is released, and when the activation animation ends.
	    // The deactivation animation should only run after both of those occur.
	    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;
	    const {hasDeactivationUXRun, isActivated} = this.activationState_;
	    const activationHasEnded = hasDeactivationUXRun || !isActivated;

	    if (activationHasEnded && this.activationAnimationHasEnded_) {
	      this.rmBoundedActivationClasses_();
	      this.adapter_.addClass(FG_DEACTIVATION);
	      this.fgDeactivationRemovalTimer_ = setTimeout(() => {
	        this.adapter_.removeClass(FG_DEACTIVATION);
	      }, numbers.FG_DEACTIVATION_MS);
	    }
	  }

	  /** @private */
	  rmBoundedActivationClasses_() {
	    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;
	    this.adapter_.removeClass(FG_ACTIVATION);
	    this.activationAnimationHasEnded_ = false;
	    this.adapter_.computeBoundingRect();
	  }

	  resetActivationState_() {
	    this.previousActivationEvent_ = this.activationState_.activationEvent;
	    this.activationState_ = this.defaultActivationState_();
	    // Touch devices may fire additional events for the same interaction within a short time.
	    // Store the previous event until it's safe to assume that subsequent events are for new interactions.
	    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);
	  }

	  /**
	   * @param {?Event} e
	   * @private
	   */
	  deactivate_(e) {
	    const activationState = this.activationState_;
	    // This can happen in scenarios such as when you have a keyup event that blurs the element.
	    if (!activationState.isActivated) {
	      return;
	    }

	    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));

	    if (activationState.isProgrammatic) {
	      const evtObject = null;
	      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));
	      this.resetActivationState_();
	    } else {
	      this.deregisterDeactivationHandlers_();
	      requestAnimationFrame(() => {
	        this.activationState_.hasDeactivationUXRun = true;
	        this.animateDeactivation_(e, state);
	        this.resetActivationState_();
	      });
	    }
	  }

	  /**
	   * @param {?Event=} event Optional event containing position information.
	   */
	  deactivate(event = null) {
	    this.deactivate_(event);
	  }

	  /**
	   * @param {Event} e
	   * @param {!ActivationStateType} options
	   * @private
	   */
	  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {
	    if (wasActivatedByPointer || wasElementMadeActive) {
	      this.runDeactivationUXLogicIfReady_();
	    }
	  }

	  layout() {
	    if (this.layoutFrame_) {
	      cancelAnimationFrame(this.layoutFrame_);
	    }
	    this.layoutFrame_ = requestAnimationFrame(() => {
	      this.layoutInternal_();
	      this.layoutFrame_ = 0;
	    });
	  }

	  /** @private */
	  layoutInternal_() {
	    this.frame_ = this.adapter_.computeBoundingRect();
	    const maxDim = Math.max(this.frame_.height, this.frame_.width);

	    // Surface diameter is treated differently for unbounded vs. bounded ripples.
	    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
	    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
	    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
	    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
	    // `overflow: hidden`.
	    const getBoundedRadius = () => {
	      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));
	      return hypotenuse + MDCRippleFoundation.numbers.PADDING;
	    };

	    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();

	    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform
	    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;
	    this.fgScale_ = this.maxRadius_ / this.initialSize_;

	    this.updateLayoutCssVars_();
	  }

	  /** @private */
	  updateLayoutCssVars_() {
	    const {
	      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,
	    } = MDCRippleFoundation.strings;

	    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);
	    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

	    if (this.adapter_.isUnbounded()) {
	      this.unboundedCoords_ = {
	        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),
	        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),
	      };

	      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);
	      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);
	    }
	  }

	  /** @param {boolean} unbounded */
	  setUnbounded(unbounded) {
	    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;
	    if (unbounded) {
	      this.adapter_.addClass(UNBOUNDED);
	    } else {
	      this.adapter_.removeClass(UNBOUNDED);
	    }
	  }

	  handleFocus() {
	    requestAnimationFrame(() =>
	      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));
	  }

	  handleBlur() {
	    requestAnimationFrame(() =>
	      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends MDCComponent<!MDCRippleFoundation>
	 */
	class MDCRipple extends MDCComponent {
	  /** @param {...?} args */
	  constructor(...args) {
	    super(...args);

	    /** @type {boolean} */
	    this.disabled = false;

	    /** @private {boolean} */
	    this.unbounded_;
	  }

	  /**
	   * @param {!Element} root
	   * @param {{isUnbounded: (boolean|undefined)}=} options
	   * @return {!MDCRipple}
	   */
	  static attachTo(root, {isUnbounded = undefined} = {}) {
	    const ripple = new MDCRipple(root);
	    // Only override unbounded behavior if option is explicitly specified
	    if (isUnbounded !== undefined) {
	      ripple.unbounded = /** @type {boolean} */ (isUnbounded);
	    }
	    return ripple;
	  }

	  /**
	   * @param {!RippleCapableSurface} instance
	   * @return {!MDCRippleAdapter}
	   */
	  static createAdapter(instance) {
	    const MATCHES = getMatchesProperty(HTMLElement.prototype);

	    return {
	      browserSupportsCssVars: () => supportsCssVariables(window),
	      isUnbounded: () => instance.unbounded,
	      isSurfaceActive: () => instance.root_[MATCHES](':active'),
	      isSurfaceDisabled: () => instance.disabled,
	      addClass: (className) => instance.root_.classList.add(className),
	      removeClass: (className) => instance.root_.classList.remove(className),
	      containsEventTarget: (target) => instance.root_.contains(target),
	      registerInteractionHandler: (evtType, handler) =>
	        instance.root_.addEventListener(evtType, handler, applyPassive()),
	      deregisterInteractionHandler: (evtType, handler) =>
	        instance.root_.removeEventListener(evtType, handler, applyPassive()),
	      registerDocumentInteractionHandler: (evtType, handler) =>
	        document.documentElement.addEventListener(evtType, handler, applyPassive()),
	      deregisterDocumentInteractionHandler: (evtType, handler) =>
	        document.documentElement.removeEventListener(evtType, handler, applyPassive()),
	      registerResizeHandler: (handler) => window.addEventListener('resize', handler),
	      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),
	      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),
	      computeBoundingRect: () => instance.root_.getBoundingClientRect(),
	      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),
	    };
	  }

	  /** @return {boolean} */
	  get unbounded() {
	    return this.unbounded_;
	  }

	  /** @param {boolean} unbounded */
	  set unbounded(unbounded) {
	    this.unbounded_ = Boolean(unbounded);
	    this.setUnbounded_();
	  }

	  /**
	   * Closure Compiler throws an access control error when directly accessing a
	   * protected or private property inside a getter/setter, like unbounded above.
	   * By accessing the protected property inside a method, we solve that problem.
	   * That's why this function exists.
	   * @private
	   */
	  setUnbounded_() {
	    this.foundation_.setUnbounded(this.unbounded_);
	  }

	  activate() {
	    this.foundation_.activate();
	  }

	  deactivate() {
	    this.foundation_.deactivate();
	  }

	  layout() {
	    this.foundation_.layout();
	  }

	  /**
	   * @return {!MDCRippleFoundation}
	   * @override
	   */
	  getDefaultFoundation() {
	    return new MDCRippleFoundation(MDCRipple.createAdapter(this));
	  }

	  /** @override */
	  initialSyncWithDOM() {
	    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
	  }
	}

	/**
	 * See Material Design spec for more details on when to use ripples.
	 * https://material.io/guidelines/motion/choreography.html#choreography-creation
	 * @record
	 */
	class RippleCapableSurface {}

	/** @protected {!Element} */
	RippleCapableSurface.prototype.root_;

	/**
	 * Whether or not the ripple bleeds out of the bounds of the element.
	 * @type {boolean|undefined}
	 */
	RippleCapableSurface.prototype.unbounded;

	/**
	 * Whether or not the ripple is attached to a disabled component.
	 * @type {boolean|undefined}
	 */
	RippleCapableSurface.prototype.disabled;

	var ripple = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCRipple: MDCRipple,
		MDCRippleFoundation: MDCRippleFoundation,
		RippleCapableSurface: RippleCapableSurface,
		util: util
	});

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	const cssClasses$1 = {
	  ROOT: 'mdc-dialog',
	  OPEN: 'mdc-dialog--open',
	  ANIMATING: 'mdc-dialog--animating',
	  BACKDROP: 'mdc-dialog__backdrop',
	  SCROLL_LOCK: 'mdc-dialog-scroll-lock',
	  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',
	  CANCEL_BTN: 'mdc-dialog__footer__button--cancel',
	};

	const strings$1 = {
	  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',
	  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',
	  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',
	  ACCEPT_EVENT: 'MDCDialog:accept',
	  CANCEL_EVENT: 'MDCDialog:cancel',
	};

	const numbers$1 = {
	  DIALOG_ANIMATION_TIME_MS: 120,
	};

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	class MDCDialogFoundation extends MDCFoundation {
	  static get cssClasses() {
	    return cssClasses$1;
	  }

	  static get strings() {
	    return strings$1;
	  }

	  static get numbers() {
	    return numbers$1;
	  }

	  static get defaultAdapter() {
	    return ({
	      addClass: (/* className: string */) => {},
	      removeClass: (/* className: string */) => {},
	      addBodyClass: (/* className: string */) => {},
	      removeBodyClass: (/* className: string */) => {},
	      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,
	      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},
	      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},
	      registerSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},
	      deregisterSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},
	      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},
	      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},
	      notifyAccept: () => {},
	      notifyCancel: () => {},
	      trapFocusOnSurface: () => {},
	      untrapFocusOnSurface: () => {},
	      isDialog: (/* el: Element */) => /* boolean */ false,
	    });
	  }

	  constructor(adapter) {
	    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));
	    this.isOpen_ = false;
	    this.componentClickHandler_ = (evt) => {
	      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses$1.BACKDROP)) {
	        this.cancel(true);
	      }
	    };
	    this.dialogClickHandler_ = (evt) => this.handleDialogClick_(evt);
	    this.documentKeydownHandler_ = (evt) => {
	      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {
	        this.cancel(true);
	      }
	    };

	    this.timerId_ = 0;
	    this.animationTimerEnd_ = (evt) => this.handleAnimationTimerEnd_(evt);
	  };

	  destroy() {
	    // Ensure that dialog is cleaned up when destroyed
	    if (this.isOpen_) {
	      this.close();
	    }
	    // Final cleanup of animating class in case the timer has not completed.
	    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
	    clearTimeout(this.timerId_);
	  }

	  open() {
	    this.isOpen_ = true;
	    this.disableScroll_();
	    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);
	    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);
	    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);
	    clearTimeout(this.timerId_);
	    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
	    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
	    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);
	  }

	  close() {
	    this.isOpen_ = false;
	    this.enableScroll_();
	    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);
	    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
	    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
	    this.adapter_.untrapFocusOnSurface();
	    clearTimeout(this.timerId_);
	    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
	    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
	    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);
	  }

	  isOpen() {
	    return this.isOpen_;
	  }

	  accept(shouldNotify) {
	    if (shouldNotify) {
	      this.adapter_.notifyAccept();
	    }

	    this.close();
	  }

	  cancel(shouldNotify) {
	    if (shouldNotify) {
	      this.adapter_.notifyCancel();
	    }

	    this.close();
	  }

	  handleDialogClick_(evt) {
	    const {target} = evt;
	    if (this.adapter_.eventTargetHasClass(target, cssClasses$1.ACCEPT_BTN)) {
	      this.accept(true);
	    } else if (this.adapter_.eventTargetHasClass(target, cssClasses$1.CANCEL_BTN)) {
	      this.cancel(true);
	    }
	  }

	  handleAnimationTimerEnd_() {
	    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
	    if (this.isOpen_) {
	      this.adapter_.trapFocusOnSurface();
	    }
	  };

	  disableScroll_() {
	    this.adapter_.addBodyClass(cssClasses$1.SCROLL_LOCK);
	  }

	  enableScroll_() {
	    this.adapter_.removeBodyClass(cssClasses$1.SCROLL_LOCK);
	  }
	}

	var tabbable = function(el, options) {
	  options = options || {};

	  var elementDocument = el.ownerDocument || el;
	  var basicTabbables = [];
	  var orderedTabbables = [];

	  // A node is "available" if
	  // - it's computed style
	  var isUnavailable = createIsUnavailable(elementDocument);

	  var candidateSelectors = [
	    'input',
	    'select',
	    'a[href]',
	    'textarea',
	    'button',
	    '[tabindex]',
	  ];

	  var candidates = el.querySelectorAll(candidateSelectors.join(','));

	  if (options.includeContainer) {
	    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

	    if (
	      candidateSelectors.some(function(candidateSelector) {
	        return matches.call(el, candidateSelector);
	      })
	    ) {
	      candidates = Array.prototype.slice.apply(candidates);
	      candidates.unshift(el);
	    }
	  }

	  var candidate, candidateIndexAttr, candidateIndex;
	  for (var i = 0, l = candidates.length; i < l; i++) {
	    candidate = candidates[i];
	    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10);
	    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;

	    if (
	      candidateIndex < 0
	      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')
	      || candidate.disabled
	      || isUnavailable(candidate, elementDocument)
	    ) {
	      continue;
	    }

	    if (candidateIndex === 0) {
	      basicTabbables.push(candidate);
	    } else {
	      orderedTabbables.push({
	        index: i,
	        tabIndex: candidateIndex,
	        node: candidate,
	      });
	    }
	  }

	  var tabbableNodes = orderedTabbables
	    .sort(function(a, b) {
	      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
	    })
	    .map(function(a) {
	      return a.node
	    });

	  Array.prototype.push.apply(tabbableNodes, basicTabbables);

	  return tabbableNodes;
	};

	function createIsUnavailable(elementDocument) {
	  // Node cache must be refreshed on every check, in case
	  // the content of the element has changed
	  var isOffCache = [];

	  // "off" means `display: none;`, as opposed to "hidden",
	  // which means `visibility: hidden;`. getComputedStyle
	  // accurately reflects visiblity in context but not
	  // "off" state, so we need to recursively check parents.

	  function isOff(node, nodeComputedStyle) {
	    if (node === elementDocument.documentElement) return false;

	    // Find the cached node (Array.prototype.find not available in IE9)
	    for (var i = 0, length = isOffCache.length; i < length; i++) {
	      if (isOffCache[i][0] === node) return isOffCache[i][1];
	    }

	    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);

	    var result = false;

	    if (nodeComputedStyle.display === 'none') {
	      result = true;
	    } else if (node.parentNode) {
	      result = isOff(node.parentNode);
	    }

	    isOffCache.push([node, result]);

	    return result;
	  }

	  return function isUnavailable(node) {
	    if (node === elementDocument.documentElement) return false;

	    var computedStyle = elementDocument.defaultView.getComputedStyle(node);

	    if (isOff(node, computedStyle)) return true;

	    return computedStyle.visibility === 'hidden';
	  }
	}

	var listeningFocusTrap = null;

	function focusTrap(element, userOptions) {
	  var tabbableNodes = [];
	  var firstTabbableNode = null;
	  var lastTabbableNode = null;
	  var nodeFocusedBeforeActivation = null;
	  var active = false;
	  var paused = false;
	  var tabEvent = null;

	  var container = (typeof element === 'string')
	    ? document.querySelector(element)
	    : element;

	  var config = userOptions || {};
	  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)
	    ? userOptions.returnFocusOnDeactivate
	    : true;
	  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)
	    ? userOptions.escapeDeactivates
	    : true;

	  var trap = {
	    activate: activate,
	    deactivate: deactivate,
	    pause: pause,
	    unpause: unpause,
	  };

	  return trap;

	  function activate(activateOptions) {
	    if (active) return;

	    var defaultedActivateOptions = {
	      onActivate: (activateOptions && activateOptions.onActivate !== undefined)
	        ? activateOptions.onActivate
	        : config.onActivate,
	    };

	    active = true;
	    paused = false;
	    nodeFocusedBeforeActivation = document.activeElement;

	    if (defaultedActivateOptions.onActivate) {
	      defaultedActivateOptions.onActivate();
	    }

	    addListeners();
	    return trap;
	  }

	  function deactivate(deactivateOptions) {
	    if (!active) return;

	    var defaultedDeactivateOptions = {
	      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)
	        ? deactivateOptions.returnFocus
	        : config.returnFocusOnDeactivate,
	      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)
	        ? deactivateOptions.onDeactivate
	        : config.onDeactivate,
	    };

	    removeListeners();

	    if (defaultedDeactivateOptions.onDeactivate) {
	      defaultedDeactivateOptions.onDeactivate();
	    }

	    if (defaultedDeactivateOptions.returnFocus) {
	      setTimeout(function () {
	        tryFocus(nodeFocusedBeforeActivation);
	      }, 0);
	    }

	    active = false;
	    paused = false;
	    return this;
	  }

	  function pause() {
	    if (paused || !active) return;
	    paused = true;
	    removeListeners();
	  }

	  function unpause() {
	    if (!paused || !active) return;
	    paused = false;
	    addListeners();
	  }

	  function addListeners() {
	    if (!active) return;

	    // There can be only one listening focus trap at a time
	    if (listeningFocusTrap) {
	      listeningFocusTrap.pause();
	    }
	    listeningFocusTrap = trap;

	    updateTabbableNodes();
	    // Ensure that the focused element doesn't capture the event that caused the focus trap activation
	    setTimeout(function () {
	      tryFocus(firstFocusNode());
	    }, 0);
	    document.addEventListener('focus', checkFocus, true);
	    document.addEventListener('click', checkClick, true);
	    document.addEventListener('mousedown', checkPointerDown, true);
	    document.addEventListener('touchstart', checkPointerDown, true);
	    document.addEventListener('keydown', checkKey, true);

	    return trap;
	  }

	  function removeListeners() {
	    if (!active || listeningFocusTrap !== trap) return;

	    document.removeEventListener('focus', checkFocus, true);
	    document.removeEventListener('click', checkClick, true);
	    document.removeEventListener('mousedown', checkPointerDown, true);
	    document.removeEventListener('touchstart', checkPointerDown, true);
	    document.removeEventListener('keydown', checkKey, true);

	    listeningFocusTrap = null;

	    return trap;
	  }

	  function getNodeForOption(optionName) {
	    var optionValue = config[optionName];
	    var node = optionValue;
	    if (!optionValue) {
	      return null;
	    }
	    if (typeof optionValue === 'string') {
	      node = document.querySelector(optionValue);
	      if (!node) {
	        throw new Error('`' + optionName + '` refers to no known node');
	      }
	    }
	    if (typeof optionValue === 'function') {
	      node = optionValue();
	      if (!node) {
	        throw new Error('`' + optionName + '` did not return a node');
	      }
	    }
	    return node;
	  }

	  function firstFocusNode() {
	    var node;
	    if (getNodeForOption('initialFocus') !== null) {
	      node = getNodeForOption('initialFocus');
	    } else if (container.contains(document.activeElement)) {
	      node = document.activeElement;
	    } else {
	      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');
	    }

	    if (!node) {
	      throw new Error('You can\'t have a focus-trap without at least one focusable element');
	    }

	    return node;
	  }

	  // This needs to be done on mousedown and touchstart instead of click
	  // so that it precedes the focus event
	  function checkPointerDown(e) {
	    if (config.clickOutsideDeactivates && !container.contains(e.target)) {
	      deactivate({ returnFocus: false });
	    }
	  }

	  function checkClick(e) {
	    if (config.clickOutsideDeactivates) return;
	    if (container.contains(e.target)) return;
	    e.preventDefault();
	    e.stopImmediatePropagation();
	  }

	  function checkFocus(e) {
	    if (container.contains(e.target)) return;
	    e.preventDefault();
	    e.stopImmediatePropagation();
	    // Checking for a blur method here resolves a Firefox issue (#15)
	    if (typeof e.target.blur === 'function') e.target.blur();

	    if (tabEvent) {
	      readjustFocus(tabEvent);
	    }
	  }

	  function checkKey(e) {
	    if (e.key === 'Tab' || e.keyCode === 9) {
	      handleTab(e);
	    }

	    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
	      deactivate();
	    }
	  }

	  function handleTab(e) {
	    updateTabbableNodes();

	    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {
	      return tabEvent = e;
	    }

	    e.preventDefault();
	    var currentFocusIndex = tabbableNodes.indexOf(e.target);

	    if (e.shiftKey) {
	      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {
	        return tryFocus(lastTabbableNode);
	      }
	      return tryFocus(tabbableNodes[currentFocusIndex - 1]);
	    }

	    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);

	    tryFocus(tabbableNodes[currentFocusIndex + 1]);
	  }

	  function updateTabbableNodes() {
	    tabbableNodes = tabbable(container);
	    firstTabbableNode = tabbableNodes[0];
	    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];
	  }

	  function readjustFocus(e) {
	    if (e.shiftKey) return tryFocus(lastTabbableNode);

	    tryFocus(firstTabbableNode);
	  }
	}

	function isEscapeEvent(e) {
	  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
	}

	function tryFocus(node) {
	  if (!node || !node.focus) return;
	  if (node === document.activeElement)  return;

	  node.focus();
	  if (node.tagName.toLowerCase() === 'input') {
	    node.select();
	  }
	}

	var focusTrap_1 = focusTrap;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = focusTrap_1) {
	  return focusTrapFactory(surfaceEl, {
	    initialFocus: acceptButtonEl,
	    clickOutsideDeactivates: true,
	  });
	}

	var util$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		createFocusTrapInstance: createFocusTrapInstance
	});

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	class MDCDialog extends MDCComponent {
	  static attachTo(root) {
	    return new MDCDialog(root);
	  }

	  get open() {
	    return this.foundation_.isOpen();
	  }

	  get acceptButton_() {
	    return this.root_.querySelector(MDCDialogFoundation.strings.ACCEPT_SELECTOR);
	  }

	  get dialogSurface_() {
	    return this.root_.querySelector(MDCDialogFoundation.strings.DIALOG_SURFACE_SELECTOR);
	  }

	  initialize() {
	    this.focusTrap_ = createFocusTrapInstance(this.dialogSurface_, this.acceptButton_);
	    this.footerBtnRipples_ = [];

	    const footerBtns = this.root_.querySelectorAll('.mdc-dialog__footer__button');
	    for (let i = 0, footerBtn; footerBtn = footerBtns[i]; i++) {
	      this.footerBtnRipples_.push(new MDCRipple(footerBtn));
	    }
	  }

	  destroy() {
	    this.footerBtnRipples_.forEach((ripple) => ripple.destroy());
	    super.destroy();
	  }

	  show() {
	    this.foundation_.open();
	  }

	  close() {
	    this.foundation_.close();
	  }

	  getDefaultFoundation() {
	    return new MDCDialogFoundation({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      addBodyClass: (className) => document.body.classList.add(className),
	      removeBodyClass: (className) => document.body.classList.remove(className),
	      eventTargetHasClass: (target, className) => target.classList.contains(className),
	      registerInteractionHandler: (evt, handler) => this.root_.addEventListener(evt, handler),
	      deregisterInteractionHandler: (evt, handler) => this.root_.removeEventListener(evt, handler),
	      registerSurfaceInteractionHandler: (evt, handler) => this.dialogSurface_.addEventListener(evt, handler),
	      deregisterSurfaceInteractionHandler: (evt, handler) => this.dialogSurface_.removeEventListener(evt, handler),
	      registerDocumentKeydownHandler: (handler) => document.addEventListener('keydown', handler),
	      deregisterDocumentKeydownHandler: (handler) => document.removeEventListener('keydown', handler),
	      notifyAccept: () => this.emit(MDCDialogFoundation.strings.ACCEPT_EVENT),
	      notifyCancel: () => this.emit(MDCDialogFoundation.strings.CANCEL_EVENT),
	      trapFocusOnSurface: () => this.focusTrap_.activate(),
	      untrapFocusOnSurface: () => this.focusTrap_.deactivate(),
	      isDialog: (el) => el === this.dialogSurface_,
	    });
	  }
	}

	var dialog = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCDialogFoundation: MDCDialogFoundation,
		util: util$1,
		MDCDialog: MDCDialog
	});

	var bindDecorator = createCommonjsModule(function (module, exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	var constants;
	(function (constants) {
	    constants.typeOfFunction = 'function';
	    constants.boolTrue = true;
	})(constants || (constants = {}));
	function bind(target, propertyKey, descriptor) {
	    if (!descriptor || (typeof descriptor.value !== constants.typeOfFunction)) {
	        throw new TypeError("Only methods can be decorated with @bind. <" + propertyKey + "> is not a method!");
	    }
	    return {
	        configurable: constants.boolTrue,
	        get: function () {
	            var bound = descriptor.value.bind(this);
	            // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.
	            Object.defineProperty(this, propertyKey, {
	                value: bound,
	                configurable: constants.boolTrue,
	                writable: constants.boolTrue
	            });
	            return bound;
	        }
	    };
	}
	exports.bind = bind;
	exports.default = bind;
	});

	unwrapExports(bindDecorator);
	var bindDecorator_1 = bindDecorator.bind;

	var MaterialComponent_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.MaterialComponent = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);

	var _typeof2 = interopRequireDefault(_typeof_1);







	var __decorate =  function (decorators, target, key, desc) {
	  var c = arguments.length,
	      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	      d;
	  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	  }
	  return c > 3 && r && Object.defineProperty(target, key, r), r;
	};

	var doNotRemoveProps = ['disabled'];
	/**
	 * Base class for every Material component in this package
	 * NOTE: every component should add a ref by the name of `control` to its root dom for autoInit Properties
	 *
	 * @export
	 * @class MaterialComponent
	 * @extends {Component}
	 */

	var MaterialComponent =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(MaterialComponent, _Component);

	  function MaterialComponent() {
	    (0, _classCallCheck2.default)(this, MaterialComponent);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MaterialComponent).apply(this, arguments));
	  }

	  (0, _createClass2.default)(MaterialComponent, [{
	    key: "render",
	    value: function render(props) {
	      if (!this.classText) {
	        this.classText = this.buildClassName(props);
	      } // Fetch a VNode


	      var componentProps = props;
	      var userDefinedClasses = componentProps.className || componentProps.class || ''; // We delete class props and add them later in the final
	      // step so every component does not need to handle user specified classes.

	      if (componentProps.class) {
	        delete componentProps.class;
	      }

	      if (componentProps.className) {
	        delete componentProps.className;
	      }

	      var element = this.materialDom(componentProps);
	      var propName = 'attributes';

	      if ('props' in element) {
	        propName = 'props'; // @ts-ignore

	        element.props = element.props || {};
	      } else {
	        element.attributes = element.attributes || {};
	      } // @ts-ignore


	      element[propName].className = "".concat(userDefinedClasses, " ").concat(this.getClassName(element)).split(' ').filter(function (value, index, self) {
	        return self.indexOf(value) === index && value !== '';
	      }) // Unique + exclude empty class names
	      .join(' '); // Clean this shit of proxy attributes

	      this.mdcProps.forEach(function (prop) {
	        // TODO: Fix this better
	        if (prop in doNotRemoveProps) {
	          return;
	        } // @ts-ignore


	        delete element[propName][prop];
	      });
	      return element;
	    }
	    /** Attach the ripple effect */

	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      if (this.props.ripple && this.control) {
	        this.ripple = new ripple.MDCRipple(this.control);
	      }
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.MDComponent && this.mdcNotifyProps) {
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	          for (var _iterator = this.mdcNotifyProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var prop = _step.value;

	            if (this.props[prop] !== nextProps[prop]) {
	              this.MDComponent[prop] = nextProps[prop];
	            }
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator.return != null) {
	              _iterator.return();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	      }

	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;

	      try {
	        for (var _iterator2 = this.mdcProps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var _prop = _step2.value;

	          if (this.props[_prop] !== nextProps[_prop]) {
	            this.classText = this.buildClassName(nextProps);
	            break;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      if (this.ripple) {
	        this.ripple.destroy();
	      }
	    }
	  }, {
	    key: "afterComponentDidMount",
	    value: function afterComponentDidMount() {
	      if (this.MDComponent && this.mdcNotifyProps) {
	        var _iteratorNormalCompletion3 = true;
	        var _didIteratorError3 = false;
	        var _iteratorError3 = undefined;

	        try {
	          for (var _iterator3 = this.mdcNotifyProps[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	            var prop = _step3.value;
	            this.MDComponent[prop] = this.props[prop];
	          }
	        } catch (err) {
	          _didIteratorError3 = true;
	          _iteratorError3 = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
	              _iterator3.return();
	            }
	          } finally {
	            if (_didIteratorError3) {
	              throw _iteratorError3;
	            }
	          }
	        }
	      }
	    } // Shared setter for the root element ref

	  }, {
	    key: "setControlRef",
	    value: function setControlRef(control) {
	      this.control = control;
	    }
	    /** Build the className based on component names and mdc props */

	  }, {
	    key: "buildClassName",
	    value: function buildClassName(props) {
	      // Class name based on component name
	      var classText = 'mdc-' + this.componentName; // Loop over mdcProps to turn them into classNames

	      for (var propKey in props) {
	        if (props.hasOwnProperty(propKey)) {
	          var prop = props[propKey];

	          if (typeof prop === 'boolean' && prop) {
	            if (this.mdcProps.indexOf(propKey) !== -1) {
	              classText += " mdc-".concat(this.componentName, "--").concat(propKey);
	            }
	          }
	        }
	      }

	      return classText;
	    }
	    /** Returns the class name for element */

	  }, {
	    key: "getClassName",
	    value: function getClassName(element) {
	      if (!element) {
	        return '';
	      }

	      var propName = 'attributes';

	      if ('props' in element) {
	        propName = 'props'; // @ts-ignore

	        element.props = element.props || {};
	      } else {
	        element.attributes = element.attributes || {};
	      } // @ts-ignore


	      var attrs = element[propName] = element[propName] || {};
	      var classText = this.classText;

	      if (attrs.class) {
	        classText += ' ' + attrs.class;
	      }

	      if (attrs.className && attrs.className !== attrs.class) {
	        classText += ' ' + attrs.className;
	      }

	      return classText;
	    }
	  }]);
	  return MaterialComponent;
	}(preact_module.Component);

	exports.MaterialComponent = MaterialComponent;

	__decorate([bindDecorator.bind], MaterialComponent.prototype, "setControlRef", null);

	var _default = MaterialComponent;
	exports.default = _default;

	});

	unwrapExports(MaterialComponent_1);
	var MaterialComponent_2 = MaterialComponent_1.MaterialComponent;

	var Icon_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Icon = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);



	var _MaterialComponent2 = interopRequireDefault(MaterialComponent_1);

	var Icon =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Icon, _MaterialComponent);

	  function Icon() {
	    var _this;

	    (0, _classCallCheck2.default)(this, Icon);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
	    _this.componentName = 'icon';
	    _this.mdcProps = [];
	    return _this;
	  }

	  (0, _createClass2.default)(Icon, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      var classes = ['material-icons']; // CardActionIcon sends className

	      if (props.className) {
	        classes.push(props.className);
	      }

	      return (0, preact_module.h)("i", Object.assign({}, props, {
	        className: classes.join(' ')
	      }), props.children);
	    }
	  }]);
	  return Icon;
	}(_MaterialComponent2.default);

	exports.Icon = Icon;
	var _default = Icon;
	exports.default = _default;

	});

	unwrapExports(Icon_1);
	var Icon_2 = Icon_1.Icon;

	var generateThemeClass = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = _default;

	function _default(prop) {
	  return "mdc-theme--".concat(prop, "-bg");
	}

	});

	unwrapExports(generateThemeClass);

	var Button_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Button = exports.ButtonIcon = void 0;

	var _createClass2 = interopRequireDefault(createClass);

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);



	var _MaterialComponent2 = interopRequireDefault(MaterialComponent_1);

	var _Icon2 = interopRequireDefault(Icon_1);

	var _generateThemeClass = interopRequireDefault(generateThemeClass);

	var ButtonIcon =
	/*#__PURE__*/
	function (_Icon) {
	  (0, _inherits2.default)(ButtonIcon, _Icon);

	  function ButtonIcon() {
	    var _this;

	    (0, _classCallCheck2.default)(this, ButtonIcon);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ButtonIcon).apply(this, arguments));
	    _this.componentName = 'button__icon';
	    return _this;
	  }

	  return ButtonIcon;
	}(_Icon2.default);

	exports.ButtonIcon = ButtonIcon;

	var Button =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Button, _MaterialComponent);

	  function Button() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, Button);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Button).apply(this, arguments));
	    _this2.componentName = 'button';
	    _this2.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];
	    _this2.themeProps = ['primary', 'secondary'];
	    return _this2;
	  }

	  (0, _createClass2.default)(Button, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      var ButtonElement = props.href ? 'a' : 'button';
	      var className = '';
	      this.themeProps.forEach(function (themeProp) {
	        if (themeProp in props && props[themeProp] !== false) {
	          className += (0, _generateThemeClass.default)(themeProp) + ' ';
	        }
	      });
	      return (0, preact_module.h)(ButtonElement, Object.assign({
	        ref: this.setControlRef
	      }, props, {
	        className: className
	      }), this.props.children);
	    }
	  }]);
	  return Button;
	}(_MaterialComponent2.default);

	exports.Button = Button;

	var default_1 =
	/*#__PURE__*/
	function (_Button) {
	  (0, _inherits2.default)(default_1, _Button);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(Button);

	exports.default = default_1;
	default_1.Icon = ButtonIcon;

	});

	unwrapExports(Button_1);
	var Button_2 = Button_1.Button;
	var Button_3 = Button_1.ButtonIcon;

	var Dialog_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Dialog = exports.DialogFooterButton = exports.DialogFooter = exports.DialogBody = exports.DialogHeader = void 0;

	var _get2 = interopRequireDefault(get$1);

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);

	var _typeof2 = interopRequireDefault(_typeof_1);







	var _MaterialComponent5 = interopRequireDefault(MaterialComponent_1);



	var __decorate =  function (decorators, target, key, desc) {
	  var c = arguments.length,
	      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	      d;
	  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	  }
	  return c > 3 && r && Object.defineProperty(target, key, r), r;
	};

	var DialogHeader =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(DialogHeader, _MaterialComponent);

	  function DialogHeader() {
	    var _this;

	    (0, _classCallCheck2.default)(this, DialogHeader);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogHeader).apply(this, arguments));
	    _this.componentName = 'dialog__header';
	    _this.mdcProps = [];
	    return _this;
	  }

	  (0, _createClass2.default)(DialogHeader, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("header", Object.assign({}, props), (0, preact_module.h)("h2", {
	        className: "mdc-dialog__header__title"
	      }, props.children));
	    }
	  }]);
	  return DialogHeader;
	}(_MaterialComponent5.default);

	exports.DialogHeader = DialogHeader;

	__decorate([bindDecorator.bind], DialogHeader.prototype, "materialDom", null);

	var DialogBody =
	/*#__PURE__*/
	function (_MaterialComponent2) {
	  (0, _inherits2.default)(DialogBody, _MaterialComponent2);

	  function DialogBody() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, DialogBody);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogBody).apply(this, arguments));
	    _this2.componentName = 'dialog__body';
	    _this2.mdcProps = ['scrollable'];
	    return _this2;
	  }

	  (0, _createClass2.default)(DialogBody, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("section", Object.assign({}, props), props.children);
	    }
	  }]);
	  return DialogBody;
	}(_MaterialComponent5.default);

	exports.DialogBody = DialogBody;

	__decorate([bindDecorator.bind], DialogBody.prototype, "materialDom", null);

	var DialogFooter =
	/*#__PURE__*/
	function (_MaterialComponent3) {
	  (0, _inherits2.default)(DialogFooter, _MaterialComponent3);

	  function DialogFooter() {
	    var _this3;

	    (0, _classCallCheck2.default)(this, DialogFooter);
	    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooter).apply(this, arguments));
	    _this3.componentName = 'dialog__footer';
	    _this3.mdcProps = [];
	    return _this3;
	  }

	  (0, _createClass2.default)(DialogFooter, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("footer", Object.assign({}, props), props.children);
	    }
	  }]);
	  return DialogFooter;
	}(_MaterialComponent5.default);

	exports.DialogFooter = DialogFooter;

	__decorate([bindDecorator.bind], DialogFooter.prototype, "materialDom", null);

	var DialogFooterButton =
	/*#__PURE__*/
	function (_Button) {
	  (0, _inherits2.default)(DialogFooterButton, _Button);

	  function DialogFooterButton() {
	    var _this4;

	    (0, _classCallCheck2.default)(this, DialogFooterButton);
	    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooterButton).apply(this, arguments));
	    _this4.componentName = 'dialog__footer__button';
	    _this4.mdcProps = ['cancel', 'accept'];
	    return _this4;
	  }

	  (0, _createClass2.default)(DialogFooterButton, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("button", Object.assign({}, props, {
	        className: "mdc-button",
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return DialogFooterButton;
	}(Button_1.Button);

	exports.DialogFooterButton = DialogFooterButton;

	__decorate([bindDecorator.bind], DialogFooterButton.prototype, "materialDom", null);

	var Dialog =
	/*#__PURE__*/
	function (_MaterialComponent4) {
	  (0, _inherits2.default)(Dialog, _MaterialComponent4);

	  function Dialog() {
	    var _this5;

	    (0, _classCallCheck2.default)(this, Dialog);
	    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dialog).apply(this, arguments));
	    _this5.componentName = 'dialog';
	    _this5.mdcProps = [];
	    return _this5;
	  }

	  (0, _createClass2.default)(Dialog, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentDidMount", this).call(this);

	      if (this.control) {
	        this.MDComponent = new dialog.MDCDialog(this.control);
	        this.MDComponent.listen('MDCDialog:accept', this.onAccept);
	        this.MDComponent.listen('MDCDialog:cancel', this.onCancel);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.unlisten('MDCDialog:accept', this.onAccept);
	        this.MDComponent.unlisten('MDCDialog:cancel', this.onCancel);
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "onAccept",
	    value: function onAccept(e) {
	      if (this.props.onAccept) {
	        this.props.onAccept(e);
	      }
	    }
	  }, {
	    key: "onCancel",
	    value: function onCancel(e) {
	      if (this.props.onCancel) {
	        this.props.onCancel(e);
	      }
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("dialog", Object.assign({
	        role: 'alertdialog',
	        ref: this.setControlRef
	      }, props), (0, preact_module.h)("div", {
	        className: "mdc-dialog__surface"
	      }, props.children), (0, preact_module.h)("div", {
	        className: "mdc-dialog__backdrop"
	      }));
	    }
	  }]);
	  return Dialog;
	}(_MaterialComponent5.default);

	exports.Dialog = Dialog;

	__decorate([bindDecorator.bind], Dialog.prototype, "onAccept", null);

	__decorate([bindDecorator.bind], Dialog.prototype, "onCancel", null);

	var default_1 =
	/*#__PURE__*/
	function (_Dialog) {
	  (0, _inherits2.default)(default_1, _Dialog);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(Dialog);

	exports.default = default_1;
	default_1.Header = DialogHeader;
	default_1.Body = DialogBody;
	default_1.Footer = DialogFooter;
	default_1.FooterButton = DialogFooterButton;

	});

	var Dialog = unwrapExports(Dialog_1);
	var Dialog_2 = Dialog_1.Dialog;
	var Dialog_3 = Dialog_1.DialogFooterButton;
	var Dialog_4 = Dialog_1.DialogFooter;
	var Dialog_5 = Dialog_1.DialogBody;
	var Dialog_6 = Dialog_1.DialogHeader;

	var List_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.List = exports.ListGroupHeader = exports.ListGroup = exports.ListSecondaryText = exports.ListPrimaryText = exports.ListTextContainer = exports.ListDivider = exports.ListItemMetaText = exports.ListItemMeta = exports.ListItemGraphic = exports.ListLinkItem = exports.ListItem = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);



	var _MaterialComponent10 = interopRequireDefault(MaterialComponent_1);

	var _Icon = interopRequireDefault(Icon_1);

	var ListItem =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(ListItem, _MaterialComponent);

	  function ListItem() {
	    var _this;

	    (0, _classCallCheck2.default)(this, ListItem);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).apply(this, arguments));
	    _this.componentName = 'list-item';
	    _this.mdcProps = [];
	    return _this;
	  }

	  (0, _createClass2.default)(ListItem, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("li", Object.assign({
	        role: "option"
	      }, props, {
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return ListItem;
	}(_MaterialComponent10.default);

	exports.ListItem = ListItem;

	var ListLinkItem =
	/*#__PURE__*/
	function (_MaterialComponent2) {
	  (0, _inherits2.default)(ListLinkItem, _MaterialComponent2);

	  function ListLinkItem() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, ListLinkItem);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListLinkItem).apply(this, arguments));
	    _this2.componentName = 'list-item';
	    _this2.mdcProps = [];
	    return _this2;
	  }

	  (0, _createClass2.default)(ListLinkItem, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("a", Object.assign({
	        role: "option"
	      }, props, {
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return ListLinkItem;
	}(_MaterialComponent10.default);

	exports.ListLinkItem = ListLinkItem;

	var ListItemGraphic =
	/*#__PURE__*/
	function (_MaterialComponent3) {
	  (0, _inherits2.default)(ListItemGraphic, _MaterialComponent3);

	  function ListItemGraphic() {
	    var _this3;

	    (0, _classCallCheck2.default)(this, ListItemGraphic);
	    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemGraphic).apply(this, arguments));
	    _this3.componentName = 'list-item__graphic';
	    _this3.mdcProps = [];
	    return _this3;
	  }

	  (0, _createClass2.default)(ListItemGraphic, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("span", Object.assign({}, props, {
	        ref: this.setControlRef,
	        role: "presentation"
	      }), (0, preact_module.h)(_Icon.default, {
	        "aria-hidden": "true"
	      }, props.children));
	    }
	  }]);
	  return ListItemGraphic;
	}(_MaterialComponent10.default);

	exports.ListItemGraphic = ListItemGraphic;

	var ListItemMeta =
	/*#__PURE__*/
	function (_ListItemGraphic) {
	  (0, _inherits2.default)(ListItemMeta, _ListItemGraphic);

	  function ListItemMeta() {
	    var _this4;

	    (0, _classCallCheck2.default)(this, ListItemMeta);
	    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMeta).apply(this, arguments));
	    _this4.componentName = 'list-item__meta';
	    return _this4;
	  }

	  return ListItemMeta;
	}(ListItemGraphic);

	exports.ListItemMeta = ListItemMeta;

	var ListItemMetaText =
	/*#__PURE__*/
	function (_MaterialComponent4) {
	  (0, _inherits2.default)(ListItemMetaText, _MaterialComponent4);

	  function ListItemMetaText() {
	    var _this5;

	    (0, _classCallCheck2.default)(this, ListItemMetaText);
	    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMetaText).apply(this, arguments));
	    _this5.componentName = 'list-item__meta';
	    _this5.mdcProps = [];
	    return _this5;
	  }

	  (0, _createClass2.default)(ListItemMetaText, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("span", Object.assign({}, props, {
	        ref: this.setControlRef,
	        role: "presentation"
	      }), props.children);
	    }
	  }]);
	  return ListItemMetaText;
	}(_MaterialComponent10.default);

	exports.ListItemMetaText = ListItemMetaText;

	var ListDivider =
	/*#__PURE__*/
	function (_MaterialComponent5) {
	  (0, _inherits2.default)(ListDivider, _MaterialComponent5);

	  function ListDivider() {
	    var _this6;

	    (0, _classCallCheck2.default)(this, ListDivider);
	    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListDivider).apply(this, arguments));
	    _this6.componentName = 'list-divider';
	    _this6.mdcProps = ['inset'];
	    return _this6;
	  }

	  (0, _createClass2.default)(ListDivider, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("li", Object.assign({
	        role: "separator"
	      }, props, {
	        ref: this.setControlRef
	      }));
	    }
	  }]);
	  return ListDivider;
	}(_MaterialComponent10.default);

	exports.ListDivider = ListDivider;

	var ListTextContainer =
	/*#__PURE__*/
	function (_MaterialComponent6) {
	  (0, _inherits2.default)(ListTextContainer, _MaterialComponent6);

	  function ListTextContainer() {
	    var _this7;

	    (0, _classCallCheck2.default)(this, ListTextContainer);
	    _this7 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListTextContainer).apply(this, arguments));
	    _this7.componentName = 'list-item__text';
	    _this7.mdcProps = [];
	    return _this7;
	  }

	  (0, _createClass2.default)(ListTextContainer, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("span", Object.assign({}, props, {
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return ListTextContainer;
	}(_MaterialComponent10.default);

	exports.ListTextContainer = ListTextContainer;

	var ListPrimaryText =
	/*#__PURE__*/
	function (_ListTextContainer) {
	  (0, _inherits2.default)(ListPrimaryText, _ListTextContainer);

	  function ListPrimaryText() {
	    var _this8;

	    (0, _classCallCheck2.default)(this, ListPrimaryText);
	    _this8 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListPrimaryText).apply(this, arguments));
	    _this8.componentName = 'list-item__primary-text';
	    return _this8;
	  }

	  return ListPrimaryText;
	}(ListTextContainer);

	exports.ListPrimaryText = ListPrimaryText;

	var ListSecondaryText =
	/*#__PURE__*/
	function (_ListTextContainer2) {
	  (0, _inherits2.default)(ListSecondaryText, _ListTextContainer2);

	  function ListSecondaryText() {
	    var _this9;

	    (0, _classCallCheck2.default)(this, ListSecondaryText);
	    _this9 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListSecondaryText).apply(this, arguments));
	    _this9.componentName = 'list-item__secondary-text';
	    return _this9;
	  }

	  return ListSecondaryText;
	}(ListTextContainer);

	exports.ListSecondaryText = ListSecondaryText;

	var ListGroup =
	/*#__PURE__*/
	function (_MaterialComponent7) {
	  (0, _inherits2.default)(ListGroup, _MaterialComponent7);

	  function ListGroup() {
	    var _this10;

	    (0, _classCallCheck2.default)(this, ListGroup);
	    _this10 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroup).apply(this, arguments));
	    _this10.componentName = 'list-group';
	    _this10.mdcProps = [];
	    return _this10;
	  }

	  (0, _createClass2.default)(ListGroup, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("div", Object.assign({}, props), this.props.children);
	    }
	  }]);
	  return ListGroup;
	}(_MaterialComponent10.default);

	exports.ListGroup = ListGroup;

	var ListGroupHeader =
	/*#__PURE__*/
	function (_MaterialComponent8) {
	  (0, _inherits2.default)(ListGroupHeader, _MaterialComponent8);

	  function ListGroupHeader() {
	    var _this11;

	    (0, _classCallCheck2.default)(this, ListGroupHeader);
	    _this11 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroupHeader).apply(this, arguments));
	    _this11.componentName = 'list-group__subheader';
	    _this11.mdcProps = [];
	    return _this11;
	  }

	  (0, _createClass2.default)(ListGroupHeader, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("h3", Object.assign({}, props, {
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return ListGroupHeader;
	}(_MaterialComponent10.default);

	exports.ListGroupHeader = ListGroupHeader;

	var List =
	/*#__PURE__*/
	function (_MaterialComponent9) {
	  (0, _inherits2.default)(List, _MaterialComponent9);

	  function List() {
	    var _this12;

	    (0, _classCallCheck2.default)(this, List);
	    _this12 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).apply(this, arguments));
	    _this12.componentName = 'list';
	    _this12.mdcProps = ['dense', 'two-line', 'avatar-list'];
	    return _this12;
	  }

	  (0, _createClass2.default)(List, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      if (props.interactive) {
	        return (0, preact_module.h)("nav", Object.assign({
	          ref: this.setControlRef
	        }, props), props.children);
	      }

	      return (0, preact_module.h)("ul", Object.assign({}, props, {
	        ref: this.setControlRef
	      }), props.children);
	    }
	  }]);
	  return List;
	}(_MaterialComponent10.default);

	exports.List = List;

	var default_1 =
	/*#__PURE__*/
	function (_List) {
	  (0, _inherits2.default)(default_1, _List);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(List);

	exports.default = default_1;
	default_1.Item = ListItem;
	default_1.LinkItem = ListLinkItem;
	default_1.ItemGraphic = ListItemGraphic;
	default_1.ItemMeta = ListItemMeta;
	default_1.ItemMetaText = ListItemMetaText;
	default_1.Divider = ListDivider;
	default_1.TextContainer = ListTextContainer;
	default_1.PrimaryText = ListPrimaryText;
	default_1.SecondaryText = ListSecondaryText;
	default_1.Group = ListGroup;
	default_1.GroupHeader = ListGroupHeader;

	});

	unwrapExports(List_1);
	var List_2 = List_1.List;
	var List_3 = List_1.ListGroupHeader;
	var List_4 = List_1.ListGroup;
	var List_5 = List_1.ListSecondaryText;
	var List_6 = List_1.ListPrimaryText;
	var List_7 = List_1.ListTextContainer;
	var List_8 = List_1.ListDivider;
	var List_9 = List_1.ListItemMetaText;
	var List_10 = List_1.ListItemMeta;
	var List_11 = List_1.ListItemGraphic;
	var List_12 = List_1.ListLinkItem;
	var List_13 = List_1.ListItem;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const strings$2 = {
	  ARIA_CONTROLS: 'aria-controls',
	  INPUT_SELECTOR: '.mdc-text-field__input',
	  LABEL_SELECTOR: '.mdc-floating-label',
	  ICON_SELECTOR: '.mdc-text-field__icon',
	  OUTLINE_SELECTOR: '.mdc-notched-outline',
	  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
	};

	/** @enum {string} */
	const cssClasses$2 = {
	  ROOT: 'mdc-text-field',
	  DISABLED: 'mdc-text-field--disabled',
	  DENSE: 'mdc-text-field--dense',
	  FOCUSED: 'mdc-text-field--focused',
	  INVALID: 'mdc-text-field--invalid',
	  TEXTAREA: 'mdc-text-field--textarea',
	  OUTLINED: 'mdc-text-field--outlined',
	};

	/** @enum {number} */
	const numbers$2 = {
	  LABEL_SCALE: 0.75,
	  DENSE_LABEL_SCALE: 0.923,
	};

	// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
	// under section: `Validation-related attributes`
	const VALIDATION_ATTR_WHITELIST = [
	  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',
	];

	// Label should always float for these types as they show some UI even if value is empty.
	const ALWAYS_FLOAT_TYPES = [
	  'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',
	];

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const strings$3 = {
	  ARIA_HIDDEN: 'aria-hidden',
	  ROLE: 'role',
	};

	/** @enum {string} */
	const cssClasses$3 = {
	  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
	  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',
	};

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */


	/**
	 * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}
	 * @final
	 */
	class MDCTextFieldHelperTextFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$3;
	  }

	  /** @return enum {string} */
	  static get strings() {
	    return strings$3;
	  }

	  /**
	   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCTextFieldHelperTextAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({
	      addClass: () => {},
	      removeClass: () => {},
	      hasClass: () => {},
	      setAttr: () => {},
	      removeAttr: () => {},
	      setContent: () => {},
	    });
	  }

	  /**
	   * @param {!MDCTextFieldHelperTextAdapter} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));
	  }

	  /**
	   * Sets the content of the helper text field.
	   * @param {string} content
	   */
	  setContent(content) {
	    this.adapter_.setContent(content);
	  }

	  /** @param {boolean} isPersistent Sets the persistency of the helper text. */
	  setPersistent(isPersistent) {
	    if (isPersistent) {
	      this.adapter_.addClass(cssClasses$3.HELPER_TEXT_PERSISTENT);
	    } else {
	      this.adapter_.removeClass(cssClasses$3.HELPER_TEXT_PERSISTENT);
	    }
	  }

	  /**
	   * @param {boolean} isValidation True to make the helper text act as an
	   *   error validation message.
	   */
	  setValidation(isValidation) {
	    if (isValidation) {
	      this.adapter_.addClass(cssClasses$3.HELPER_TEXT_VALIDATION_MSG);
	    } else {
	      this.adapter_.removeClass(cssClasses$3.HELPER_TEXT_VALIDATION_MSG);
	    }
	  }

	  /** Makes the helper text visible to the screen reader. */
	  showToScreenReader() {
	    this.adapter_.removeAttr(strings$3.ARIA_HIDDEN);
	  }

	  /**
	   * Sets the validity of the helper text based on the input validity.
	   * @param {boolean} inputIsValid
	   */
	  setValidity(inputIsValid) {
	    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses$3.HELPER_TEXT_PERSISTENT);
	    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses$3.HELPER_TEXT_VALIDATION_MSG);
	    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;

	    if (validationMsgNeedsDisplay) {
	      this.adapter_.setAttr(strings$3.ROLE, 'alert');
	    } else {
	      this.adapter_.removeAttr(strings$3.ROLE);
	    }

	    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
	      this.hide_();
	    }
	  }

	  /**
	   * Hides the help text from screen readers.
	   * @private
	   */
	  hide_() {
	    this.adapter_.setAttr(strings$3.ARIA_HIDDEN, 'true');
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const strings$4 = {
	  ICON_EVENT: 'MDCTextField:icon',
	  ICON_ROLE: 'button',
	};

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */


	/**
	 * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}
	 * @final
	 */
	class MDCTextFieldIconFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get strings() {
	    return strings$4;
	  }

	  /**
	   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCTextFieldIconAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCTextFieldIconAdapter} */ ({
	      getAttr: () => {},
	      setAttr: () => {},
	      removeAttr: () => {},
	      setContent: () => {},
	      registerInteractionHandler: () => {},
	      deregisterInteractionHandler: () => {},
	      notifyIconAction: () => {},
	    });
	  }

	  /**
	   * @param {!MDCTextFieldIconAdapter} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));

	    /** @private {string?} */
	    this.savedTabIndex_ = null;

	    /** @private {function(!Event): undefined} */
	    this.interactionHandler_ = (evt) => this.handleInteraction(evt);
	  }

	  init() {
	    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');

	    ['click', 'keydown'].forEach((evtType) => {
	      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);
	    });
	  }

	  destroy() {
	    ['click', 'keydown'].forEach((evtType) => {
	      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);
	    });
	  }

	  /** @param {boolean} disabled */
	  setDisabled(disabled) {
	    if (!this.savedTabIndex_) {
	      return;
	    }

	    if (disabled) {
	      this.adapter_.setAttr('tabindex', '-1');
	      this.adapter_.removeAttr('role');
	    } else {
	      this.adapter_.setAttr('tabindex', this.savedTabIndex_);
	      this.adapter_.setAttr('role', strings$4.ICON_ROLE);
	    }
	  }

	  /** @param {string} label */
	  setAriaLabel(label) {
	    this.adapter_.setAttr('aria-label', label);
	  }

	  /** @param {string} content */
	  setContent(content) {
	    this.adapter_.setContent(content);
	  }

	  /**
	   * Handles an interaction event
	   * @param {!Event} evt
	   */
	  handleInteraction(evt) {
	    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
	      this.adapter_.notifyIconAction();
	    }
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCTextFieldAdapter>}
	 * @final
	 */
	class MDCTextFieldFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$2;
	  }

	  /** @return enum {string} */
	  static get strings() {
	    return strings$2;
	  }

	  /** @return enum {string} */
	  static get numbers() {
	    return numbers$2;
	  }

	  /** @return {boolean} */
	  get shouldShake() {
	    return !this.isValid() && !this.isFocused_ && !!this.getValue();
	  }

	  /**
	   * @return {boolean}
	   * @private
	   */
	  get shouldAlwaysFloat_() {
	    const type = this.getNativeInput_().type;
	    return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;
	  }

	  /** @return {boolean} */
	  get shouldFloat() {
	    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();
	  }

	  /**
	   * {@see MDCTextFieldAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCTextFieldAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCTextFieldAdapter} */ ({
	      addClass: () => {},
	      removeClass: () => {},
	      hasClass: () => {},
	      registerTextFieldInteractionHandler: () => {},
	      deregisterTextFieldInteractionHandler: () => {},
	      registerInputInteractionHandler: () => {},
	      deregisterInputInteractionHandler: () => {},
	      registerValidationAttributeChangeHandler: () => {},
	      deregisterValidationAttributeChangeHandler: () => {},
	      getNativeInput: () => {},
	      isFocused: () => {},
	      isRtl: () => {},
	      activateLineRipple: () => {},
	      deactivateLineRipple: () => {},
	      setLineRippleTransformOrigin: () => {},
	      shakeLabel: () => {},
	      floatLabel: () => {},
	      hasLabel: () => {},
	      getLabelWidth: () => {},
	      hasOutline: () => {},
	      notchOutline: () => {},
	      closeOutline: () => {},
	    });
	  }

	  /**
	   * @param {!MDCTextFieldAdapter} adapter
	   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
	   */
	  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {
	    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));

	    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */
	    this.helperText_ = foundationMap.helperText;
	    /** @type {!MDCTextFieldIconFoundation|undefined} */
	    this.icon_ = foundationMap.icon;

	    /** @private {boolean} */
	    this.isFocused_ = false;
	    /** @private {boolean} */
	    this.receivedUserInput_ = false;
	    /** @private {boolean} */
	    this.useCustomValidityChecking_ = false;
	    /** @private {boolean} */
	    this.isValid_ = true;

	    /** @private {boolean} */
	    this.useNativeValidation_ = true;

	    /** @private {function(): undefined} */
	    this.inputFocusHandler_ = () => this.activateFocus();
	    /** @private {function(): undefined} */
	    this.inputBlurHandler_ = () => this.deactivateFocus();
	    /** @private {function(): undefined} */
	    this.inputInputHandler_ = () => this.autoCompleteFocus();
	    /** @private {function(!Event): undefined} */
	    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);
	    /** @private {function(!Event): undefined} */
	    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();
	    /** @private {function(!Array): undefined} */
	    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);

	    /** @private {!MutationObserver} */
	    this.validationObserver_;
	  }

	  init() {
	    if (this.adapter_.isFocused()) {
	      this.inputFocusHandler_();
	    } else if (this.adapter_.hasLabel() && this.shouldFloat) {
	      this.notchOutline(true);
	      this.adapter_.floatLabel(true);
	    }

	    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
	    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
	    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
	    ['mousedown', 'touchstart'].forEach((evtType) => {
	      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);
	    });
	    ['click', 'keydown'].forEach((evtType) => {
	      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);
	    });
	    this.validationObserver_ =
	        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
	  }

	  destroy() {
	    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
	    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
	    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
	    ['mousedown', 'touchstart'].forEach((evtType) => {
	      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);
	    });
	    ['click', 'keydown'].forEach((evtType) => {
	      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);
	    });
	    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
	  }

	  /**
	   * Handles user interactions with the Text Field.
	   */
	  handleTextFieldInteraction() {
	    if (this.adapter_.getNativeInput().disabled) {
	      return;
	    }
	    this.receivedUserInput_ = true;
	  }

	  /**
	   * Handles validation attribute changes
	   * @param {!Array<string>} attributesList
	   */
	  handleValidationAttributeChange(attributesList) {
	    attributesList.some((attributeName) => {
	      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {
	        this.styleValidity_(true);
	        return true;
	      }
	    });
	  }

	  /**
	   * Opens/closes the notched outline.
	   * @param {boolean} openNotch
	   */
	  notchOutline(openNotch) {
	    if (!this.adapter_.hasOutline()) {
	      return;
	    }

	    if (openNotch) {
	      const isDense = this.adapter_.hasClass(cssClasses$2.DENSE);
	      const labelScale = isDense ? numbers$2.DENSE_LABEL_SCALE : numbers$2.LABEL_SCALE;
	      const labelWidth = this.adapter_.getLabelWidth() * labelScale;
	      const isRtl = this.adapter_.isRtl();
	      this.adapter_.notchOutline(labelWidth, isRtl);
	    } else {
	      this.adapter_.closeOutline();
	    }
	  }

	  /**
	   * Activates the text field focus state.
	   */
	  activateFocus() {
	    this.isFocused_ = true;
	    this.styleFocused_(this.isFocused_);
	    this.adapter_.activateLineRipple();
	    if (this.adapter_.hasLabel()) {
	      this.notchOutline(this.shouldFloat);
	      this.adapter_.floatLabel(this.shouldFloat);
	      this.adapter_.shakeLabel(this.shouldShake);
	    }
	    if (this.helperText_) {
	      this.helperText_.showToScreenReader();
	    }
	  }

	  /**
	   * Sets the line ripple's transform origin, so that the line ripple activate
	   * animation will animate out from the user's click location.
	   * @param {!Event} evt
	   */
	  setTransformOrigin(evt) {
	    const targetClientRect = evt.target.getBoundingClientRect();
	    const evtCoords = {x: evt.clientX, y: evt.clientY};
	    const normalizedX = evtCoords.x - targetClientRect.left;
	    this.adapter_.setLineRippleTransformOrigin(normalizedX);
	  }

	  /**
	   * Activates the Text Field's focus state in cases when the input value
	   * changes without user input (e.g. programatically).
	   */
	  autoCompleteFocus() {
	    if (!this.receivedUserInput_) {
	      this.activateFocus();
	    }
	  }

	  /**
	   * Deactivates the Text Field's focus state.
	   */
	  deactivateFocus() {
	    this.isFocused_ = false;
	    this.adapter_.deactivateLineRipple();
	    const isValid = this.isValid();
	    this.styleValidity_(isValid);
	    this.styleFocused_(this.isFocused_);
	    if (this.adapter_.hasLabel()) {
	      this.notchOutline(this.shouldFloat);
	      this.adapter_.floatLabel(this.shouldFloat);
	      this.adapter_.shakeLabel(this.shouldShake);
	    }
	    if (!this.shouldFloat) {
	      this.receivedUserInput_ = false;
	    }
	  }

	  /**
	   * @return {string} The value of the input Element.
	   */
	  getValue() {
	    return this.getNativeInput_().value;
	  }

	  /**
	   * @param {string} value The value to set on the input Element.
	   */
	  setValue(value) {
	    this.getNativeInput_().value = value;
	    const isValid = this.isValid();
	    this.styleValidity_(isValid);
	    if (this.adapter_.hasLabel()) {
	      this.notchOutline(this.shouldFloat);
	      this.adapter_.floatLabel(this.shouldFloat);
	      this.adapter_.shakeLabel(this.shouldShake);
	    }
	  }

	  /**
	   * @return {boolean} If a custom validity is set, returns that value.
	   *     Otherwise, returns the result of native validity checks.
	   */
	  isValid() {
	    return this.useNativeValidation_
	      ? this.isNativeInputValid_() : this.isValid_;
	  }

	  /**
	   * @param {boolean} isValid Sets the validity state of the Text Field.
	   */
	  setValid(isValid) {
	    this.isValid_ = isValid;
	    this.styleValidity_(isValid);

	    const shouldShake = !isValid && !this.isFocused_;
	    if (this.adapter_.hasLabel()) {
	      this.adapter_.shakeLabel(shouldShake);
	    }
	  }

	  /**
	   * Enables or disables the use of native validation. Use this for custom validation.
	   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
	   */
	  setUseNativeValidation(useNativeValidation) {
	    this.useNativeValidation_ = useNativeValidation;
	  }

	  /**
	   * @return {boolean} True if the Text Field is disabled.
	   */
	  isDisabled() {
	    return this.getNativeInput_().disabled;
	  }

	  /**
	   * @param {boolean} disabled Sets the text-field disabled or enabled.
	   */
	  setDisabled(disabled) {
	    this.getNativeInput_().disabled = disabled;
	    this.styleDisabled_(disabled);
	  }

	  /**
	   * @param {string} content Sets the content of the helper text.
	   */
	  setHelperTextContent(content) {
	    if (this.helperText_) {
	      this.helperText_.setContent(content);
	    }
	  }

	  /**
	   * Sets the aria label of the icon.
	   * @param {string} label
	   */
	  setIconAriaLabel(label) {
	    if (this.icon_) {
	      this.icon_.setAriaLabel(label);
	    }
	  }

	  /**
	   * Sets the text content of the icon.
	   * @param {string} content
	   */
	  setIconContent(content) {
	    if (this.icon_) {
	      this.icon_.setContent(content);
	    }
	  }

	  /**
	   * @return {boolean} True if the Text Field input fails in converting the
	   *     user-supplied value.
	   * @private
	   */
	  isBadInput_() {
	    return this.getNativeInput_().validity.badInput;
	  }

	  /**
	   * @return {boolean} The result of native validity checking
	   *     (ValidityState.valid).
	   */
	  isNativeInputValid_() {
	    return this.getNativeInput_().validity.valid;
	  }

	  /**
	   * Styles the component based on the validity state.
	   * @param {boolean} isValid
	   * @private
	   */
	  styleValidity_(isValid) {
	    const {INVALID} = MDCTextFieldFoundation.cssClasses;
	    if (isValid) {
	      this.adapter_.removeClass(INVALID);
	    } else {
	      this.adapter_.addClass(INVALID);
	    }
	    if (this.helperText_) {
	      this.helperText_.setValidity(isValid);
	    }
	  }

	  /**
	   * Styles the component based on the focused state.
	   * @param {boolean} isFocused
	   * @private
	   */
	  styleFocused_(isFocused) {
	    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;
	    if (isFocused) {
	      this.adapter_.addClass(FOCUSED);
	    } else {
	      this.adapter_.removeClass(FOCUSED);
	    }
	  }

	  /**
	   * Styles the component based on the disabled state.
	   * @param {boolean} isDisabled
	   * @private
	   */
	  styleDisabled_(isDisabled) {
	    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;
	    if (isDisabled) {
	      this.adapter_.addClass(DISABLED);
	      this.adapter_.removeClass(INVALID);
	    } else {
	      this.adapter_.removeClass(DISABLED);
	    }
	    if (this.icon_) {
	      this.icon_.setDisabled(isDisabled);
	    }
	  }

	  /**
	   * @return {!Element|!NativeInputType} The native text input from the
	   * host environment, or a dummy if none exists.
	   * @private
	   */
	  getNativeInput_() {
	    return this.adapter_.getNativeInput() ||
	    /** @type {!NativeInputType} */ ({
	      value: '',
	      disabled: false,
	      validity: {
	        badInput: false,
	        valid: true,
	      },
	    });
	  }
	}

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const cssClasses$4 = {
	  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
	  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',
	};

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */


	/**
	 * @extends {MDCFoundation<!MDCLineRippleAdapter>}
	 * @final
	 */
	class MDCLineRippleFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$4;
	  }

	  /**
	   * {@see MDCLineRippleAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCLineRippleAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCLineRippleAdapter} */ ({
	      addClass: () => {},
	      removeClass: () => {},
	      hasClass: () => {},
	      setStyle: () => {},
	      registerEventHandler: () => {},
	      deregisterEventHandler: () => {},
	    });
	  }

	  /**
	   * @param {!MDCLineRippleAdapter=} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));

	    /** @private {function(!Event): undefined} */
	    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);
	  }

	  init() {
	    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
	  }

	  destroy() {
	    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
	  }

	  /**
	   * Activates the line ripple
	   */
	  activate() {
	    this.adapter_.removeClass(cssClasses$4.LINE_RIPPLE_DEACTIVATING);
	    this.adapter_.addClass(cssClasses$4.LINE_RIPPLE_ACTIVE);
	  }

	  /**
	   * Sets the center of the ripple animation to the given X coordinate.
	   * @param {number} xCoordinate
	   */
	  setRippleCenter(xCoordinate) {
	    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);
	  }

	  /**
	   * Deactivates the line ripple
	   */
	  deactivate() {
	    this.adapter_.addClass(cssClasses$4.LINE_RIPPLE_DEACTIVATING);
	  }

	  /**
	   * Handles a transition end event
	   * @param {!Event} evt
	   */
	  handleTransitionEnd(evt) {
	    // Wait for the line ripple to be either transparent or opaque
	    // before emitting the animation end event
	    const isDeactivating = this.adapter_.hasClass(cssClasses$4.LINE_RIPPLE_DEACTIVATING);

	    if (evt.propertyName === 'opacity') {
	      if (isDeactivating) {
	        this.adapter_.removeClass(cssClasses$4.LINE_RIPPLE_ACTIVE);
	        this.adapter_.removeClass(cssClasses$4.LINE_RIPPLE_DEACTIVATING);
	      }
	    }
	  }
	}

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCLineRippleFoundation>}
	 * @final
	 */
	class MDCLineRipple extends MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCLineRipple}
	   */
	  static attachTo(root) {
	    return new MDCLineRipple(root);
	  }

	  /**
	   * Activates the line ripple
	   */
	  activate() {
	    this.foundation_.activate();
	  }

	  /**
	   * Deactivates the line ripple
	   */
	  deactivate() {
	    this.foundation_.deactivate();
	  }

	  /**
	   * Sets the transform origin given a user's click location. The `rippleCenter` is the
	   * x-coordinate of the middle of the ripple.
	   * @param {number} xCoordinate
	   */
	  setRippleCenter(xCoordinate) {
	    this.foundation_.setRippleCenter(xCoordinate);
	  }

	  /**
	   * @return {!MDCLineRippleFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCLineRippleFoundation(/** @type {!MDCLineRippleAdapter} */ (Object.assign({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      hasClass: (className) => this.root_.classList.contains(className),
	      setStyle: (propertyName, value) => this.root_.style[propertyName] = value,
	      registerEventHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
	      deregisterEventHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
	    })));
	  }
	}

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}
	 * @final
	 */
	class MDCTextFieldHelperText extends MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCTextFieldHelperText}
	   */
	  static attachTo(root) {
	    return new MDCTextFieldHelperText(root);
	  }

	  /**
	   * @return {!MDCTextFieldHelperTextFoundation}
	   */
	  get foundation() {
	    return this.foundation_;
	  }

	  /**
	   * @return {!MDCTextFieldHelperTextFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCTextFieldHelperTextFoundation(/** @type {!MDCTextFieldHelperTextAdapter} */ (Object.assign({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      hasClass: (className) => this.root_.classList.contains(className),
	      setAttr: (attr, value) => this.root_.setAttribute(attr, value),
	      removeAttr: (attr) => this.root_.removeAttribute(attr),
	      setContent: (content) => {
	        this.root_.textContent = content;
	      },
	    })));
	  }
	}

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCTextFieldIconFoundation>}
	 * @final
	 */
	class MDCTextFieldIcon extends MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCTextFieldIcon}
	   */
	  static attachTo(root) {
	    return new MDCTextFieldIcon(root);
	  }

	  /**
	   * @return {!MDCTextFieldIconFoundation}
	   */
	  get foundation() {
	    return this.foundation_;
	  }

	  /**
	   * @return {!MDCTextFieldIconFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCTextFieldIconFoundation(/** @type {!MDCTextFieldIconAdapter} */ (Object.assign({
	      getAttr: (attr) => this.root_.getAttribute(attr),
	      setAttr: (attr, value) => this.root_.setAttribute(attr, value),
	      removeAttr: (attr) => this.root_.removeAttribute(attr),
	      setContent: (content) => {
	        this.root_.textContent = content;
	      },
	      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
	      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
	      notifyIconAction: () => this.emit(
	        MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */),
	    })));
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const cssClasses$5 = {
	  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
	  LABEL_SHAKE: 'mdc-floating-label--shake',
	};

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
	 * @final
	 */
	class MDCFloatingLabelFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$5;
	  }

	  /**
	   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCFloatingLabelAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCFloatingLabelAdapter} */ ({
	      addClass: () => {},
	      removeClass: () => {},
	      getWidth: () => {},
	      registerInteractionHandler: () => {},
	      deregisterInteractionHandler: () => {},
	    });
	  }

	  /**
	   * @param {!MDCFloatingLabelAdapter} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));

	    /** @private {function(!Event): undefined} */
	    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();
	  }

	  init() {
	    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
	  }

	  destroy() {
	    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
	  }

	  /**
	   * Returns the width of the label element.
	   * @return {number}
	   */
	  getWidth() {
	    return this.adapter_.getWidth();
	  }

	  /**
	   * Styles the label to produce the label shake for errors.
	   * @param {boolean} shouldShake adds shake class if true,
	   * otherwise removes shake class.
	   */
	  shake(shouldShake) {
	    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;
	    if (shouldShake) {
	      this.adapter_.addClass(LABEL_SHAKE);
	    } else {
	      this.adapter_.removeClass(LABEL_SHAKE);
	    }
	  }

	  /**
	   * Styles the label to float or dock.
	   * @param {boolean} shouldFloat adds float class if true, otherwise remove
	   * float and shake class to dock label.
	   */
	  float(shouldFloat) {
	    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;
	    if (shouldFloat) {
	      this.adapter_.addClass(LABEL_FLOAT_ABOVE);
	    } else {
	      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
	      this.adapter_.removeClass(LABEL_SHAKE);
	    }
	  }

	  /**
	   * Handles an interaction event on the root element.
	   */
	  handleShakeAnimationEnd_() {
	    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;
	    this.adapter_.removeClass(LABEL_SHAKE);
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCFloatingLabelFoundation>}
	 * @final
	 */
	class MDCFloatingLabel extends MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCFloatingLabel}
	   */
	  static attachTo(root) {
	    return new MDCFloatingLabel(root);
	  }

	  /**
	   * Styles the label to produce the label shake for errors.
	   * @param {boolean} shouldShake styles the label to shake by adding shake class
	   * if true, otherwise will stop shaking by removing shake class.
	   */
	  shake(shouldShake) {
	    this.foundation_.shake(shouldShake);
	  }

	  /**
	   * Styles label to float/dock.
	   * @param {boolean} shouldFloat styles the label to float by adding float class
	   * if true, otherwise docks the label by removing the float class.
	   */
	  float(shouldFloat) {
	    this.foundation_.float(shouldFloat);
	  }

	  /**
	   * @return {number}
	   */
	  getWidth() {
	    return this.foundation_.getWidth();
	  }

	  /**
	   * @return {!MDCFloatingLabelFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCFloatingLabelFoundation({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      getWidth: () => this.root_.offsetWidth,
	      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
	      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
	    });
	  }
	}

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const strings$5 = {
	  PATH_SELECTOR: '.mdc-notched-outline__path',
	  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',
	};

	/** @enum {string} */
	const cssClasses$6 = {
	  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',
	};

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
	 * @final
	 */
	class MDCNotchedOutlineFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get strings() {
	    return strings$5;
	  }

	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$6;
	  }

	  /**
	   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCNotchedOutlineAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCNotchedOutlineAdapter} */ ({
	      getWidth: () => {},
	      getHeight: () => {},
	      addClass: () => {},
	      removeClass: () => {},
	      setOutlinePathAttr: () => {},
	      getIdleOutlineStyleValue: () => {},
	    });
	  }

	  /**
	   * @param {!MDCNotchedOutlineAdapter} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));
	  }

	  /**
	   * Adds the outline notched selector and updates the notch width
	   * calculated based off of notchWidth and isRtl.
	   * @param {number} notchWidth
	   * @param {boolean=} isRtl
	   */
	  notch(notchWidth, isRtl = false) {
	    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;
	    this.adapter_.addClass(OUTLINE_NOTCHED);
	    this.updateSvgPath_(notchWidth, isRtl);
	  }

	  /**
	   * Removes notched outline selector to close the notch in the outline.
	   */
	  closeNotch() {
	    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;
	    this.adapter_.removeClass(OUTLINE_NOTCHED);
	  }

	  /**
	   * Updates the SVG path of the focus outline element based on the notchWidth
	   * and the RTL context.
	   * @param {number} notchWidth
	   * @param {boolean=} isRtl
	   * @private
	   */
	  updateSvgPath_(notchWidth, isRtl) {
	    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.
	    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||
	        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');
	    const radius = parseFloat(radiusStyleValue);
	    const width = this.adapter_.getWidth();
	    const height = this.adapter_.getHeight();
	    const cornerWidth = radius + 1.2;
	    const leadingStrokeLength = Math.abs(12 - cornerWidth);

	    // If the notchWidth is 0, the the notched outline doesn't need to add padding.
	    let paddedNotchWidth = 0;
	    if (notchWidth > 0) {
	      paddedNotchWidth = notchWidth + 8;
	    }

	    // The right, bottom, and left sides of the outline follow the same SVG path.
	    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius
	      + 'v' + (height - (2 * cornerWidth))
	      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius
	      + 'h' + (-width + (2 * cornerWidth))
	      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius
	      + 'v' + (-height + (2 * cornerWidth))
	      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;

	    let path;
	    if (!isRtl) {
	      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1
	        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)
	        + pathMiddle
	        + 'h' + leadingStrokeLength;
	    } else {
	      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1
	        + 'h' + leadingStrokeLength
	        + pathMiddle
	        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);
	    }

	    this.adapter_.setOutlinePathAttr(path);
	  }
	}

	/**
	 * @license
	 * Copyright 2017 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}
	 * @final
	 */
	class MDCNotchedOutline extends MDCComponent {
	  /**
	   * @param {!Element} root
	   * @return {!MDCNotchedOutline}
	   */
	  static attachTo(root) {
	    return new MDCNotchedOutline(root);
	  }

	  /**
	    * Updates outline selectors and SVG path to open notch.
	    * @param {number} notchWidth The notch width in the outline.
	    * @param {boolean=} isRtl Determines if outline is rtl. If rtl is true, notch
	    * will be right justified in outline path, otherwise left justified.
	    */
	  notch(notchWidth, isRtl) {
	    this.foundation_.notch(notchWidth, isRtl);
	  }

	  /**
	   * Updates the outline selectors to close notch and return it to idle state.
	   */
	  closeNotch() {
	    this.foundation_.closeNotch();
	  }

	  /**
	   * @return {!MDCNotchedOutlineFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCNotchedOutlineFoundation({
	      getWidth: () => this.root_.offsetWidth,
	      getHeight: () => this.root_.offsetHeight,
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      setOutlinePathAttr: (value) => {
	        const path = this.root_.querySelector(strings$5.PATH_SELECTOR);
	        path.setAttribute('d', value);
	      },
	      getIdleOutlineStyleValue: (propertyName) => {
	        const idleOutlineElement = this.root_.parentNode.querySelector(strings$5.IDLE_OUTLINE_SELECTOR);
	        return window.getComputedStyle(idleOutlineElement).getPropertyValue(propertyName);
	      },
	    });
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */
	/* eslint-enable no-unused-vars */

	/**
	 * @extends {MDCComponent<!MDCTextFieldFoundation>}
	 * @final
	 */
	class MDCTextField extends MDCComponent {
	  /**
	   * @param {...?} args
	   */
	  constructor(...args) {
	    super(...args);
	    /** @private {?Element} */
	    this.input_;
	    /** @type {?MDCRipple} */
	    this.ripple;
	    /** @private {?MDCLineRipple} */
	    this.lineRipple_;
	    /** @private {?MDCTextFieldHelperText} */
	    this.helperText_;
	    /** @private {?MDCTextFieldIcon} */
	    this.icon_;
	    /** @private {?MDCFloatingLabel} */
	    this.label_;
	    /** @private {?MDCNotchedOutline} */
	    this.outline_;
	  }

	  /**
	   * @param {!Element} root
	   * @return {!MDCTextField}
	   */
	  static attachTo(root) {
	    return new MDCTextField(root);
	  }

	  /**
	   * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which
	   * creates a new MDCRipple.
	   * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which
	   * creates a new MDCLineRipple.
	   * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which
	   * creates a new MDCTextFieldHelperText.
	   * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which
	   * creates a new MDCTextFieldIcon.
	   * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which
	   * creates a new MDCFloatingLabel.
	   * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which
	   * creates a new MDCNotchedOutline.
	   */
	  initialize(
	    rippleFactory = (el, foundation) => new MDCRipple(el, foundation),
	    lineRippleFactory = (el) => new MDCLineRipple(el),
	    helperTextFactory = (el) => new MDCTextFieldHelperText(el),
	    iconFactory = (el) => new MDCTextFieldIcon(el),
	    labelFactory = (el) => new MDCFloatingLabel(el),
	    outlineFactory = (el) => new MDCNotchedOutline(el)) {
	    this.input_ = this.root_.querySelector(strings$2.INPUT_SELECTOR);
	    const labelElement = this.root_.querySelector(strings$2.LABEL_SELECTOR);
	    if (labelElement) {
	      this.label_ = labelFactory(labelElement);
	    }
	    const lineRippleElement = this.root_.querySelector(strings$2.LINE_RIPPLE_SELECTOR);
	    if (lineRippleElement) {
	      this.lineRipple_ = lineRippleFactory(lineRippleElement);
	    }
	    const outlineElement = this.root_.querySelector(strings$2.OUTLINE_SELECTOR);
	    if (outlineElement) {
	      this.outline_ = outlineFactory(outlineElement);
	    }
	    if (this.input_.hasAttribute(strings$2.ARIA_CONTROLS)) {
	      const helperTextElement = document.getElementById(this.input_.getAttribute(strings$2.ARIA_CONTROLS));
	      if (helperTextElement) {
	        this.helperText_ = helperTextFactory(helperTextElement);
	      }
	    }
	    const iconElement = this.root_.querySelector(strings$2.ICON_SELECTOR);
	    if (iconElement) {
	      this.icon_ = iconFactory(iconElement);
	    }

	    this.ripple = null;
	    if (!this.root_.classList.contains(cssClasses$2.TEXTAREA) && !this.root_.classList.contains(cssClasses$2.OUTLINED)) {
	      const MATCHES = getMatchesProperty(HTMLElement.prototype);
	      const adapter =
	        Object.assign(MDCRipple.createAdapter(/** @type {!RippleCapableSurface} */ (this)), {
	          isSurfaceActive: () => this.input_[MATCHES](':active'),
	          registerInteractionHandler: (type, handler) => this.input_.addEventListener(type, handler),
	          deregisterInteractionHandler: (type, handler) => this.input_.removeEventListener(type, handler),
	        });
	      const foundation = new MDCRippleFoundation(adapter);
	      this.ripple = rippleFactory(this.root_, foundation);
	    }
	  }

	  destroy() {
	    if (this.ripple) {
	      this.ripple.destroy();
	    }
	    if (this.lineRipple_) {
	      this.lineRipple_.destroy();
	    }
	    if (this.helperText_) {
	      this.helperText_.destroy();
	    }
	    if (this.icon_) {
	      this.icon_.destroy();
	    }
	    if (this.label_) {
	      this.label_.destroy();
	    }
	    if (this.outline_) {
	      this.outline_.destroy();
	    }
	    super.destroy();
	  }

	  /**
	   * Initiliazes the Text Field's internal state based on the environment's
	   * state.
	   */
	  initialSyncWithDom() {
	    this.disabled = this.input_.disabled;
	  }

	  /**
	   * @return {string} The value of the input.
	   */
	  get value() {
	    return this.foundation_.getValue();
	  }

	  /**
	   * @param {string} value The value to set on the input.
	   */
	  set value(value) {
	    this.foundation_.setValue(value);
	  }

	  /**
	   * @return {boolean} True if the Text Field is disabled.
	   */
	  get disabled() {
	    return this.foundation_.isDisabled();
	  }

	  /**
	   * @param {boolean} disabled Sets the Text Field disabled or enabled.
	   */
	  set disabled(disabled) {
	    this.foundation_.setDisabled(disabled);
	  }

	  /**
	   * @return {boolean} valid True if the Text Field is valid.
	   */
	  get valid() {
	    return this.foundation_.isValid();
	  }

	  /**
	   * @param {boolean} valid Sets the Text Field valid or invalid.
	   */
	  set valid(valid) {
	    this.foundation_.setValid(valid);
	  }

	  /**
	   * @return {boolean} True if the Text Field is required.
	   */
	  get required() {
	    return this.input_.required;
	  }

	  /**
	   * @param {boolean} required Sets the Text Field to required.
	   */
	  set required(required) {
	    this.input_.required = required;
	  }

	  /**
	   * @return {string} The input element's validation pattern.
	   */
	  get pattern() {
	    return this.input_.pattern;
	  }

	  /**
	   * @param {string} pattern Sets the input element's validation pattern.
	   */
	  set pattern(pattern) {
	    this.input_.pattern = pattern;
	  }

	  /**
	   * @return {number} The input element's minLength.
	   */
	  get minLength() {
	    return this.input_.minLength;
	  }

	  /**
	   * @param {number} minLength Sets the input element's minLength.
	   */
	  set minLength(minLength) {
	    this.input_.minLength = minLength;
	  }

	  /**
	   * @return {number} The input element's maxLength.
	   */
	  get maxLength() {
	    return this.input_.maxLength;
	  }

	  /**
	   * @param {number} maxLength Sets the input element's maxLength.
	   */
	  set maxLength(maxLength) {
	    // Chrome throws exception if maxLength is set < 0
	    if (maxLength < 0) {
	      this.input_.removeAttribute('maxLength');
	    } else {
	      this.input_.maxLength = maxLength;
	    }
	  }

	  /**
	   * @return {string} The input element's min.
	   */
	  get min() {
	    return this.input_.min;
	  }

	  /**
	   * @param {string} min Sets the input element's min.
	   */
	  set min(min) {
	    this.input_.min = min;
	  }

	  /**
	   * @return {string} The input element's max.
	   */
	  get max() {
	    return this.input_.max;
	  }

	  /**
	   * @param {string} max Sets the input element's max.
	   */
	  set max(max) {
	    this.input_.max = max;
	  }

	  /**
	   * @return {string} The input element's step.
	   */
	  get step() {
	    return this.input_.step;
	  }

	  /**
	   * @param {string} step Sets the input element's step.
	   */
	  set step(step) {
	    this.input_.step = step;
	  }

	  /**
	   * Sets the helper text element content.
	   * @param {string} content
	   */
	  set helperTextContent(content) {
	    this.foundation_.setHelperTextContent(content);
	  }

	  /**
	   * Sets the aria label of the icon.
	   * @param {string} label
	   */
	  set iconAriaLabel(label) {
	    this.foundation_.setIconAriaLabel(label);
	  }

	  /**
	   * Sets the text content of the icon.
	   * @param {string} content
	   */
	  set iconContent(content) {
	    this.foundation_.setIconContent(content);
	  }

	  /**
	   * Enables or disables the use of native validation. Use this for custom validation.
	   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
	   */
	  set useNativeValidation(useNativeValidation) {
	    this.foundation_.setUseNativeValidation(useNativeValidation);
	  }

	  /**
	   * Recomputes the outline SVG path for the outline element.
	   */
	  layout() {
	    const openNotch = this.foundation_.shouldFloat;
	    this.foundation_.notchOutline(openNotch);
	  }

	  /**
	   * @return {!MDCTextFieldFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCTextFieldFoundation(
	      /** @type {!MDCTextFieldAdapter} */ (Object.assign({
	        addClass: (className) => this.root_.classList.add(className),
	        removeClass: (className) => this.root_.classList.remove(className),
	        hasClass: (className) => this.root_.classList.contains(className),
	        registerTextFieldInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
	        deregisterTextFieldInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
	        registerValidationAttributeChangeHandler: (handler) => {
	          const getAttributesList = (mutationsList) => mutationsList.map((mutation) => mutation.attributeName);
	          const observer = new MutationObserver((mutationsList) => handler(getAttributesList(mutationsList)));
	          const targetNode = this.root_.querySelector(strings$2.INPUT_SELECTOR);
	          const config = {attributes: true};
	          observer.observe(targetNode, config);
	          return observer;
	        },
	        deregisterValidationAttributeChangeHandler: (observer) => observer.disconnect(),
	        isFocused: () => {
	          return document.activeElement === this.root_.querySelector(strings$2.INPUT_SELECTOR);
	        },
	        isRtl: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',
	      },
	      this.getInputAdapterMethods_(),
	      this.getLabelAdapterMethods_(),
	      this.getLineRippleAdapterMethods_(),
	      this.getOutlineAdapterMethods_())),
	      this.getFoundationMap_());
	  }

	  /**
	   * @return {!{
	   *   shakeLabel: function(boolean): undefined,
	   *   floatLabel: function(boolean): undefined,
	   *   hasLabel: function(): boolean,
	   *   getLabelWidth: function(): number,
	   * }}
	   */
	  getLabelAdapterMethods_() {
	    return {
	      shakeLabel: (shouldShake) => this.label_.shake(shouldShake),
	      floatLabel: (shouldFloat) => this.label_.float(shouldFloat),
	      hasLabel: () => !!this.label_,
	      getLabelWidth: () => this.label_.getWidth(),
	    };
	  }

	  /**
	   * @return {!{
	   *   activateLineRipple: function(): undefined,
	   *   deactivateLineRipple: function(): undefined,
	   *   setLineRippleTransformOrigin: function(number): undefined,
	   * }}
	   */
	  getLineRippleAdapterMethods_() {
	    return {
	      activateLineRipple: () => {
	        if (this.lineRipple_) {
	          this.lineRipple_.activate();
	        }
	      },
	      deactivateLineRipple: () => {
	        if (this.lineRipple_) {
	          this.lineRipple_.deactivate();
	        }
	      },
	      setLineRippleTransformOrigin: (normalizedX) => {
	        if (this.lineRipple_) {
	          this.lineRipple_.setRippleCenter(normalizedX);
	        }
	      },
	    };
	  }

	  /**
	   * @return {!{
	   *   notchOutline: function(number, boolean): undefined,
	   *   hasOutline: function(): boolean,
	   * }}
	   */
	  getOutlineAdapterMethods_() {
	    return {
	      notchOutline: (labelWidth, isRtl) => this.outline_.notch(labelWidth, isRtl),
	      closeOutline: () => this.outline_.closeNotch(),
	      hasOutline: () => !!this.outline_,
	    };
	  }

	  /**
	   * @return {!{
	   *   registerInputInteractionHandler: function(string, function()): undefined,
	   *   deregisterInputInteractionHandler: function(string, function()): undefined,
	   *   getNativeInput: function(): ?Element,
	   * }}
	   */
	  getInputAdapterMethods_() {
	    return {
	      registerInputInteractionHandler: (evtType, handler) => this.input_.addEventListener(evtType, handler),
	      deregisterInputInteractionHandler: (evtType, handler) => this.input_.removeEventListener(evtType, handler),
	      getNativeInput: () => this.input_,
	    };
	  }

	  /**
	   * Returns a map of all subcomponents to subfoundations.
	   * @return {!FoundationMapType}
	   */
	  getFoundationMap_() {
	    return {
	      helperText: this.helperText_ ? this.helperText_.foundation : undefined,
	      icon: this.icon_ ? this.icon_.foundation : undefined,
	    };
	  }
	}

	var textfield = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCTextField: MDCTextField,
		MDCTextFieldFoundation: MDCTextFieldFoundation,
		MDCTextFieldHelperText: MDCTextFieldHelperText,
		MDCTextFieldHelperTextFoundation: MDCTextFieldHelperTextFoundation,
		MDCTextFieldIcon: MDCTextFieldIcon,
		MDCTextFieldIconFoundation: MDCTextFieldIconFoundation
	});

	var TextField_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.TextField = exports.TextFieldInput = exports.Label = exports.HelperText = void 0;

	var _get2 = interopRequireDefault(get$1);

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);





	var _MaterialComponent4 = interopRequireDefault(MaterialComponent_1);

	var _Icon = interopRequireDefault(Icon_1);

	var __rest =  function (s, e) {
	  var t = {};

	  for (var p in s) {
	    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
	  }

	  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
	  }
	  return t;
	};

	var HelperText =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(HelperText, _MaterialComponent);

	  function HelperText() {
	    var _this;

	    (0, _classCallCheck2.default)(this, HelperText);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HelperText).apply(this, arguments));
	    _this.componentName = 'text-field-helper-text';
	    _this.mdcProps = ['persistent', 'validation-msg'];
	    return _this;
	  }

	  (0, _createClass2.default)(HelperText, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("p", Object.assign({}, props, {
	        "aria-hidden": "true"
	      }), props.children);
	    }
	  }]);
	  return HelperText;
	}(_MaterialComponent4.default);

	exports.HelperText = HelperText;

	var Label =
	/*#__PURE__*/
	function (_MaterialComponent2) {
	  (0, _inherits2.default)(Label, _MaterialComponent2);

	  function Label() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, Label);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Label).apply(this, arguments));
	    _this2.componentName = 'floating-label';
	    _this2.mdcProps = [];
	    return _this2;
	  }

	  (0, _createClass2.default)(Label, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("label", Object.assign({}, props), props.children);
	    }
	  }]);
	  return Label;
	}(_MaterialComponent4.default);

	exports.Label = Label;

	var TextFieldInput =
	/*#__PURE__*/
	function (_MaterialComponent3) {
	  (0, _inherits2.default)(TextFieldInput, _MaterialComponent3);

	  function TextFieldInput() {
	    var _this3;

	    (0, _classCallCheck2.default)(this, TextFieldInput);
	    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextFieldInput).apply(this, arguments));
	    _this3.state = {
	      jsComponentAttached: false
	    };
	    _this3.componentName = 'text-field';
	    _this3.mdcProps = ['fullwidth', 'textarea', 'dense', 'disabled', 'box', 'outlined'];
	    _this3.mdcNotifyProps = ['valid', 'disabled'];
	    return _this3;
	  }

	  (0, _createClass2.default)(TextFieldInput, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this4 = this;

	      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentDidMount", this).call(this);
	      this.setState({
	        jsComponentAttached: true
	      }, function () {
	        if (_this4.control) {
	          _this4.MDComponent = new textfield.MDCTextField(_this4.control);

	          if (_this4.props.onInit) {
	            _this4.props.onInit(_this4.MDComponent);
	          }

	          if (_this4.props.value) {
	            _this4.MDComponent.value = _this4.props.value;
	          }
	        }

	        _this4.afterComponentDidMount();
	      });
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentWillReceiveProps", this).call(this, nextProps);

	      if (this.MDComponent && nextProps.value && this.props.value !== nextProps.value && this.MDComponent.value !== nextProps.value) {
	        this.MDComponent.value = nextProps.value;
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "getValue",
	    value: function getValue() {
	      return this.MDComponent ? this.MDComponent.value : null;
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(allprops) {
	      var className = allprops.className,
	          outerStyle = allprops.outerStyle,
	          outlined = allprops.outlined,
	          props = __rest(allprops, ["className", "outerStyle", "outlined"]);

	      className = className || '';

	      if ('leadingIcon' in props) {
	        className += ' mdc-text-field--box mdc-text-field--with-leading-icon';
	      }

	      if ('trailingIcon' in props) {
	        className += ' mdc-text-field--box mdc-text-field--with-trailing-icon';
	      }

	      if ('value' in props && this.state.jsComponentAttached) {
	        className = [className, 'mdc-text-field--upgraded'].join(' ');
	      }

	      if (props.label && props.fullwidth) {
	        console.log('Passing a "label" prop is not supported when using a "fullwidth" text field.');
	      } // noinspection RequiredAttributes


	      return (0, preact_module.h)("div", {
	        className: className,
	        ref: this.setControlRef,
	        style: outerStyle
	      }, props.leadingIcon ? (0, preact_module.h)(_Icon.default, {
	        className: "mdc-text-field__icon"
	      }, props.leadingIcon) : null, props.textarea ? (0, preact_module.h)("textarea", Object.assign({
	        className: "mdc-text-field__input"
	      }, props)) : (0, preact_module.h)("input", Object.assign({
	        type: props.type || 'text',
	        className: "mdc-text-field__input",
	        placeholder: this.state.jsComponentAttached ? undefined : props.label + this.props.required ? '*' : ''
	      }, props)), props.label && this.state.jsComponentAttached && (0, preact_module.h)(Label, {
	        for: props.id
	      }, props.label), props.trailingIcon ? (0, preact_module.h)(_Icon.default, {
	        className: "mdc-text-field__icon"
	      }, props.trailingIcon) : null, props.textarea || outlined ? null : (0, preact_module.h)("div", {
	        class: "mdc-line-ripple"
	      }), outlined ? (0, preact_module.h)("div", {
	        class: "mdc-notched-outline"
	      }, (0, preact_module.h)("svg", null, (0, preact_module.h)("path", {
	        className: "mdc-notched-outline__path"
	      }))) : null, outlined ? (0, preact_module.h)("div", {
	        className: "mdc-notched-outline__idle"
	      }) : null);
	    }
	  }, {
	    key: "buildClassName",
	    value: function buildClassName(props) {
	      var cn = (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "buildClassName", this).call(this, props);

	      if (this.MDComponent) {
	        cn += ' mdc-text-field--upgraded';
	      }

	      return cn;
	    }
	  }]);
	  return TextFieldInput;
	}(_MaterialComponent4.default);

	exports.TextFieldInput = TextFieldInput;
	TextFieldInput.defaultProps = {
	  valid: true
	};

	var TextField =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(TextField, _Component);

	  function TextField() {
	    var _this5;

	    (0, _classCallCheck2.default)(this, TextField);
	    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextField).apply(this, arguments));
	    _this5.id = TextField.uid();
	    return _this5;
	  }

	  (0, _createClass2.default)(TextField, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this.setState({
	        jsComponentAttached: true
	      });
	    }
	  }, {
	    key: "render",
	    value: function render(allprops) {
	      var _this6 = this;

	      var className = allprops.className,
	          outerStyle = allprops.outerStyle,
	          helperTextPersistent = allprops.helperTextPersistent,
	          helperTextValidationMsg = allprops.helperTextValidationMsg,
	          props = __rest(allprops, ["className", "outerStyle", "helperTextPersistent", "helperTextValidationMsg"]);

	      var showDiv = props.helperText;

	      if ((props.helperText || props.label) && !props.id) {
	        props.id = "tf-".concat(this.id);
	      } // Helper text


	      var helperTextProps = {
	        persistent: helperTextPersistent,
	        'validation-msg': helperTextValidationMsg
	      };
	      return showDiv ? (0, preact_module.h)("div", {
	        className: className,
	        style: outerStyle
	      }, (0, preact_module.h)(TextFieldInput, Object.assign({}, props, {
	        onInit: function onInit(MDComponent) {
	          _this6.MDComponent = MDComponent;
	        },
	        "aria-controls": props.helperText && "".concat(props.id, "-helper-text")
	      })), props.helperText && (0, preact_module.h)(HelperText, Object.assign({
	        id: "".concat(props.id, "-helper-text")
	      }, helperTextProps), props.helperText)) : (0, preact_module.h)(TextFieldInput, Object.assign({}, props, {
	        className: className,
	        outerStyle: outerStyle,
	        onInit: function onInit(MDComponent) {
	          _this6.MDComponent = MDComponent;
	        }
	      }));
	    }
	  }], [{
	    key: "uid",
	    value: function uid() {
	      return ++this.uidCounter;
	    }
	  }]);
	  return TextField;
	}(preact_module.Component);

	exports.TextField = TextField;
	TextField.uidCounter = 0;

	var default_1 =
	/*#__PURE__*/
	function (_TextField) {
	  (0, _inherits2.default)(default_1, _TextField);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(TextField);

	exports.default = default_1;
	default_1.HelperText = HelperText;

	});

	var TextField = unwrapExports(TextField_1);
	var TextField_2 = TextField_1.TextField;
	var TextField_3 = TextField_1.TextFieldInput;
	var TextField_4 = TextField_1.Label;
	var TextField_5 = TextField_1.HelperText;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const strings$6 = {
	  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',
	};

	/** @enum {string} */
	const cssClasses$7 = {
	  ROOT: 'mdc-radio',
	  DISABLED: 'mdc-radio--disabled',
	};

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCRadioAdapter>}
	 */
	class MDCRadioFoundation extends MDCFoundation {
	  /** @return enum {cssClasses} */
	  static get cssClasses() {
	    return cssClasses$7;
	  }

	  /** @return enum {strings} */
	  static get strings() {
	    return strings$6;
	  }

	  /** @return {!MDCRadioAdapter} */
	  static get defaultAdapter() {
	    return /** @type {!MDCRadioAdapter} */ ({
	      addClass: (/* className: string */) => {},
	      removeClass: (/* className: string */) => {},
	      getNativeControl: () => /* !MDCSelectionControlState */ {},
	    });
	  }

	  /** @return {boolean} */
	  isChecked() {
	    return this.getNativeControl_().checked;
	  }

	  /** @param {boolean} checked */
	  setChecked(checked) {
	    this.getNativeControl_().checked = checked;
	  }

	  /** @return {boolean} */
	  isDisabled() {
	    return this.getNativeControl_().disabled;
	  }

	  /** @param {boolean} disabled */
	  setDisabled(disabled) {
	    const {DISABLED} = MDCRadioFoundation.cssClasses;
	    this.getNativeControl_().disabled = disabled;
	    if (disabled) {
	      this.adapter_.addClass(DISABLED);
	    } else {
	      this.adapter_.removeClass(DISABLED);
	    }
	  }

	  /** @return {?string} */
	  getValue() {
	    return this.getNativeControl_().value;
	  }

	  /** @param {?string} value */
	  setValue(value) {
	    this.getNativeControl_().value = value;
	  }

	  /**
	   * @return {!MDCSelectionControlState}
	   * @private
	   */
	  getNativeControl_() {
	    return this.adapter_.getNativeControl() || {
	      checked: false,
	      disabled: false,
	      value: null,
	    };
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends MDCComponent<!MDCRadioFoundation>
	 * @implements {MDCSelectionControl}
	 */
	class MDCRadio extends MDCComponent {
	  static attachTo(root) {
	    return new MDCRadio(root);
	  }

	  /** @return {boolean} */
	  get checked() {
	    return this.foundation_.isChecked();
	  }

	  /** @param {boolean} checked */
	  set checked(checked) {
	    this.foundation_.setChecked(checked);
	  }

	  /** @return {boolean} */
	  get disabled() {
	    return this.foundation_.isDisabled();
	  }

	  /** @param {boolean} disabled */
	  set disabled(disabled) {
	    this.foundation_.setDisabled(disabled);
	  }

	  /** @return {?string} */
	  get value() {
	    return this.foundation_.getValue();
	  }

	  /** @param {?string} value */
	  set value(value) {
	    this.foundation_.setValue(value);
	  }

	  /** @return {!MDCRipple} */
	  get ripple() {
	    return this.ripple_;
	  }

	  constructor(...args) {
	    super(...args);

	    /** @private {!MDCRipple} */
	    this.ripple_ = this.initRipple_();
	  }

	  /**
	   * @return {!MDCRipple}
	   * @private
	   */
	  initRipple_() {
	    const adapter = Object.assign(MDCRipple.createAdapter(this), {
	      isUnbounded: () => true,
	      // Radio buttons technically go "active" whenever there is *any* keyboard interaction. This is not the
	      // UI we desire.
	      isSurfaceActive: () => false,
	      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),
	      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler),
	    });
	    const foundation = new MDCRippleFoundation(adapter);
	    return new MDCRipple(this.root_, foundation);
	  }

	  /**
	   * Returns the state of the native control element, or null if the native control element is not present.
	   * @return {?MDCSelectionControlState}
	   * @private
	   */
	  get nativeControl_() {
	    const {NATIVE_CONTROL_SELECTOR} = MDCRadioFoundation.strings;
	    const el = /** @type {?MDCSelectionControlState} */ (
	      this.root_.querySelector(NATIVE_CONTROL_SELECTOR));
	    return el;
	  }

	  destroy() {
	    this.ripple_.destroy();
	    super.destroy();
	  }

	  /** @return {!MDCRadioFoundation} */
	  getDefaultFoundation() {
	    return new MDCRadioFoundation({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      getNativeControl: () => this.root_.querySelector(MDCRadioFoundation.strings.NATIVE_CONTROL_SELECTOR),
	    });
	  }
	}

	var radio = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCRadio: MDCRadio,
		MDCRadioFoundation: MDCRadioFoundation
	});

	var Radio_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Radio = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _get2 = interopRequireDefault(get$1);

	var _inherits2 = interopRequireDefault(inherits);





	var _MaterialComponent2 = interopRequireDefault(MaterialComponent_1);

	var __rest =  function (s, e) {
	  var t = {};

	  for (var p in s) {
	    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
	  }

	  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
	  }
	  return t;
	};

	var Radio =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Radio, _MaterialComponent);

	  function Radio() {
	    var _this;

	    (0, _classCallCheck2.default)(this, Radio);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).apply(this, arguments));
	    _this.componentName = 'radio';
	    _this.mdcProps = ['disabled'];
	    _this.mdcNotifyProps = ['checked'];
	    return _this;
	  }

	  (0, _createClass2.default)(Radio, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Radio.prototype), "componentDidMount", this).call(this);

	      if (this.control) {
	        this.MDComponent = new radio.MDCRadio(this.control);
	      }

	      this.afterComponentDidMount();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Radio.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(allprops) {
	      var className = allprops.className,
	          props = __rest(allprops, ["className"]);

	      return (0, preact_module.h)("div", {
	        className: className,
	        ref: this.setControlRef
	      }, (0, preact_module.h)("input", Object.assign({
	        className: "mdc-radio__native-control",
	        type: "radio"
	      }, props)), (0, preact_module.h)("div", {
	        className: "mdc-radio__background"
	      }, (0, preact_module.h)("div", {
	        className: "mdc-radio__outer-circle"
	      }), (0, preact_module.h)("div", {
	        className: "mdc-radio__inner-circle"
	      })));
	    }
	  }]);
	  return Radio;
	}(_MaterialComponent2.default);

	exports.Radio = Radio;
	var _default = Radio;
	exports.default = _default;

	});

	unwrapExports(Radio_1);
	var Radio_2 = Radio_1.Radio;

	var FormField = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Formfield = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);



	var _MaterialComponent2 = interopRequireDefault(MaterialComponent_1);

	var Formfield =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Formfield, _MaterialComponent);

	  function Formfield() {
	    var _this;

	    (0, _classCallCheck2.default)(this, Formfield);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Formfield).apply(this, arguments));
	    _this.componentName = 'form-field';
	    _this.mdcProps = ['align-end'];
	    return _this;
	  }

	  (0, _createClass2.default)(Formfield, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("div", Object.assign({}, props), this.props.children);
	    }
	  }]);
	  return Formfield;
	}(_MaterialComponent2.default);

	exports.Formfield = Formfield;
	var _default = Formfield;
	exports.default = _default;

	});

	unwrapExports(FormField);
	var FormField_1 = FormField.Formfield;

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const cssClasses$8 = {
	  ROOT: 'mdc-icon-button',
	  ICON_BUTTON_ON: 'mdc-icon-button--on',
	};

	/** @enum {string} */
	const strings$7 = {
	  ARIA_PRESSED: 'aria-pressed',
	  ARIA_LABEL: 'aria-label',
	  CHANGE_EVENT: 'MDCIconButtonToggle:change',
	};

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCIconButtonToggleAdapter>}
	 */
	class MDCIconButtonToggleFoundation extends MDCFoundation {
	  static get cssClasses() {
	    return cssClasses$8;
	  }

	  static get strings() {
	    return strings$7;
	  }

	  static get defaultAdapter() {
	    return {
	      addClass: () => {},
	      removeClass: () => {},
	      hasClass: () => {},
	      setAttr: () => {},
	      notifyChange: () => {},
	    };
	  }

	  constructor(adapter) {
	    super(Object.assign(MDCIconButtonToggleFoundation.defaultAdapter, adapter));

	    /** @private {boolean} */
	    this.disabled_ = false;
	  }

	  init() {
	    this.adapter_.setAttr(strings$7.ARIA_PRESSED, `${this.isOn()}`);
	  }

	  handleClick() {
	    this.toggle();
	    this.adapter_.notifyChange(/** @type {!IconButtonToggleEvent} */ ({isOn: this.isOn()}));
	  }

	  /** @return {boolean} */
	  isOn() {
	    return this.adapter_.hasClass(cssClasses$8.ICON_BUTTON_ON);
	  }

	  /** @param {boolean=} isOn */
	  toggle(isOn = !this.isOn()) {
	    if (isOn) {
	      this.adapter_.addClass(cssClasses$8.ICON_BUTTON_ON);
	    } else {
	      this.adapter_.removeClass(cssClasses$8.ICON_BUTTON_ON);
	    }

	    this.adapter_.setAttr(strings$7.ARIA_PRESSED, `${isOn}`);
	  }
	}

	/**
	 * @license
	 * Copyright 2018 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCComponent<!MDCIconButtonToggleFoundation>}
	 */
	class MDCIconButtonToggle extends MDCComponent {
	  static attachTo(root) {
	    return new MDCIconButtonToggle(root);
	  }

	  constructor(...args) {
	    super(...args);

	    /** @private {!MDCRipple} */
	    this.ripple_ = this.initRipple_();
	    /** @private {!Function} */
	    this.handleClick_;
	  }

	  /**
	   * @return {!MDCRipple}
	   * @private
	   */
	  initRipple_() {
	    const ripple = new MDCRipple(this.root_);
	    ripple.unbounded = true;
	    return ripple;
	  }

	  destroy() {
	    this.root_.removeEventListener('click', this.handleClick_);
	    this.ripple_.destroy();
	    super.destroy();
	  }

	  /** @return {!MDCIconButtonToggleFoundation} */
	  getDefaultFoundation() {
	    return new MDCIconButtonToggleFoundation({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      hasClass: (className) => this.root_.classList.contains(className),
	      setAttr: (attrName, attrValue) => this.root_.setAttribute(attrName, attrValue),
	      notifyChange: (evtData) => this.emit(MDCIconButtonToggleFoundation.strings.CHANGE_EVENT, evtData),
	    });
	  }

	  initialSyncWithDOM() {
	    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
	    this.root_.addEventListener('click', this.handleClick_);
	  }

	  /** @return {!MDCRipple} */
	  get ripple() {
	    return this.ripple_;
	  }

	  /** @return {boolean} */
	  get on() {
	    return this.foundation_.isOn();
	  }

	  /** @param {boolean} isOn */
	  set on(isOn) {
	    this.foundation_.toggle(isOn);
	  }
	}

	var iconButton = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCIconButtonToggle: MDCIconButtonToggle,
		MDCIconButtonToggleFoundation: MDCIconButtonToggleFoundation
	});

	var IconButton_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.IconButton = exports.Icon = void 0;

	var _get2 = interopRequireDefault(get$1);

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);





	var _MaterialComponent3 = interopRequireDefault(MaterialComponent_1);

	var Icon =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Icon, _MaterialComponent);

	  function Icon() {
	    var _this;

	    (0, _classCallCheck2.default)(this, Icon);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
	    _this.componentName = 'icon-button__icon';
	    _this.mdcProps = ['on'];
	    return _this;
	  }

	  (0, _createClass2.default)(Icon, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      var IconElement = props.element || 'i';
	      return (0, preact_module.h)(IconElement, Object.assign({
	        class: "material-icons"
	      }, props), props.children);
	    }
	  }]);
	  return Icon;
	}(_MaterialComponent3.default);

	exports.Icon = Icon;

	var IconButton =
	/*#__PURE__*/
	function (_MaterialComponent2) {
	  (0, _inherits2.default)(IconButton, _MaterialComponent2);

	  function IconButton() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, IconButton);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconButton).apply(this, arguments));
	    _this2.componentName = 'icon-button';
	    _this2.mdcProps = [];
	    return _this2;
	  }

	  (0, _createClass2.default)(IconButton, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(IconButton.prototype), "componentDidMount", this).call(this);
	      this.MDComponent = new iconButton.MDCIconButtonToggle(this.control);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(IconButton.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("button", Object.assign({
	        ref: this.setControlRef
	      }, props), this.props.children);
	    }
	  }]);
	  return IconButton;
	}(_MaterialComponent3.default);

	exports.IconButton = IconButton;

	var default_1 =
	/*#__PURE__*/
	function (_IconButton) {
	  (0, _inherits2.default)(default_1, _IconButton);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(IconButton);

	exports.default = default_1;
	default_1.Icon = Icon;

	});

	unwrapExports(IconButton_1);
	var IconButton_2 = IconButton_1.IconButton;
	var IconButton_3 = IconButton_1.Icon;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @enum {string} */
	const cssClasses$9 = {
	  BOX: 'mdc-select--box',
	  DISABLED: 'mdc-select--disabled',
	  ROOT: 'mdc-select',
	  OUTLINED: 'mdc-select--outlined',
	};

	/** @enum {string} */
	const strings$8 = {
	  CHANGE_EVENT: 'MDCSelect:change',
	  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
	  LABEL_SELECTOR: '.mdc-floating-label',
	  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',
	  OUTLINE_SELECTOR: '.mdc-notched-outline',
	};

	/** @enum {number} */
	const numbers$3 = {
	  LABEL_SCALE: 0.75,
	};

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends {MDCFoundation<!MDCSelectAdapter>}
	 * @final
	 */
	class MDCSelectFoundation extends MDCFoundation {
	  /** @return enum {string} */
	  static get cssClasses() {
	    return cssClasses$9;
	  }

	  /** @return enum {number} */
	  static get numbers() {
	    return numbers$3;
	  }

	  /** @return enum {string} */
	  static get strings() {
	    return strings$8;
	  }

	  /**
	   * {@see MDCSelectAdapter} for typing information on parameters and return
	   * types.
	   * @return {!MDCSelectAdapter}
	   */
	  static get defaultAdapter() {
	    return /** @type {!MDCSelectAdapter} */ ({
	      addClass: (/* className: string */) => {},
	      removeClass: (/* className: string */) => {},
	      hasClass: (/* className: string */) => false,
	      activateBottomLine: () => {},
	      deactivateBottomLine: () => {},
	      getValue: () => {},
	      isRtl: () => false,
	      hasLabel: () => false,
	      floatLabel: (/* value: boolean */) => {},
	      getLabelWidth: () => {},
	      hasOutline: () => false,
	      notchOutline: (/* labelWidth: number, isRtl: boolean */) => {},
	      closeOutline: () => {},
	    });
	  }

	  /**
	   * @param {!MDCSelectAdapter} adapter
	   */
	  constructor(adapter) {
	    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));
	  }

	  /**
	   * Updates the styles of the select to show the disasbled state.
	   * @param {boolean} disabled
	   */
	  updateDisabledStyle(disabled) {
	    const {DISABLED} = MDCSelectFoundation.cssClasses;
	    if (disabled) {
	      this.adapter_.addClass(DISABLED);
	    } else {
	      this.adapter_.removeClass(DISABLED);
	    }
	  }

	  /**
	   * Handles value changes, via change event or programmatic updates.
	   */
	  handleChange() {
	    const optionHasValue = this.adapter_.getValue().length > 0;
	    this.adapter_.floatLabel(optionHasValue);
	    this.notchOutline(optionHasValue);
	  }

	  /**
	   * Handles focus events from root element.
	   */
	  handleFocus() {
	    this.adapter_.floatLabel(true);
	    this.notchOutline(true);
	    this.adapter_.activateBottomLine();
	  }

	  /**
	   * Handles blur events from root element.
	   */
	  handleBlur() {
	    this.handleChange();
	    this.adapter_.deactivateBottomLine();
	  }

	  /**
	   * Opens/closes the notched outline.
	   * @param {boolean} openNotch
	   */
	  notchOutline(openNotch) {
	    if (!this.adapter_.hasOutline()) {
	      return;
	    }

	    if (openNotch) {
	      const labelScale = numbers$3.LABEL_SCALE;
	      const labelWidth = this.adapter_.getLabelWidth() * labelScale;
	      const isRtl = this.adapter_.isRtl();
	      this.adapter_.notchOutline(labelWidth, isRtl);
	    } else {
	      this.adapter_.closeOutline();
	    }
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/**
	 * @extends MDCComponent<!MDCSelectFoundation>
	 */
	class MDCSelect extends MDCComponent {
	  /**
	   * @param {...?} args
	   */
	  constructor(...args) {
	    super(...args);
	    /** @private {?Element} */
	    this.nativeControl_;
	    /** @type {?MDCRipple} */
	    this.ripple;
	    /** @private {?MDCLineRipple} */
	    this.lineRipple_;
	    /** @private {?MDCFloatingLabel} */
	    this.label_;
	    /** @private {?MDCNotchedOutline} */
	    this.outline_;
	    /** @private {!Function} */
	    this.handleChange_;
	    /** @private {!Function} */
	    this.handleFocus_;
	    /** @private {!Function} */
	    this.handleBlur_;
	    /** @private {!Function} */
	    this.handleClick_;
	  }

	  /**
	   * @param {!Element} root
	   * @return {!MDCSelect}
	   */
	  static attachTo(root) {
	    return new MDCSelect(root);
	  }

	  /**
	   * @return {string} The value of the select.
	   */
	  get value() {
	    return this.nativeControl_.value;
	  }

	  /**
	   * @param {string} value The value to set on the select.
	   */
	  set value(value) {
	    this.nativeControl_.value = value;
	    this.foundation_.handleChange();
	  }

	  /**
	   * @return {number} The selected index of the select.
	   */
	  get selectedIndex() {
	    return this.nativeControl_.selectedIndex;
	  }

	  /**
	   * @param {number} selectedIndex The index of the option to be set on the select.
	   */
	  set selectedIndex(selectedIndex) {
	    this.nativeControl_.selectedIndex = selectedIndex;
	    this.foundation_.handleChange();
	  }

	  /**
	   * @return {boolean} True if the select is disabled.
	   */
	  get disabled() {
	    return this.nativeControl_.disabled;
	  }

	  /**
	   * @param {boolean} disabled Sets the select disabled or enabled.
	   */
	  set disabled(disabled) {
	    this.nativeControl_.disabled = disabled;
	    this.foundation_.updateDisabledStyle(disabled);
	  }

	  /**
	   * Recomputes the outline SVG path for the outline element.
	   */
	  layout() {
	    const openNotch = this.nativeControl_.value.length > 0;
	    this.foundation_.notchOutline(openNotch);
	  }


	  /**
	   * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which creates a new MDCLineRipple.
	   * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which creates a new MDCFloatingLabel.
	   * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which creates a new MDCNotchedOutline.
	   */
	  initialize(
	    labelFactory = (el) => new MDCFloatingLabel(el),
	    lineRippleFactory = (el) => new MDCLineRipple(el),
	    outlineFactory = (el) => new MDCNotchedOutline(el)) {
	    this.nativeControl_ = this.root_.querySelector(strings$8.NATIVE_CONTROL_SELECTOR);
	    const labelElement = this.root_.querySelector(strings$8.LABEL_SELECTOR);
	    if (labelElement) {
	      this.label_ = labelFactory(labelElement);
	    }
	    const lineRippleElement = this.root_.querySelector(strings$8.LINE_RIPPLE_SELECTOR);
	    if (lineRippleElement) {
	      this.lineRipple_ = lineRippleFactory(lineRippleElement);
	    }
	    const outlineElement = this.root_.querySelector(strings$8.OUTLINE_SELECTOR);
	    if (outlineElement) {
	      this.outline_ = outlineFactory(outlineElement);
	    }

	    if (this.root_.classList.contains(cssClasses$9.BOX)) {
	      this.ripple = this.initRipple_();
	    }
	  }

	  /**
	   * @private
	   * @return {!MDCRipple}
	   */
	  initRipple_() {
	    const adapter = Object.assign(MDCRipple.createAdapter(this), {
	      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),
	      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler),
	    });
	    const foundation = new MDCRippleFoundation(adapter);
	    return new MDCRipple(this.root_, foundation);
	  }

	  /**
	   * Initializes the select's event listeners and internal state based
	   * on the environment's state.
	   */
	  initialSyncWithDOM() {
	    this.handleChange_ = () => this.foundation_.handleChange();
	    this.handleFocus_ = () => this.foundation_.handleFocus();
	    this.handleBlur_ = () => this.foundation_.handleBlur();
	    this.handleClick_ = (evt) => this.setTransformOrigin_(evt);

	    this.nativeControl_.addEventListener('change', this.handleChange_);
	    this.nativeControl_.addEventListener('focus', this.handleFocus_);
	    this.nativeControl_.addEventListener('blur', this.handleBlur_);

	    if (this.lineRipple_) {
	      ['mousedown', 'touchstart'].forEach((evtType) => {
	        this.nativeControl_.addEventListener(evtType, this.handleClick_);
	      });
	    }

	    // Initially sync floating label
	    this.foundation_.handleChange();

	    if (this.nativeControl_.disabled) {
	      this.disabled = true;
	    }
	  }

	  destroy() {
	    this.nativeControl_.removeEventListener('change', this.handleChange_);
	    this.nativeControl_.removeEventListener('focus', this.handleFocus_);
	    this.nativeControl_.removeEventListener('blur', this.handleBlur_);
	    ['mousedown', 'touchstart'].forEach((evtType) => {
	      this.nativeControl_.removeEventListener(evtType, this.handleClick_);
	    });

	    if (this.ripple) {
	      this.ripple.destroy();
	    }
	    if (this.outline_) {
	      this.outline_.destroy();
	    }

	    super.destroy();
	  }

	  /**
	   * @return {!MDCSelectFoundation}
	   */
	  getDefaultFoundation() {
	    return new MDCSelectFoundation(
	      /** @type {!MDCSelectAdapter} */ (Object.assign({
	        addClass: (className) => this.root_.classList.add(className),
	        removeClass: (className) => this.root_.classList.remove(className),
	        hasClass: (className) => this.root_.classList.contains(className),
	        getValue: () => this.nativeControl_.value,
	        isRtl: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',
	        activateBottomLine: () => {
	          if (this.lineRipple_) {
	            this.lineRipple_.activate();
	          }
	        },
	        deactivateBottomLine: () => {
	          if (this.lineRipple_) {
	            this.lineRipple_.deactivate();
	          }
	        },
	      },
	      this.getOutlineAdapterMethods_(),
	      this.getLabelAdapterMethods_())
	      )
	    );
	  }

	  /**
	   * @return {!{
	   *   hasOutline: function(): boolean,
	   *   notchOutline: function(number, boolean): undefined,
	   *   closeOutline: function(): undefined,
	   * }}
	   */
	  getOutlineAdapterMethods_() {
	    return {
	      hasOutline: () => !!this.outline_,
	      notchOutline: (labelWidth, isRtl) => {
	        if (this.outline_) {
	          this.outline_.notch(labelWidth, isRtl);
	        }
	      },
	      closeOutline: () => {
	        if (this.outline_) {
	          this.outline_.closeNotch();
	        }
	      },
	    };
	  }

	  /**
	   * @return {!{
	   *   hasLabel: function(): boolean,
	   *   floatLabel: function(boolean): undefined,
	   *   getLabelWidth: function(): number,
	   * }}
	   */
	  getLabelAdapterMethods_() {
	    return {
	      hasLabel: () => !!this.label_,
	      floatLabel: (shouldFloat) => {
	        if (this.label_) {
	          this.label_.float(shouldFloat);
	        }
	      },
	      getLabelWidth: () => {
	        return this.label_ ? this.label_.getWidth() : 0;
	      },
	    };
	  }

	  /**
	   * Sets the line ripple's transform origin, so that the line ripple activate
	   * animation will animate out from the user's click location.
	   * @param {!(MouseEvent|TouchEvent)} evt
	   */
	  setTransformOrigin_(evt) {
	    const targetClientRect = evt.target.getBoundingClientRect();
	    const xCoordinate = evt.clientX;
	    const normalizedX = xCoordinate - targetClientRect.left;
	    this.lineRipple_.setRippleCenter(normalizedX);
	  }
	}

	var select = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCSelect: MDCSelect,
		MDCSelectFoundation: MDCSelectFoundation
	});

	var Select_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Select = exports.SelectOption = void 0;

	var _get2 = interopRequireDefault(get$1);

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _inherits2 = interopRequireDefault(inherits);

	var _typeof2 = interopRequireDefault(_typeof_1);







	var _MaterialComponent3 = interopRequireDefault(MaterialComponent_1);

	var __decorate =  function (decorators, target, key, desc) {
	  var c = arguments.length,
	      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	      d;
	  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	  }
	  return c > 3 && r && Object.defineProperty(target, key, r), r;
	};

	var __rest =  function (s, e) {
	  var t = {};

	  for (var p in s) {
	    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
	  }

	  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
	    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
	  }
	  return t;
	};

	var SelectOption =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(SelectOption, _MaterialComponent);

	  function SelectOption() {
	    var _this;

	    (0, _classCallCheck2.default)(this, SelectOption);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectOption).apply(this, arguments));
	    _this.componentName = 'select-item';
	    _this.mdcProps = [];
	    return _this;
	  }

	  (0, _createClass2.default)(SelectOption, [{
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("option", Object.assign({}, props), props.children);
	    }
	  }]);
	  return SelectOption;
	}(_MaterialComponent3.default);

	exports.SelectOption = SelectOption;

	var Select =
	/*#__PURE__*/
	function (_MaterialComponent2) {
	  (0, _inherits2.default)(Select, _MaterialComponent2);

	  function Select() {
	    var _this2;

	    (0, _classCallCheck2.default)(this, Select);
	    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Select).apply(this, arguments));
	    _this2.componentName = 'select';
	    _this2.mdcProps = ['disabled', 'box', 'outlined'];
	    return _this2;
	  }

	  (0, _createClass2.default)(Select, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Select.prototype), "componentDidMount", this).call(this);

	      if (this.control) {
	        this.MDComponent = new select.MDCSelect(this.control);
	        this.MDComponent.listen('MDCSelect:change', this.onChanged);
	      }

	      this.updateSelection();
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Select.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.unlisten('MDCSelect:change', this.onChanged);
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this.updateSelection();
	    }
	  }, {
	    key: "onChanged",
	    value: function onChanged(e) {
	      if (this.MDComponent) {
	        e = e || {};
	        e.selectedIndex = e.selectedIndex || this.MDComponent.selectedIndex;

	        if (this.props.onChange) {
	          this.props.onChange(e);
	        }
	      }
	    }
	  }, {
	    key: "updateSelection",
	    value: function updateSelection() {
	      if (this.MDComponent) {
	        if (this.props.selectedIndex) {
	          this.MDComponent.selectedIndex = typeof this.props.selectedIndex === 'number' ? this.props.selectedIndex : 0;
	        }

	        var selectedIndex = this.MDComponent.selectedIndex;

	        if (selectedIndex === 0) {
	          if (this.labelRef) {
	            this.labelRef.classList.remove('mdc-floating-label--float-above');
	          }
	        } else {
	          if (this.labelRef) {
	            this.labelRef.classList.add('mdc-floating-label--float-above');
	          }
	        }
	      }
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(allprops) {
	      var _this3 = this;

	      var outlined = allprops.outlined,
	          n = allprops.name,
	          props = __rest(allprops, ["outlined", "name"]); // noinspection RequiredAttributes


	      return (0, preact_module.h)("div", Object.assign({
	        ref: this.setControlRef
	      }, props), (0, preact_module.h)("select", {
	        class: "mdc-select__native-control",
	        name: n
	      }, props.hintText && (0, preact_module.h)("option", {
	        value: "",
	        disabled: true,
	        selected: true
	      }), props.children), props.hintText && (0, preact_module.h)("div", {
	        class: "mdc-floating-label",
	        ref: function ref(_ref) {
	          _this3.labelRef = _ref;
	        }
	      }, props.hintText), !outlined && (0, preact_module.h)("div", {
	        class: "mdc-line-ripple"
	      }), outlined && (0, preact_module.h)("div", {
	        class: "mdc-notched-outline"
	      }, (0, preact_module.h)("svg", null, (0, preact_module.h)("path", {
	        class: "mdc-notched-outline__path"
	      }))), outlined && (0, preact_module.h)("div", {
	        class: "mdc-notched-outline__idle"
	      }));
	    }
	  }]);
	  return Select;
	}(_MaterialComponent3.default);

	exports.Select = Select;

	__decorate([bindDecorator.bind], Select.prototype, "onChanged", null);

	var default_1 =
	/*#__PURE__*/
	function (_Select) {
	  (0, _inherits2.default)(default_1, _Select);

	  function default_1() {
	    (0, _classCallCheck2.default)(this, default_1);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
	  }

	  return default_1;
	}(Select);

	exports.default = default_1;
	default_1.Item = SelectOption;

	});

	var Select = unwrapExports(Select_1);
	var Select_2 = Select_1.Select;
	var Select_3 = Select_1.SelectOption;

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */
	const cssClasses$a = {
	  ROOT: 'mdc-snackbar',
	  TEXT: 'mdc-snackbar__text',
	  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',
	  ACTION_BUTTON: 'mdc-snackbar__action-button',
	  ACTIVE: 'mdc-snackbar--active',
	  MULTILINE: 'mdc-snackbar--multiline',
	  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',
	};

	const strings$9 = {
	  TEXT_SELECTOR: '.mdc-snackbar__text',
	  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',
	  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',
	  SHOW_EVENT: 'MDCSnackbar:show',
	  HIDE_EVENT: 'MDCSnackbar:hide',
	};

	const numbers$4 = {
	  MESSAGE_TIMEOUT: 2750,
	};

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	class MDCSnackbarFoundation extends MDCFoundation {
	  static get cssClasses() {
	    return cssClasses$a;
	  }

	  static get strings() {
	    return strings$9;
	  }

	  static get defaultAdapter() {
	    return {
	      addClass: (/* className: string */) => {},
	      removeClass: (/* className: string */) => {},
	      setAriaHidden: () => {},
	      unsetAriaHidden: () => {},
	      setActionAriaHidden: () => {},
	      unsetActionAriaHidden: () => {},
	      setActionText: (/* actionText: string */) => {},
	      setMessageText: (/* message: string */) => {},
	      setFocus: () => {},
	      isFocused: () => /* boolean */ false,
	      visibilityIsHidden: () => /* boolean */ false,
	      registerCapturedBlurHandler: (/* handler: EventListener */) => {},
	      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},
	      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},
	      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},
	      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},
	      registerActionClickHandler: (/* handler: EventListener */) => {},
	      deregisterActionClickHandler: (/* handler: EventListener */) => {},
	      registerTransitionEndHandler: (/* handler: EventListener */) => {},
	      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},
	      notifyShow: () => {},
	      notifyHide: () => {},
	    };
	  }

	  get active() {
	    return this.active_;
	  }

	  constructor(adapter) {
	    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));

	    this.active_ = false;
	    this.actionWasClicked_ = false;
	    this.dismissOnAction_ = true;
	    this.firstFocus_ = true;
	    this.pointerDownRecognized_ = false;
	    this.snackbarHasFocus_ = false;
	    this.snackbarData_ = null;
	    this.queue_ = [];
	    this.actionClickHandler_ = () => {
	      this.actionWasClicked_ = true;
	      this.invokeAction_();
	    };
	    this.visibilitychangeHandler_ = () => {
	      clearTimeout(this.timeoutId_);
	      this.snackbarHasFocus_ = true;

	      if (!this.adapter_.visibilityIsHidden()) {
	        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
	      }
	    };
	    this.interactionHandler_ = (evt) => {
	      if (evt.type === 'focus' && !this.adapter_.isFocused()) {
	        return;
	      }
	      if (evt.type === 'touchstart' || evt.type === 'mousedown') {
	        this.pointerDownRecognized_ = true;
	      }
	      this.handlePossibleTabKeyboardFocus_(evt);

	      if (evt.type === 'focus') {
	        this.pointerDownRecognized_ = false;
	      }
	    };
	    this.blurHandler_ = () => {
	      clearTimeout(this.timeoutId_);
	      this.snackbarHasFocus_ = false;
	      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
	    };
	  }

	  init() {
	    this.adapter_.registerActionClickHandler(this.actionClickHandler_);
	    this.adapter_.setAriaHidden();
	    this.adapter_.setActionAriaHidden();
	  }

	  destroy() {
	    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);
	    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);
	    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);
	    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {
	      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);
	    });
	  }

	  dismissesOnAction() {
	    return this.dismissOnAction_;
	  }

	  setDismissOnAction(dismissOnAction) {
	    this.dismissOnAction_ = !!dismissOnAction;
	  }

	  show(data) {
	    if (!data) {
	      throw new Error(
	        'Please provide a data object with at least a message to display.');
	    }
	    if (!data.message) {
	      throw new Error('Please provide a message to be displayed.');
	    }
	    if (data.actionHandler && !data.actionText) {
	      throw new Error('Please provide action text with the handler.');
	    }
	    if (this.active) {
	      this.queue_.push(data);
	      return;
	    }
	    clearTimeout(this.timeoutId_);
	    this.snackbarData_ = data;
	    this.firstFocus_ = true;
	    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);
	    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);
	    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {
	      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);
	    });

	    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses$a;

	    this.adapter_.setMessageText(this.snackbarData_.message);

	    if (this.snackbarData_.multiline) {
	      this.adapter_.addClass(MULTILINE);
	      if (this.snackbarData_.actionOnBottom) {
	        this.adapter_.addClass(ACTION_ON_BOTTOM);
	      }
	    }

	    if (this.snackbarData_.actionHandler) {
	      this.adapter_.setActionText(this.snackbarData_.actionText);
	      this.actionHandler_ = this.snackbarData_.actionHandler;
	      this.setActionHidden_(false);
	    } else {
	      this.setActionHidden_(true);
	      this.actionHandler_ = null;
	      this.adapter_.setActionText(null);
	    }

	    this.active_ = true;
	    this.adapter_.addClass(ACTIVE);
	    this.adapter_.unsetAriaHidden();
	    this.adapter_.notifyShow();

	    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers$4.MESSAGE_TIMEOUT);
	  }

	  handlePossibleTabKeyboardFocus_() {
	    const hijackFocus =
	      this.firstFocus_ && !this.pointerDownRecognized_;

	    if (hijackFocus) {
	      this.setFocusOnAction_();
	    }

	    this.firstFocus_ = false;
	  }

	  setFocusOnAction_() {
	    this.adapter_.setFocus();
	    this.snackbarHasFocus_ = true;
	    this.firstFocus_ = false;
	  }

	  invokeAction_() {
	    try {
	      if (!this.actionHandler_) {
	        return;
	      }

	      this.actionHandler_();
	    } finally {
	      if (this.dismissOnAction_) {
	        this.cleanup_();
	      }
	    }
	  }

	  cleanup_() {
	    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;

	    if (allowDismissal) {
	      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses$a;

	      this.adapter_.removeClass(ACTIVE);

	      const handler = () => {
	        clearTimeout(this.timeoutId_);
	        this.adapter_.deregisterTransitionEndHandler(handler);
	        this.adapter_.removeClass(MULTILINE);
	        this.adapter_.removeClass(ACTION_ON_BOTTOM);
	        this.setActionHidden_(true);
	        this.adapter_.setAriaHidden();
	        this.active_ = false;
	        this.snackbarHasFocus_ = false;
	        this.adapter_.notifyHide();
	        this.showNext_();
	      };

	      this.adapter_.registerTransitionEndHandler(handler);
	    }
	  }

	  showNext_() {
	    if (!this.queue_.length) {
	      return;
	    }
	    this.show(this.queue_.shift());
	  }

	  setActionHidden_(isHidden) {
	    if (isHidden) {
	      this.adapter_.setActionAriaHidden();
	    } else {
	      this.adapter_.unsetActionAriaHidden();
	    }
	  }
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	/** @const {Object<string, !VendorPropertyMapType>} */
	const eventTypeMap = {
	  'animationstart': {
	    noPrefix: 'animationstart',
	    webkitPrefix: 'webkitAnimationStart',
	    styleProperty: 'animation',
	  },
	  'animationend': {
	    noPrefix: 'animationend',
	    webkitPrefix: 'webkitAnimationEnd',
	    styleProperty: 'animation',
	  },
	  'animationiteration': {
	    noPrefix: 'animationiteration',
	    webkitPrefix: 'webkitAnimationIteration',
	    styleProperty: 'animation',
	  },
	  'transitionend': {
	    noPrefix: 'transitionend',
	    webkitPrefix: 'webkitTransitionEnd',
	    styleProperty: 'transition',
	  },
	};

	/** @const {Object<string, !VendorPropertyMapType>} */
	const cssPropertyMap = {
	  'animation': {
	    noPrefix: 'animation',
	    webkitPrefix: '-webkit-animation',
	  },
	  'transform': {
	    noPrefix: 'transform',
	    webkitPrefix: '-webkit-transform',
	  },
	  'transition': {
	    noPrefix: 'transition',
	    webkitPrefix: '-webkit-transition',
	  },
	};

	/**
	 * @param {!Object} windowObj
	 * @return {boolean}
	 */
	function hasProperShape(windowObj) {
	  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');
	}

	/**
	 * @param {string} eventType
	 * @return {boolean}
	 */
	function eventFoundInMaps(eventType) {
	  return (eventType in eventTypeMap || eventType in cssPropertyMap);
	}

	/**
	 * @param {string} eventType
	 * @param {!Object<string, !VendorPropertyMapType>} map
	 * @param {!Element} el
	 * @return {string}
	 */
	function getJavaScriptEventName(eventType, map, el) {
	  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
	}

	/**
	 * Helper function to determine browser prefix for CSS3 animation events
	 * and property names.
	 * @param {!Object} windowObj
	 * @param {string} eventType
	 * @return {string}
	 */
	function getAnimationName(windowObj, eventType) {
	  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
	    return eventType;
	  }

	  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (
	    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap
	  );
	  const el = windowObj['document']['createElement']('div');
	  let eventName = '';

	  if (map === eventTypeMap) {
	    eventName = getJavaScriptEventName(eventType, map, el);
	  } else {
	    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
	  }

	  return eventName;
	}

	/**
	 * @param {!Object} windowObj
	 * @param {string} eventType
	 * @return {string}
	 */
	function getCorrectEventName(windowObj, eventType) {
	  return getAnimationName(windowObj, eventType);
	}

	/**
	 * @license
	 * Copyright 2016 Google Inc.
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */

	class MDCSnackbar extends MDCComponent {
	  static attachTo(root) {
	    return new MDCSnackbar(root);
	  }

	  show(data) {
	    this.foundation_.show(data);
	  }

	  getDefaultFoundation() {
	    const {
	      TEXT_SELECTOR,
	      ACTION_BUTTON_SELECTOR,
	    } = MDCSnackbarFoundation.strings;
	    const getText = () => this.root_.querySelector(TEXT_SELECTOR);
	    const getActionButton = () => this.root_.querySelector(ACTION_BUTTON_SELECTOR);

	    /* eslint brace-style: "off" */
	    return new MDCSnackbarFoundation({
	      addClass: (className) => this.root_.classList.add(className),
	      removeClass: (className) => this.root_.classList.remove(className),
	      setAriaHidden: () => this.root_.setAttribute('aria-hidden', 'true'),
	      unsetAriaHidden: () => this.root_.removeAttribute('aria-hidden'),
	      setActionAriaHidden: () => getActionButton().setAttribute('aria-hidden', 'true'),
	      unsetActionAriaHidden: () => getActionButton().removeAttribute('aria-hidden'),
	      setActionText: (text) => {getActionButton().textContent = text;},
	      setMessageText: (text) => {getText().textContent = text;},
	      setFocus: () => getActionButton().focus(),
	      isFocused: () => document.activeElement === getActionButton(),
	      visibilityIsHidden: () => document.hidden,
	      registerCapturedBlurHandler: (handler) => getActionButton().addEventListener('blur', handler, true),
	      deregisterCapturedBlurHandler: (handler) => getActionButton().removeEventListener('blur', handler, true),
	      registerVisibilityChangeHandler: (handler) => document.addEventListener('visibilitychange', handler),
	      deregisterVisibilityChangeHandler: (handler) => document.removeEventListener('visibilitychange', handler),
	      registerCapturedInteractionHandler: (evt, handler) =>
	        document.body.addEventListener(evt, handler, true),
	      deregisterCapturedInteractionHandler: (evt, handler) =>
	        document.body.removeEventListener(evt, handler, true),
	      registerActionClickHandler: (handler) => getActionButton().addEventListener('click', handler),
	      deregisterActionClickHandler: (handler) => getActionButton().removeEventListener('click', handler),
	      registerTransitionEndHandler:
	        (handler) => this.root_.addEventListener(getCorrectEventName(window, 'transitionend'), handler),
	      deregisterTransitionEndHandler:
	        (handler) => this.root_.removeEventListener(getCorrectEventName(window, 'transitionend'), handler),
	      notifyShow: () => this.emit(MDCSnackbarFoundation.strings.SHOW_EVENT),
	      notifyHide: () => this.emit(MDCSnackbarFoundation.strings.HIDE_EVENT),
	    });
	  }

	  get dismissesOnAction() {
	    return this.foundation_.dismissesOnAction();
	  }

	  set dismissesOnAction(dismissesOnAction) {
	    this.foundation_.setDismissOnAction(dismissesOnAction);
	  }
	}

	var snackbar = /*#__PURE__*/Object.freeze({
		__proto__: null,
		MDCSnackbarFoundation: MDCSnackbarFoundation,
		MDCSnackbar: MDCSnackbar
	});

	var Snackbar_1 = createCommonjsModule(function (module, exports) {



	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Snackbar = void 0;

	var _classCallCheck2 = interopRequireDefault(classCallCheck);

	var _createClass2 = interopRequireDefault(createClass);

	var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

	var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

	var _get2 = interopRequireDefault(get$1);

	var _inherits2 = interopRequireDefault(inherits);





	var _MaterialComponent2 = interopRequireDefault(MaterialComponent_1);

	// TODO: Is that needed?
	function shallowDiffers(a, b) {
	  for (var i in a) {
	    if (!(i in b)) {
	      return true;
	    }
	  }

	  for (var _i in b) {
	    // noinspection JSUnfilteredForInLoop
	    if (a[_i] !== b[_i]) {
	      return true;
	    }
	  }

	  return false;
	}

	var Snackbar =
	/*#__PURE__*/
	function (_MaterialComponent) {
	  (0, _inherits2.default)(Snackbar, _MaterialComponent);

	  function Snackbar() {
	    var _this;

	    (0, _classCallCheck2.default)(this, Snackbar);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Snackbar).apply(this, arguments));
	    _this.componentName = 'snackbar';
	    _this.mdcProps = [];
	    return _this;
	  }

	  (0, _createClass2.default)(Snackbar, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentDidMount", this).call(this);

	      if (this.control) {
	        this.MDComponent = new snackbar.MDCSnackbar(this.control);

	        if (this.props.dismissesOnAction === undefined || this.props.dismissesOnAction === null) {
	          this.MDComponent.dismissesOnAction = true;
	        } else {
	          this.MDComponent.dismissesOnAction = this.props.dismissesOnAction;
	        }
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentWillUnmount", this).call(this);

	      if (this.MDComponent) {
	        this.MDComponent.destroy();
	      }
	    }
	  }, {
	    key: "shouldComponentUpdate",
	    value: function shouldComponentUpdate(props, state) {
	      return shallowDiffers(this.props, props) || shallowDiffers(this.state, state);
	    }
	  }, {
	    key: "materialDom",
	    value: function materialDom(props) {
	      return (0, preact_module.h)("div", Object.assign({
	        "aria-live": "assertive",
	        "aria-atomic": "true",
	        "aria-hidden": "true",
	        ref: this.setControlRef
	      }, props), (0, preact_module.h)("div", {
	        className: "mdc-snackbar__text"
	      }), (0, preact_module.h)("div", {
	        className: "mdc-snackbar__action-wrapper"
	      }, (0, preact_module.h)("button", {
	        type: "button",
	        className: "mdc-snackbar__action-button"
	      })));
	    }
	  }]);
	  return Snackbar;
	}(_MaterialComponent2.default);

	exports.Snackbar = Snackbar;
	var _default = Snackbar;
	exports.default = _default;

	});

	var Snackbar = unwrapExports(Snackbar_1);
	var Snackbar_2 = Snackbar_1.Snackbar;

	function styleInject(css, ref) {
	  if ( ref === void 0 ) ref = {};
	  var insertAt = ref.insertAt;

	  if (!css || typeof document === 'undefined') { return; }

	  var head = document.head || document.getElementsByTagName('head')[0];
	  var style = document.createElement('style');
	  style.type = 'text/css';

	  if (insertAt === 'top') {
	    if (head.firstChild) {
	      head.insertBefore(style, head.firstChild);
	    } else {
	      head.appendChild(style);
	    }
	  } else {
	    head.appendChild(style);
	  }

	  if (style.styleSheet) {
	    style.styleSheet.cssText = css;
	  } else {
	    style.appendChild(document.createTextNode(css));
	  }
	}

	var css = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-list {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  margin: 0;\n  padding: 8px 0;\n  /* @alternate */\n  line-height: 1.5rem;\n  list-style-type: none; }\n\n.mdc-list-item__secondary-text {\n  color: rgba(0, 0, 0, 0.54);\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n\n.mdc-list-item__graphic {\n  background-color: transparent; }\n\n.mdc-list-item__graphic {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-list-item__meta {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-list--dense {\n  padding-top: 4px;\n  padding-bottom: 4px;\n  font-size: .812rem; }\n\n.mdc-list-item {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  height: 48px;\n  padding: 0 16px;\n  overflow: hidden; }\n  .mdc-list-item:focus {\n    outline: none; }\n\n.mdc-list-item--selected,\n.mdc-list-item--activated {\n  color: #6200ee;\n  /* @alternate */\n  color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-list-item--selected .mdc-list-item__graphic,\n  .mdc-list-item--activated .mdc-list-item__graphic {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-list-item--disabled {\n  color: rgba(0, 0, 0, 0.38);\n  /* @alternate */\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)); }\n\n.mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 32px;\n  width: 24px;\n  height: 24px;\n  display: inline-flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  fill: currentColor; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 32px;\n    /* @noflip */\n    margin-right: 0; }\n\n.mdc-list-item__meta {\n  /* @noflip */\n  margin-left: auto;\n  /* @noflip */\n  margin-right: 0; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list-item__meta,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list-item__meta {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: auto; }\n\n.mdc-list-item__text {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.mdc-list-item__primary-text {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: block;\n  margin-top: 0;\n  line-height: normal;\n  margin-bottom: -20px;\n  display: block; }\n  .mdc-list-item__primary-text::before {\n    display: inline-block;\n    width: 0;\n    height: 32px;\n    content: \"\";\n    vertical-align: 0; }\n  .mdc-list-item__primary-text::after {\n    display: inline-block;\n    width: 0;\n    height: 20px;\n    content: \"\";\n    vertical-align: -20px; }\n  .mdc-list--dense .mdc-list-item__primary-text {\n    display: block;\n    margin-top: 0;\n    line-height: normal;\n    margin-bottom: -20px; }\n    .mdc-list--dense .mdc-list-item__primary-text::before {\n      display: inline-block;\n      width: 0;\n      height: 24px;\n      content: \"\";\n      vertical-align: 0; }\n    .mdc-list--dense .mdc-list-item__primary-text::after {\n      display: inline-block;\n      width: 0;\n      height: 20px;\n      content: \"\";\n      vertical-align: -20px; }\n\n.mdc-list-item__secondary-text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.01786em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: block;\n  margin-top: 0;\n  line-height: normal;\n  display: block; }\n  .mdc-list-item__secondary-text::before {\n    display: inline-block;\n    width: 0;\n    height: 20px;\n    content: \"\";\n    vertical-align: 0; }\n  .mdc-list--dense .mdc-list-item__secondary-text {\n    display: block;\n    margin-top: 0;\n    line-height: normal;\n    font-size: inherit; }\n    .mdc-list--dense .mdc-list-item__secondary-text::before {\n      display: inline-block;\n      width: 0;\n      height: 20px;\n      content: \"\";\n      vertical-align: 0; }\n\n.mdc-list--dense .mdc-list-item {\n  height: 40px; }\n\n.mdc-list--dense .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 36px;\n  width: 20px;\n  height: 20px; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--dense .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--dense .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 36px;\n    /* @noflip */\n    margin-right: 0; }\n\n.mdc-list--avatar-list .mdc-list-item {\n  height: 56px; }\n\n.mdc-list--avatar-list .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 16px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 16px;\n    /* @noflip */\n    margin-right: 0; }\n\n.mdc-list--two-line .mdc-list-item__text {\n  align-self: flex-start; }\n\n.mdc-list--two-line .mdc-list-item {\n  height: 72px; }\n\n.mdc-list--two-line.mdc-list--dense .mdc-list-item {\n  height: 60px; }\n\n.mdc-list--avatar-list.mdc-list--dense .mdc-list-item {\n  height: 60px; }\n\n.mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 20px;\n  width: 36px;\n  height: 36px; }\n  .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic,\n  [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list-item__graphic {\n    /* @noflip */\n    margin-left: 20px;\n    /* @noflip */\n    margin-right: 0; }\n\n:not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item::after {\n    background-color: black; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item:hover::before {\n    opacity: 0.04; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.16; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.16; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated::before {\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated:hover::before {\n    opacity: 0.16; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.28; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--activated.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.28; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected::before {\n    opacity: 0.08; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected:hover::before {\n    opacity: 0.12; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected:not(.mdc-ripple-upgraded):focus::before, :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.2; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.24; }\n  :not(.mdc-list--non-interactive) > :not(.mdc-list-item--disabled).mdc-list-item--selected.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.24; }\n\na.mdc-list-item {\n  color: inherit;\n  text-decoration: none; }\n\n.mdc-list-divider {\n  height: 0;\n  margin: 0;\n  border: none;\n  border-bottom-width: 1px;\n  border-bottom-style: solid; }\n\n.mdc-list-divider {\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\n\n.mdc-list-divider--padded {\n  margin: 0 16px; }\n\n.mdc-list-divider--inset {\n  /* @noflip */\n  margin-left: 72px;\n  /* @noflip */\n  margin-right: 0;\n  width: calc(100% - 72px); }\n  .mdc-list-group[dir=\"rtl\"] .mdc-list-divider--inset,\n  [dir=\"rtl\"] .mdc-list-group .mdc-list-divider--inset {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 72px; }\n\n.mdc-list-divider--inset.mdc-list-divider--padded {\n  width: calc(100% - 72px - 16px); }\n\n.mdc-list-group .mdc-list {\n  padding: 0; }\n\n.mdc-list-group__subheader {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  margin: 0.75rem 16px; }\n\n.mdc-list-group__subheader {\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }";
	styleInject(css);

	var css$1 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-menu {\n  min-width: 112px;\n  max-width: 336px; }\n  .mdc-menu .mdc-list-item__meta {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-menu .mdc-list-item__graphic {\n    color: rgba(0, 0, 0, 0.87);\n    /* @alternate */\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n  .mdc-menu .mdc-list-divider {\n    margin: 8px 0; }\n  .mdc-menu .mdc-list-item {\n    cursor: pointer;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none; }\n  .mdc-menu .mdc-list-item--disabled {\n    cursor: auto; }\n\n.mdc-menu__selection-group {\n  padding: 0;\n  fill: currentColor; }\n  .mdc-menu__selection-group .mdc-list-item {\n    /* @noflip */\n    padding-left: 56px;\n    /* @noflip */\n    padding-right: 0; }\n    [dir=\"rtl\"] .mdc-menu__selection-group .mdc-list-item, .mdc-menu__selection-group .mdc-list-item[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 56px; }\n\n.mdc-menu__selection-group-icon {\n  /* @noflip */\n  left: 16px;\n  /* @noflip */\n  right: initial;\n  display: none;\n  position: absolute; }\n  [dir=\"rtl\"] .mdc-menu__selection-group-icon, .mdc-menu__selection-group-icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 16px; }\n\n.mdc-menu-item--selected .mdc-menu__selection-group-icon {\n  display: inline; }";
	styleInject(css$1);

	var css$2 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-select-float-native-control {\n  0% {\n    -webkit-transform: translateY(8px);\n            transform: translateY(8px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n    opacity: 1; } }\n\n@keyframes mdc-select-float-native-control {\n  0% {\n    -webkit-transform: translateY(8px);\n            transform: translateY(8px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n    opacity: 1; } }\n\n.mdc-line-ripple {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  -webkit-transform: scaleX(0);\n          transform: scaleX(0);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  z-index: 2; }\n\n.mdc-line-ripple--active {\n  -webkit-transform: scaleX(1);\n          transform: scaleX(1);\n  opacity: 1; }\n\n.mdc-line-ripple--deactivating {\n  opacity: 0; }\n\n.mdc-notched-outline,\n.mdc-notched-outline__idle {\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%; }\n\n.mdc-notched-outline {\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  text-align: left;\n  overflow: hidden; }\n  [dir=\"rtl\"] .mdc-notched-outline, .mdc-notched-outline[dir=\"rtl\"] {\n    text-align: right; }\n  .mdc-notched-outline svg {\n    position: absolute;\n    width: 100%;\n    height: 100%; }\n\n.mdc-notched-outline__idle {\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1), border-color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid;\n  opacity: 1; }\n\n.mdc-notched-outline__path {\n  stroke-width: 1px;\n  transition: stroke 150ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: transparent; }\n\n.mdc-notched-outline--notched {\n  opacity: 1; }\n\n.mdc-notched-outline--notched ~ .mdc-notched-outline__idle {\n  opacity: 0; }\n\n.mdc-floating-label {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  -webkit-transform-origin: left top;\n          transform-origin: left top;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  line-height: 1.15rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: text;\n  overflow: hidden;\n  will-change: transform; }\n  [dir=\"rtl\"] .mdc-floating-label, .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    right: 0;\n    /* @noflip */\n    left: auto;\n    /* @noflip */\n    -webkit-transform-origin: right top;\n            transform-origin: right top; }\n\n.mdc-floating-label--float-above {\n  cursor: auto; }\n\n.mdc-floating-label--float-above {\n  -webkit-transform: translateY(-100%) scale(0.75);\n          transform: translateY(-100%) scale(0.75); }\n\n.mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-standard 250ms 1;\n          animation: mdc-floating-label-shake-float-above-standard 250ms 1; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-select {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity;\n  background-image: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\");\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  height: 56px;\n  border-radius: 4px 4px 0 0;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  overflow: hidden;\n  will-change: opacity, transform, color; }\n  .mdc-select:not(.mdc-select--disabled) {\n    background-color: whitesmoke; }\n  .mdc-select::before, .mdc-select::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-select::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-select.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-select.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-select.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-select.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-select.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-select::before, .mdc-select::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-select.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-select::before, .mdc-select::after {\n    background-color: rgba(0, 0, 0, 0.87); }\n  .mdc-select:hover::before {\n    opacity: 0.04; }\n  .mdc-select:not(.mdc-ripple-upgraded):focus::before, .mdc-select.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__native-control {\n    color: rgba(0, 0, 0, 0.87); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__native-control {\n    border-bottom-color: rgba(0, 0, 0, 0.42); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__native-control:focus ~ .mdc-line-ripple {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__native-control:focus ~ .mdc-floating-label {\n    color: rgba(98, 0, 238, 0.87); }\n  .mdc-select:not(.mdc-select--disabled) .mdc-select__native-control:hover {\n    border-bottom-color: rgba(0, 0, 0, 0.87); }\n  .mdc-select .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-40%) scale(0.75);\n            transform: translateY(-40%) scale(0.75); }\n  .mdc-select .mdc-floating-label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    bottom: 12px;\n    line-height: 1.75rem;\n    pointer-events: none; }\n    [dir=\"rtl\"] .mdc-select .mdc-floating-label, .mdc-select .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    background-position: left 10px center; }\n  .mdc-select__native-control {\n    /* @noflip */\n    padding-left: 16px;\n    /* @noflip */\n    padding-right: 26px;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1rem;\n    line-height: 1.75rem;\n    font-weight: 400;\n    letter-spacing: 0.00937em;\n    text-decoration: inherit;\n    text-transform: inherit;\n    width: 100%;\n    height: 56px;\n    padding-top: 20px;\n    padding-bottom: 4px;\n    border: none;\n    border-bottom: 1px solid;\n    border-radius: 4px 4px 0 0;\n    outline: none;\n    background-color: transparent;\n    color: inherit;\n    white-space: nowrap;\n    cursor: pointer;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none; }\n    [dir=\"rtl\"] .mdc-select__native-control, .mdc-select__native-control[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 26px;\n      /* @noflip */\n      padding-right: 16px; }\n    .mdc-select__native-control::-ms-expand {\n      display: none; }\n    .mdc-select__native-control::-ms-value {\n      background-color: transparent;\n      color: inherit; }\n\n@-moz-document url-prefix(\"\") {\n  .mdc-select__native-control {\n    text-indent: -2px; } }\n    .mdc-select__native-control > option {\n      color: inherit; }\n  .mdc-select .mdc-select__native-control:focus ~ .mdc-line-ripple::after {\n    -webkit-transform: scale(1, 2);\n            transform: scale(1, 2);\n    opacity: 1; }\n\n.mdc-select--outlined {\n  border: none;\n  overflow: visible; }\n  .mdc-select--outlined:not(.mdc-select--disabled) {\n    background-color: transparent; }\n  .mdc-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.24); }\n  .mdc-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.24); }\n  .mdc-select--outlined:not(.mdc-select--disabled):not(.mdc-select__native-control:focus) .mdc-select__native-control:hover ~ .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.87); }\n  .mdc-select--outlined:not(.mdc-select--disabled):not(.mdc-select__native-control:focus) .mdc-select__native-control:hover ~ .mdc-notched-outline .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.87); }\n  .mdc-select--outlined:not(.mdc-select--disabled) .mdc-select__native-control:focus ~ .mdc-notched-outline .mdc-notched-outline__path {\n    stroke-width: 2px; }\n  .mdc-select--outlined:not(.mdc-select--disabled) .mdc-select__native-control:focus ~ .mdc-notched-outline .mdc-notched-outline__path {\n    stroke: #6200ee;\n    /* @alternate */\n    stroke: var(--mdc-theme-primary, #6200ee); }\n  .mdc-select--outlined .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-130%) scale(0.75);\n            transform: translateY(-130%) scale(0.75); }\n  .mdc-select--outlined .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1; }\n  .mdc-select--outlined .mdc-notched-outline {\n    border-radius: 4px; }\n  .mdc-select--outlined .mdc-notched-outline__idle {\n    border-radius: 4px; }\n  .mdc-select--outlined::before, .mdc-select--outlined::after {\n    background-color: transparent; }\n  .mdc-select--outlined:not(.mdc-select--disabled) {\n    background-color: transparent; }\n  .mdc-select--outlined .mdc-select__native-control {\n    /* @noflip */\n    padding-left: 16px;\n    /* @noflip */\n    padding-right: 26px;\n    display: flex;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    border: none;\n    background-color: transparent;\n    z-index: 1; }\n    [dir=\"rtl\"] .mdc-select--outlined .mdc-select__native-control, .mdc-select--outlined .mdc-select__native-control[dir=\"rtl\"] {\n      /* @noflip */\n      padding-left: 26px;\n      /* @noflip */\n      padding-right: 16px; }\n  .mdc-select--outlined .mdc-floating-label {\n    bottom: 20px;\n    line-height: 1.15rem;\n    pointer-events: auto; }\n\n.mdc-select--disabled {\n  background-image: url(\"data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23#000%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E\");\n  background-color: #fafafa;\n  cursor: default;\n  pointer-events: none; }\n  .mdc-select--disabled .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-select--disabled .mdc-line-ripple {\n    display: none; }\n  .mdc-select--disabled .mdc-select__native-control {\n    border-bottom-style: dotted;\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-select--disabled.mdc-select--outlined {\n    background-color: transparent; }\n    .mdc-select--disabled.mdc-select--outlined .mdc-select__native-control {\n      border-bottom-style: none; }\n    .mdc-select--disabled.mdc-select--outlined .mdc-notched-outline__idle {\n      border-color: rgba(0, 0, 0, 0.16); }\n    .mdc-select--disabled.mdc-select--outlined .mdc-notched-outline__path {\n      stroke: rgba(0, 0, 0, 0.16); }";
	styleInject(css$2);

	var css$3 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n.mdc-snackbar {\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  padding-right: 24px;\n  padding-left: 24px;\n  -webkit-transform: translate(-50%, 100%);\n          transform: translate(-50%, 100%);\n  transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  background-color: #323232;\n  pointer-events: none;\n  will-change: transform; }\n  @media (max-width: 599px) {\n    .mdc-snackbar {\n      left: 0;\n      width: 100%;\n      -webkit-transform: translate(0, 100%);\n              transform: translate(0, 100%); } }\n  @media (min-width: 600px) {\n    .mdc-snackbar {\n      min-width: 288px;\n      max-width: 568px;\n      border-radius: 2px; } }\n\n@media (min-width: 600px) {\n  .mdc-snackbar--align-start {\n    /* @noflip */\n    left: 24px;\n    /* @noflip */\n    right: initial;\n    bottom: 24px;\n    -webkit-transform: translate(0, 200%);\n            transform: translate(0, 200%); }\n    [dir=\"rtl\"] .mdc-snackbar--align-start, .mdc-snackbar--align-start[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 24px; } }\n\n@media (max-width: 599px) {\n  .mdc-snackbar--align-start {\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    -webkit-transform: translate(0, 100%);\n            transform: translate(0, 100%); } }\n\n.mdc-snackbar--active {\n  -webkit-transform: translate(0);\n          transform: translate(0);\n  transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n  pointer-events: auto; }\n  .mdc-snackbar--active:not(.mdc-snackbar--align-start) {\n    -webkit-transform: translate(-50%, 0);\n            transform: translate(-50%, 0); }\n    @media (max-width: 599px) {\n      .mdc-snackbar--active:not(.mdc-snackbar--align-start) {\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        -webkit-transform: translate(0);\n                transform: translate(0); } }\n\n.mdc-snackbar__action-wrapper {\n  /* @noflip */\n  padding-left: 24px;\n  /* @noflip */\n  padding-right: 0; }\n  [dir=\"rtl\"] .mdc-snackbar__action-wrapper, .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 0;\n    /* @noflip */\n    padding-right: 24px; }\n\n.mdc-snackbar--action-on-bottom {\n  flex-direction: column; }\n\n.mdc-snackbar__text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-weight: 400;\n  letter-spacing: 0.03125em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: auto;\n  display: flex;\n  align-items: center;\n  height: 48px;\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  opacity: 0;\n  color: white; }\n  .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__text,\n  [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__text {\n    /* @noflip */\n    margin-left: auto;\n    /* @noflip */\n    margin-right: 0; }\n  @media (min-width: 600px) {\n    .mdc-snackbar__text {\n      /* @noflip */\n      padding-left: 0;\n      /* @noflip */\n      padding-right: 24px; }\n      [dir=\"rtl\"] .mdc-snackbar__text, .mdc-snackbar__text[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 24px;\n        /* @noflip */\n        padding-right: 0; } }\n\n.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n  margin-right: inherit; }\n\n.mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper {\n  /* @noflip */\n  margin-left: auto;\n  /* @noflip */\n  margin-right: 0;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-top: -12px;\n  margin-bottom: 8px; }\n  [dir=\"rtl\"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: auto; }\n\n.mdc-snackbar--multiline .mdc-snackbar__text {\n  height: 80px; }\n\n.mdc-snackbar__action-button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.08929em;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786);\n  padding: 0;\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  border: none;\n  outline: none;\n  background-color: transparent;\n  opacity: 0;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-appearance: none;\n  visibility: hidden; }\n  .mdc-snackbar__action-button::-moz-focus-inner {\n    border: 0; }\n  .mdc-snackbar__action-button:hover {\n    cursor: pointer; }\n  .mdc-snackbar__action-button:not([aria-hidden]) {\n    visibility: inherit; }\n\n.mdc-snackbar--active .mdc-snackbar__text,\n.mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) {\n  transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n  opacity: 1; }\n\n.mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n  margin: 0; }";
	styleInject(css$3);

	var css$4 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-icon-button {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity;\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  font-size: 24px;\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  fill: currentColor;\n  color: inherit;\n  text-decoration: none;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .mdc-icon-button::before, .mdc-icon-button::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-button::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-icon-button.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-icon-button.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-button.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-icon-button.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-icon-button::before, .mdc-icon-button::after {\n    top: calc(50% - 50%);\n    /* @noflip */\n    left: calc(50% - 50%);\n    width: 100%;\n    height: 100%; }\n  .mdc-icon-button.mdc-ripple-upgraded::before, .mdc-icon-button.mdc-ripple-upgraded::after {\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    /* @noflip */\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-icon-button.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-icon-button svg,\n  .mdc-icon-button img {\n    width: 24px;\n    height: 24px; }\n  .mdc-icon-button:disabled {\n    color: rgba(0, 0, 0, 0.38);\n    /* @alternate */\n    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n    cursor: default;\n    pointer-events: none; }\n  .mdc-icon-button::before, .mdc-icon-button::after {\n    background-color: black; }\n  .mdc-icon-button:hover::before {\n    opacity: 0.04; }\n  .mdc-icon-button:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-button.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-icon-button:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  .mdc-icon-button:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-icon-button.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.16; }\n\n.mdc-icon-button__icon {\n  display: inline-block; }\n  .mdc-icon-button__icon.mdc-icon-button__icon--on {\n    display: none; }\n\n.mdc-icon-button--on .mdc-icon-button__icon {\n  display: none; }\n  .mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on {\n    display: inline-block; }";
	styleInject(css$4);

	var css$5 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-radio {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity;\n  display: inline-block;\n  position: relative;\n  flex: 0 0 auto;\n  box-sizing: border-box;\n  width: 40px;\n  height: 40px;\n  padding: 10px;\n  cursor: pointer;\n  /* @alternate */\n  will-change: opacity, transform, border-color, color; }\n  .mdc-radio .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.54); }\n  .mdc-radio .mdc-radio__native-control:enabled:checked + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-radio .mdc-radio__native-control:enabled + .mdc-radio__background .mdc-radio__inner-circle {\n    border-color: #018786;\n    /* @alternate */\n    border-color: var(--mdc-theme-secondary, #018786); }\n  .mdc-radio .mdc-radio__background::before {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-radio .mdc-radio__background::before {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-radio::before, .mdc-radio::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-radio::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-radio.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-radio.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-radio::before, .mdc-radio::after {\n    top: calc(50% - 50%);\n    /* @noflip */\n    left: calc(50% - 50%);\n    width: 100%;\n    height: 100%; }\n  .mdc-radio.mdc-ripple-upgraded::before, .mdc-radio.mdc-ripple-upgraded::after {\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    /* @noflip */\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-radio::before, .mdc-radio::after {\n    background-color: #018786; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-radio::before, .mdc-radio::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-secondary, #018786); } }\n  .mdc-radio:hover::before {\n    opacity: 0.04; }\n  .mdc-radio:not(.mdc-ripple-upgraded):focus::before, .mdc-radio.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-radio:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  .mdc-radio:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-radio.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.16; }\n  .mdc-radio__background {\n    display: inline-block;\n    position: absolute;\n    left: 10px;\n    box-sizing: border-box;\n    width: 50%;\n    height: 50%; }\n    .mdc-radio__background::before {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      -webkit-transform: scale(0, 0);\n              transform: scale(0, 0);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n  .mdc-radio__outer-circle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%; }\n  .mdc-radio__inner-circle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n    transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n    border-width: 10px;\n    border-style: solid;\n    border-radius: 50%; }\n  .mdc-radio__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    opacity: 0;\n    cursor: inherit;\n    z-index: 1; }\n  .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__background::before {\n    content: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background,\n.mdc-radio__native-control:disabled + .mdc-radio__background {\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle {\n    transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle {\n    transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio--disabled {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle {\n  -webkit-transform: scale(0.5);\n          transform: scale(0.5);\n  transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio__native-control:disabled + .mdc-radio__background,\n[aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background {\n  cursor: default; }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.26); }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n    border-color: rgba(0, 0, 0, 0.26); }\n\n.mdc-radio__native-control:focus + .mdc-radio__background::before {\n  -webkit-transform: scale(2, 2);\n          transform: scale(2, 2);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0.12; }";
	styleInject(css$5);

	var css$6 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.01786em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field > label {\n    order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }";
	styleInject(css$6);

	var css$7 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n.mdc-floating-label {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  position: absolute;\n  bottom: 8px;\n  left: 0;\n  -webkit-transform-origin: left top;\n          transform-origin: left top;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  line-height: 1.15rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: text;\n  overflow: hidden;\n  will-change: transform; }\n  [dir=\"rtl\"] .mdc-floating-label, .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    right: 0;\n    /* @noflip */\n    left: auto;\n    /* @noflip */\n    -webkit-transform-origin: right top;\n            transform-origin: right top; }\n\n.mdc-floating-label--float-above {\n  cursor: auto; }\n\n.mdc-floating-label--float-above {\n  -webkit-transform: translateY(-100%) scale(0.75);\n          transform: translateY(-100%) scale(0.75); }\n\n.mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-standard 250ms 1;\n          animation: mdc-floating-label-shake-float-above-standard 250ms 1; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-standard {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-100%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-100%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-100%) scale(0.75); } }\n\n.mdc-line-ripple {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  -webkit-transform: scaleX(0);\n          transform: scaleX(0);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  z-index: 2; }\n\n.mdc-line-ripple--active {\n  -webkit-transform: scaleX(1);\n          transform: scaleX(1);\n  opacity: 1; }\n\n.mdc-line-ripple--deactivating {\n  opacity: 0; }\n\n.mdc-notched-outline,\n.mdc-notched-outline__idle {\n  position: absolute;\n  top: 0;\n  left: 0;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%; }\n\n.mdc-notched-outline {\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  text-align: left;\n  overflow: hidden; }\n  [dir=\"rtl\"] .mdc-notched-outline, .mdc-notched-outline[dir=\"rtl\"] {\n    text-align: right; }\n  .mdc-notched-outline svg {\n    position: absolute;\n    width: 100%;\n    height: 100%; }\n\n.mdc-notched-outline__idle {\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1), border-color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid;\n  opacity: 1; }\n\n.mdc-notched-outline__path {\n  stroke-width: 1px;\n  transition: stroke 150ms cubic-bezier(0.4, 0, 0.2, 1), stroke-width 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: transparent; }\n\n.mdc-notched-outline--notched {\n  opacity: 1; }\n\n.mdc-notched-outline--notched ~ .mdc-notched-outline__idle {\n  opacity: 0; }\n\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-text-field-helper-text {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.75rem;\n  line-height: 1.25rem;\n  font-weight: 400;\n  letter-spacing: 0.03333em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  display: block;\n  margin-top: 0;\n  line-height: normal;\n  margin: 0;\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  will-change: opacity; }\n  .mdc-text-field-helper-text::before {\n    display: inline-block;\n    width: 0;\n    height: 16px;\n    content: \"\";\n    vertical-align: 0; }\n\n.mdc-text-field-helper-text--persistent {\n  transition: none;\n  opacity: 1;\n  will-change: initial; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__icon,\n.mdc-text-field--with-trailing-icon .mdc-text-field__icon {\n  position: absolute;\n  bottom: 16px;\n  cursor: pointer; }\n\n.mdc-text-field__icon:not([tabindex]),\n.mdc-text-field__icon[tabindex=\"-1\"] {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-text-field {\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity;\n  border-radius: 4px 4px 0 0;\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  height: 56px;\n  overflow: hidden;\n  will-change: opacity, transform, color; }\n  .mdc-text-field::before, .mdc-text-field::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-text-field::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-text-field.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-text-field.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-text-field.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-text-field.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-text-field.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-text-field::before, .mdc-text-field::after {\n    background-color: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field:hover::before {\n    opacity: 0.04; }\n  .mdc-text-field:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-text-field::before, .mdc-text-field::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-text-field.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input {\n    color: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field .mdc-text-field__input {\n    caret-color: #6200ee;\n    /* @alternate */\n    caret-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input {\n    border-bottom-color: rgba(0, 0, 0, 0.42); }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input:hover {\n    border-bottom-color: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field .mdc-line-ripple {\n    background-color: #6200ee;\n    /* @alternate */\n    background-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--textarea) {\n    border-bottom-color: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-text {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon {\n    color: rgba(0, 0, 0, 0.54); }\n  .mdc-text-field:not(.mdc-text-field--disabled) {\n    background-color: whitesmoke; }\n  .mdc-text-field .mdc-floating-label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    bottom: 20px; }\n    [dir=\"rtl\"] .mdc-text-field .mdc-floating-label, .mdc-text-field .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n  .mdc-text-field:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-floating-label {\n    max-width: calc(100% - 48px); }\n  .mdc-text-field .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-50%) scale(0.75);\n            transform: translateY(-50%) scale(0.75); }\n  .mdc-text-field .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-box 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-box 250ms 1; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-box {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-box {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.75); } }\n  .mdc-text-field .mdc-floating-label {\n    /* @noflip */\n    left: 12px;\n    /* @noflip */\n    right: initial;\n    pointer-events: none; }\n    [dir=\"rtl\"] .mdc-text-field .mdc-floating-label, .mdc-text-field .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 12px; }\n\n.mdc-text-field__input {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: 0.00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  align-self: flex-end;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  padding: 20px 12px 6px;\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  border-bottom: 1px solid;\n  border-radius: 0;\n  background: none;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none; }\n  .mdc-text-field__input::-webkit-input-placeholder {\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input:-ms-input-placeholder {\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input::-ms-input-placeholder {\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input::placeholder {\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-text-field__input:focus {\n    outline: none; }\n  .mdc-text-field__input:invalid {\n    box-shadow: none; }\n\n.mdc-text-field__input:-webkit-autofill + .mdc-floating-label {\n  -webkit-transform: translateY(-50%) scale(0.75);\n          transform: translateY(-50%) scale(0.75);\n  cursor: auto; }\n\n.mdc-text-field--outlined {\n  border: none;\n  overflow: visible; }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.24); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.24); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline__idle,\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline .mdc-notched-outline__path,\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.87); }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__path {\n    stroke: #6200ee;\n    /* @alternate */\n    stroke: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field--outlined .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-130%) scale(0.75);\n            transform: translateY(-130%) scale(0.75); }\n  .mdc-text-field--outlined .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1; }\n  .mdc-text-field--outlined .mdc-notched-outline {\n    border-radius: 4px; }\n  .mdc-text-field--outlined .mdc-notched-outline__idle {\n    border-radius: 4px; }\n  .mdc-text-field--outlined::before, .mdc-text-field--outlined::after {\n    background-color: transparent; }\n  .mdc-text-field--outlined:not(.mdc-text-field--disabled) {\n    background-color: transparent; }\n  .mdc-text-field--outlined .mdc-text-field__input {\n    display: flex;\n    padding: 12px 16px 14px;\n    border: none !important;\n    background-color: transparent;\n    z-index: 1; }\n  .mdc-text-field--outlined .mdc-text-field__icon {\n    z-index: 2; }\n  .mdc-text-field--outlined .mdc-floating-label {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial;\n    width: auto; }\n    [dir=\"rtl\"] .mdc-text-field--outlined .mdc-floating-label, .mdc-text-field--outlined .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: initial;\n      /* @noflip */\n      right: 16px; }\n\n.mdc-text-field--outlined.mdc-text-field--focused .mdc-notched-outline__path {\n  stroke-width: 2px; }\n\n.mdc-text-field--outlined.mdc-text-field--disabled {\n  background-color: transparent; }\n  .mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input {\n    color: rgba(0, 0, 0, 0.6); }\n  .mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__idle {\n    border-color: rgba(0, 0, 0, 0.06); }\n  .mdc-text-field--outlined.mdc-text-field--disabled .mdc-notched-outline__path {\n    stroke: rgba(0, 0, 0, 0.06); }\n  .mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input {\n    border-bottom: none; }\n\n.mdc-text-field--outlined.mdc-text-field--dense {\n  height: 48px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-110%) scale(0.923);\n            transform: translateY(-110%) scale(0.923); }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-dense 250ms 1;\n            animation: mdc-floating-label-shake-float-above-text-field-outlined-dense 250ms 1; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-text-field__input {\n    padding: 12px 12px 7px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label {\n    bottom: 16px; }\n  .mdc-text-field--outlined.mdc-text-field--dense .mdc-text-field__icon {\n    top: 12px; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__icon {\n  /* @noflip */\n  left: 16px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--with-leading-icon .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 16px; }\n\n.mdc-text-field--with-leading-icon .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 48px;\n  /* @noflip */\n  padding-right: 16px; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-text-field__input, .mdc-text-field--with-leading-icon .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 16px;\n    /* @noflip */\n    padding-right: 48px; }\n\n.mdc-text-field--with-leading-icon .mdc-floating-label {\n  /* @noflip */\n  left: 48px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon .mdc-floating-label, .mdc-text-field--with-leading-icon .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 48px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-130%) translateX(-32px) scale(0.75);\n          transform: translateY(-130%) translateX(-32px) scale(0.75); }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=\"rtl\"] {\n    -webkit-transform: translateY(-130%) translateX(32px) scale(0.75);\n            transform: translateY(-130%) translateX(32px) scale(0.75); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1; }\n\n[dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake, .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=\"rtl\"] .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl 250ms 1; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-110%) translateX(-21px) scale(0.923);\n          transform: translateY(-110%) translateX(-21px) scale(0.923); }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--float-above[dir=\"rtl\"] {\n    -webkit-transform: translateY(-110%) translateX(21px) scale(0.923);\n            transform: translateY(-110%) translateX(21px) scale(0.923); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense 250ms 1; }\n\n[dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense .mdc-floating-label--shake, .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-text-field--dense[dir=\"rtl\"] .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense-rtl 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense-rtl 250ms 1; }\n\n.mdc-text-field--with-trailing-icon .mdc-text-field__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 12px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon .mdc-text-field__icon, .mdc-text-field--with-trailing-icon .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: 12px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-text-field--with-trailing-icon .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 12px;\n  /* @noflip */\n  padding-right: 48px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon .mdc-text-field__input, .mdc-text-field--with-trailing-icon .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 48px;\n    /* @noflip */\n    padding-right: 12px; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 16px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: 16px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 16px;\n  /* @noflip */\n  padding-right: 48px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__input, .mdc-text-field--with-trailing-icon.mdc-text-field--outlined .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 48px;\n    /* @noflip */\n    padding-right: 16px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon,\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {\n  bottom: 16px;\n  -webkit-transform: scale(0.8);\n          transform: scale(0.8); }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon {\n  /* @noflip */\n  left: 12px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 12px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 38px;\n  /* @noflip */\n  padding-right: 12px; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 12px;\n    /* @noflip */\n    padding-right: 38px; }\n\n.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label {\n  /* @noflip */\n  left: 38px;\n  /* @noflip */\n  right: initial; }\n  [dir=\"rtl\"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-floating-label[dir=\"rtl\"] {\n    /* @noflip */\n    left: initial;\n    /* @noflip */\n    right: 38px; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon {\n  /* @noflip */\n  left: initial;\n  /* @noflip */\n  right: 12px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon[dir=\"rtl\"] {\n    /* @noflip */\n    left: 12px;\n    /* @noflip */\n    right: initial; }\n\n.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input {\n  /* @noflip */\n  padding-left: 12px;\n  /* @noflip */\n  padding-right: 38px; }\n  [dir=\"rtl\"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input[dir=\"rtl\"] {\n    /* @noflip */\n    padding-left: 38px;\n    /* @noflip */\n    padding-right: 12px; }\n\n.mdc-text-field--dense .mdc-floating-label--float-above {\n  -webkit-transform: translateY(-70%) scale(0.923);\n          transform: translateY(-70%) scale(0.923); }\n\n.mdc-text-field--dense .mdc-floating-label--shake {\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-dense 250ms 1;\n          animation: mdc-floating-label-shake-float-above-text-field-dense 250ms 1; }\n\n.mdc-text-field--dense .mdc-text-field__input {\n  padding: 12px 12px 0; }\n\n.mdc-text-field--dense .mdc-floating-label {\n  font-size: .813rem; }\n\n.mdc-text-field__input:required + .mdc-floating-label::after {\n  margin-left: 1px;\n  content: \"*\"; }\n\n.mdc-text-field--textarea {\n  border-radius: 4px;\n  display: flex;\n  width: auto;\n  height: auto;\n  transition: none;\n  border: 1px solid;\n  overflow: hidden; }\n  .mdc-text-field--textarea .mdc-floating-label {\n    border-radius: 4px 4px 0 0; }\n  .mdc-text-field--textarea .mdc-text-field__input {\n    border-radius: 2px; }\n  .mdc-text-field--textarea:not(.mdc-text-field--disabled) {\n    border-color: rgba(0, 0, 0, 0.73); }\n    .mdc-text-field--textarea:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n      border-color: rgba(0, 0, 0, 0.73); }\n  .mdc-text-field--textarea .mdc-floating-label--float-above {\n    -webkit-transform: translateY(-50%) scale(0.923);\n            transform: translateY(-50%) scale(0.923); }\n  .mdc-text-field--textarea .mdc-floating-label--shake {\n    -webkit-animation: mdc-floating-label-shake-float-above-textarea 250ms 1;\n            animation: mdc-floating-label-shake-float-above-textarea 250ms 1; }\n  .mdc-text-field--textarea::before, .mdc-text-field--textarea::after {\n    background-color: transparent; }\n  .mdc-text-field--textarea:not(.mdc-text-field--disabled) {\n    background-color: transparent; }\n  .mdc-text-field--textarea .mdc-text-field__input {\n    align-self: auto;\n    box-sizing: content-box;\n    height: auto;\n    margin: 0;\n    padding: 16px;\n    padding-top: 32px;\n    border: 1px solid transparent; }\n  .mdc-text-field--textarea .mdc-floating-label {\n    background-color: white;\n    /* @noflip */\n    left: 1px;\n    /* @noflip */\n    right: 0;\n    /* @noflip */\n    margin-left: 8px;\n    /* @noflip */\n    margin-right: 0;\n    top: 18px;\n    bottom: auto;\n    width: auto;\n    margin-top: 2px;\n    padding: 12px 8px 8px 8px;\n    line-height: 1.15;\n    pointer-events: none; }\n    [dir=\"rtl\"] .mdc-text-field--textarea .mdc-floating-label, .mdc-text-field--textarea .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      left: 0;\n      /* @noflip */\n      right: 1px; }\n    [dir=\"rtl\"] .mdc-text-field--textarea .mdc-floating-label, .mdc-text-field--textarea .mdc-floating-label[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 8px; }\n\n.mdc-text-field--fullwidth {\n  width: 100%; }\n  .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) {\n    display: block; }\n    .mdc-text-field--fullwidth:not(.mdc-text-field--textarea)::before, .mdc-text-field--fullwidth:not(.mdc-text-field--textarea)::after {\n      background-color: transparent; }\n    .mdc-text-field--fullwidth:not(.mdc-text-field--textarea):not(.mdc-text-field--disabled) {\n      background-color: transparent; }\n    .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__input {\n      padding: 0; }\n\n.mdc-text-field--fullwidth.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--textarea) {\n  border-bottom-color: #b00020; }\n\n.mdc-text-field--dense + .mdc-text-field-helper-text {\n  margin-bottom: 4px; }\n\n.mdc-text-field + .mdc-text-field-helper-text {\n  margin-right: 12px;\n  margin-left: 12px; }\n\n.mdc-text-field--outlined + .mdc-text-field-helper-text {\n  margin-right: 16px;\n  margin-left: 16px; }\n\n.mdc-form-field > .mdc-text-field + label {\n  align-self: flex-start; }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(98, 0, 238, 0.87); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n  color: rgba(98, 0, 238, 0.87); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n  color: rgba(98, 0, 238, 0.87); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n  color: rgba(98, 0, 238, 0.87); }\n\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n  color: rgba(98, 0, 238, 0.87); }\n\n.mdc-text-field--focused .mdc-text-field__input:required + .mdc-floating-label::after {\n  color: #b00020; }\n\n.mdc-text-field--focused + .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n  opacity: 1; }\n\n.mdc-text-field--textarea.mdc-text-field--focused:not(.mdc-text-field--disabled) {\n  border-color: #6200ee;\n  /* @alternate */\n  border-color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-text-field--textarea.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n    border-color: #6200ee;\n    /* @alternate */\n    border-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input {\n  border-bottom-color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mdc-text-field__input:hover {\n  border-bottom-color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple {\n  background-color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\n  color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n  color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\n  color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n  color: #b00020; }\n\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {\n  color: #b00020; }\n\n.mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: #b00020; }\n\n.mdc-text-field--invalid.mdc-text-field--with-trailing-icon:not(.mdc-text-field--disabled) .mdc-text-field__icon {\n  color: #b00020; }\n\n.mdc-text-field--invalid + .mdc-text-field-helper-text--validation-msg {\n  opacity: 1; }\n\n.mdc-text-field--textarea.mdc-text-field--invalid:not(.mdc-text-field--disabled) {\n  border-color: #b00020; }\n  .mdc-text-field--textarea.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input:focus {\n    border-color: #b00020; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__idle {\n  border-color: #b00020; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__path {\n  stroke: #b00020; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline__idle,\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline__idle {\n  border-color: #b00020; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__input:hover ~ .mdc-notched-outline .mdc-notched-outline__path,\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused) .mdc-text-field__icon:hover ~ .mdc-notched-outline .mdc-notched-outline__path {\n  stroke: #b00020; }\n\n.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__path {\n  stroke: #b00020; }\n\n.mdc-text-field--disabled {\n  background-color: #fafafa;\n  border-bottom: none;\n  pointer-events: none; }\n  .mdc-text-field--disabled .mdc-text-field__input {\n    border-bottom-color: rgba(0, 0, 0, 0.06); }\n  .mdc-text-field--disabled .mdc-text-field__input {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-floating-label {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-text-field__input::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-text-field__input::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled + .mdc-text-field-helper-text {\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-text-field--disabled .mdc-text-field__icon {\n    color: rgba(0, 0, 0, 0.3); }\n  .mdc-text-field--disabled:not(.mdc-text-field--textarea) {\n    border-bottom-color: rgba(0, 0, 0, 0.12); }\n  .mdc-text-field--disabled .mdc-floating-label {\n    cursor: default; }\n\n.mdc-text-field--textarea.mdc-text-field--disabled {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: #f9f9f9;\n  border-bottom-width: 1px;\n  border-style: solid; }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__input:focus {\n    border-color: rgba(0, 0, 0, 0.26); }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__input {\n    border: 1px solid transparent; }\n  .mdc-text-field--textarea.mdc-text-field--disabled .mdc-floating-label {\n    background-color: #f9f9f9; }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-70%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-70%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-70%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-70%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-70%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 0%)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 0%)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 0%)) translateY(-130%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-110%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\n  0% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\n  0% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - 32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - 32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - 32px)) translateY(-130%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - 21px)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - 21px)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense {\n  0% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - 21px)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - 21px)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - 21px)) translateY(-110%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl {\n  0% {\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - -32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - -32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl {\n  0% {\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(4% - -32px)) translateY(-130%) scale(0.75); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(-4% - -32px)) translateY(-130%) scale(0.75); }\n  100% {\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75);\n            transform: translateX(calc(0 - -32px)) translateY(-130%) scale(0.75); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense-rtl {\n  0% {\n    -webkit-transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - -21px)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - -21px)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-dense-rtl {\n  0% {\n    -webkit-transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(4% - -21px)) translateY(-110%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(-4% - -21px)) translateY(-110%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923);\n            transform: translateX(calc(0 - -21px)) translateY(-110%) scale(0.923); } }\n\n@-webkit-keyframes mdc-floating-label-shake-float-above-textarea {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); } }\n\n@keyframes mdc-floating-label-shake-float-above-textarea {\n  0% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); }\n  33% {\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n            animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(4% - 0%)) translateY(-50%) scale(0.923); }\n  66% {\n    -webkit-animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n            animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(-4% - 0%)) translateY(-50%) scale(0.923); }\n  100% {\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923);\n            transform: translateX(calc(0 - 0%)) translateY(-50%) scale(0.923); } }";
	styleInject(css$7);

	var css$8 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: 0; }\n  to {\n    opacity: var(--mdc-ripple-fg-opacity, 0); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    opacity: var(--mdc-ripple-fg-opacity, 0); }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface--test-edge-var-bug {\n  --mdc-ripple-surface-test-edge-var: 1px solid #000;\n  visibility: hidden; }\n  .mdc-ripple-surface--test-edge-var-bug::before {\n    border: var(--mdc-ripple-surface-test-edge-var); }\n\n.mdc-button {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  line-height: 2.25rem;\n  font-weight: 500;\n  letter-spacing: 0.08929em;\n  text-decoration: none;\n  text-transform: uppercase;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: transform, opacity;\n  padding: 0 8px 0 8px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  min-width: 64px;\n  height: 36px;\n  border: none;\n  outline: none;\n  /* @alternate */\n  line-height: inherit;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  vertical-align: middle;\n  border-radius: 2px; }\n  .mdc-button::before, .mdc-button::after {\n    position: absolute;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button::before {\n    transition: opacity 15ms linear;\n    z-index: 1; }\n  .mdc-button.mdc-ripple-upgraded::before {\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\n            transform: scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button.mdc-ripple-upgraded::after {\n    top: 0;\n    /* @noflip */\n    left: 0;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::after {\n    top: var(--mdc-ripple-top, 0);\n    /* @noflip */\n    left: var(--mdc-ripple-left, 0); }\n  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards;\n            animation: 225ms mdc-ripple-fg-radius-in forwards, 75ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-animation: 150ms mdc-ripple-fg-opacity-out;\n            animation: 150ms mdc-ripple-fg-opacity-out;\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }\n  .mdc-button::before, .mdc-button::after {\n    top: calc(50% - 100%);\n    /* @noflip */\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%; }\n  .mdc-button.mdc-ripple-upgraded::after {\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: var(--mdc-ripple-fg-size, 100%); }\n  .mdc-button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-button:active {\n    outline: none; }\n  .mdc-button:hover {\n    cursor: pointer; }\n  .mdc-button:disabled {\n    background-color: transparent;\n    color: rgba(0, 0, 0, 0.37);\n    cursor: default;\n    pointer-events: none; }\n  .mdc-button:not(:disabled) {\n    background-color: transparent; }\n  .mdc-button:not(:disabled) {\n    color: #6200ee;\n    /* @alternate */\n    color: var(--mdc-theme-primary, #6200ee); }\n  .mdc-button::before, .mdc-button::after {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-button::before, .mdc-button::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-button:hover::before {\n    opacity: 0.04; }\n  .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.12; }\n  .mdc-button:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  .mdc-button:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.16; }\n  .mdc-button.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.16; }\n  .mdc-button .mdc-button__icon {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 8px;\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    font-size: 18px;\n    vertical-align: top; }\n    [dir=\"rtl\"] .mdc-button .mdc-button__icon, .mdc-button .mdc-button__icon[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 8px;\n      /* @noflip */\n      margin-right: 0; }\n  .mdc-button svg.mdc-button__icon {\n    fill: currentColor; }\n\n.mdc-button--raised .mdc-button__icon,\n.mdc-button--unelevated .mdc-button__icon,\n.mdc-button--outlined .mdc-button__icon {\n  /* @noflip */\n  margin-left: -4px;\n  /* @noflip */\n  margin-right: 8px; }\n  [dir=\"rtl\"] .mdc-button--raised .mdc-button__icon, .mdc-button--raised .mdc-button__icon[dir=\"rtl\"], [dir=\"rtl\"]\n  .mdc-button--unelevated .mdc-button__icon,\n  .mdc-button--unelevated .mdc-button__icon[dir=\"rtl\"], [dir=\"rtl\"]\n  .mdc-button--outlined .mdc-button__icon,\n  .mdc-button--outlined .mdc-button__icon[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 8px;\n    /* @noflip */\n    margin-right: -4px; }\n\n.mdc-button--raised,\n.mdc-button--unelevated {\n  padding: 0 16px 0 16px; }\n  .mdc-button--raised:disabled,\n  .mdc-button--unelevated:disabled {\n    background-color: rgba(0, 0, 0, 0.12);\n    color: rgba(0, 0, 0, 0.37); }\n  .mdc-button--raised:not(:disabled),\n  .mdc-button--unelevated:not(:disabled) {\n    background-color: #6200ee; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-button--raised:not(:disabled),\n      .mdc-button--unelevated:not(:disabled) {\n        /* @alternate */\n        background-color: var(--mdc-theme-primary, #6200ee); } }\n  .mdc-button--raised:not(:disabled),\n  .mdc-button--unelevated:not(:disabled) {\n    color: #fff;\n    /* @alternate */\n    color: var(--mdc-theme-on-primary, #fff); }\n  .mdc-button--raised::before, .mdc-button--raised::after,\n  .mdc-button--unelevated::before,\n  .mdc-button--unelevated::after {\n    background-color: #fff; }\n    @supports not (-ms-ime-align: auto) {\n      .mdc-button--raised::before, .mdc-button--raised::after,\n      .mdc-button--unelevated::before,\n      .mdc-button--unelevated::after {\n        /* @alternate */\n        background-color: var(--mdc-theme-on-primary, #fff); } }\n  .mdc-button--raised:hover::before,\n  .mdc-button--unelevated:hover::before {\n    opacity: 0.08; }\n  .mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-ripple-upgraded--background-focused::before,\n  .mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before,\n  .mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before {\n    transition-duration: 75ms;\n    opacity: 0.24; }\n  .mdc-button--raised:not(.mdc-ripple-upgraded)::after,\n  .mdc-button--unelevated:not(.mdc-ripple-upgraded)::after {\n    transition: opacity 150ms linear; }\n  .mdc-button--raised:not(.mdc-ripple-upgraded):active::after,\n  .mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 75ms;\n    opacity: 0.32; }\n  .mdc-button--raised.mdc-ripple-upgraded,\n  .mdc-button--unelevated.mdc-ripple-upgraded {\n    --mdc-ripple-fg-opacity: 0.32; }\n\n.mdc-button--raised {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-button--raised:hover, .mdc-button--raised:focus {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:active {\n    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n  .mdc-button--raised:disabled {\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-button--outlined {\n  border-style: solid;\n  padding: 0 14px 0 14px;\n  border-width: 2px; }\n  .mdc-button--outlined:disabled {\n    border-color: rgba(0, 0, 0, 0.37); }\n  .mdc-button--outlined:not(:disabled) {\n    border-color: #6200ee;\n    /* @alternate */\n    border-color: var(--mdc-theme-primary, #6200ee); }\n\n.mdc-button--dense {\n  height: 32px;\n  font-size: .8125rem; }";
	styleInject(css$8);

	var css$9 = "/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n.mdc-dialog {\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  z-index: 5; }\n\n.mdc-dialog__backdrop {\n  background-color: rgba(0, 0, 0, 0.87);\n  /* @alternate */\n  background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  position: fixed;\n  top: 0;\n  left: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  z-index: -1; }\n\n.mdc-dialog__surface {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background-color: #fff;\n  /* @alternate */\n  background-color: var(--mdc-theme-background, #fff);\n  display: inline-flex;\n  flex-direction: column;\n  width: calc(100% - 30px);\n  min-width: 640px;\n  max-width: 865px;\n  -webkit-transform: translateY(150px) scale(0.8);\n          transform: translateY(150px) scale(0.8);\n  border-radius: 2px;\n  opacity: 0; }\n  .mdc-dialog[dir=\"rtl\"] .mdc-dialog__surface,\n  [dir=\"rtl\"] .mdc-dialog .mdc-dialog__surface {\n    text-align: right; }\n\n.mdc-dialog__header {\n  display: flex;\n  align-items: center;\n  padding: 24px 24px 0; }\n  .mdc-dialog[dir=\"rtl\"] .mdc-dialog__header,\n  [dir=\"rtl\"] .mdc-dialog .mdc-dialog__header {\n    text-align: right; }\n\n.mdc-dialog__header__empty {\n  padding: 0; }\n\n.mdc-dialog__header__title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.25rem;\n  line-height: 2rem;\n  font-weight: 500;\n  letter-spacing: 0.0125em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  flex: 1;\n  margin: 0; }\n\n.mdc-dialog__body {\n  color: rgba(0, 0, 0, 0.54);\n  /* @alternate */\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-weight: 400;\n  letter-spacing: 0.03125em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  margin-top: 20px;\n  padding: 0 24px 24px; }\n\n.mdc-dialog__body--scrollable {\n  max-height: 195px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  overflow-x: auto;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch; }\n\n.mdc-dialog__footer {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 8px; }\n\n.mdc-dialog__footer__button {\n  /* @noflip */\n  margin-left: 0;\n  /* @noflip */\n  margin-right: 8px; }\n  [dir=\"rtl\"] .mdc-dialog__footer__button, .mdc-dialog__footer__button[dir=\"rtl\"] {\n    /* @noflip */\n    margin-left: 8px;\n    /* @noflip */\n    margin-right: 0; }\n  .mdc-dialog__footer__button:last-child {\n    /* @noflip */\n    margin-left: 0;\n    /* @noflip */\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-dialog__footer__button:last-child, .mdc-dialog__footer__button:last-child[dir=\"rtl\"] {\n      /* @noflip */\n      margin-left: 0;\n      /* @noflip */\n      margin-right: 0; }\n\n.mdc-dialog__action:not(:disabled) {\n  color: #018786;\n  /* @alternate */\n  color: var(--mdc-theme-secondary, #018786); }\n\n@media (max-width: 640px) {\n  .mdc-dialog {\n    min-width: 280px; }\n  .mdc-dialog__surface {\n    min-width: 280px; }\n  .mdc-dialog__body {\n    line-height: 24px; } }\n\n.mdc-dialog--animating {\n  visibility: visible; }\n  .mdc-dialog--animating .mdc-dialog__backdrop {\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-dialog--animating .mdc-dialog__surface {\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-dialog--open {\n  visibility: visible; }\n  .mdc-dialog--open .mdc-dialog__backdrop {\n    opacity: .3; }\n  .mdc-dialog--open .mdc-dialog__surface {\n    -webkit-transform: translateY(0) scale(1);\n            transform: translateY(0) scale(1);\n    opacity: 1; }\n\n.mdc-dialog-scroll-lock {\n  overflow: hidden; }";
	styleInject(css$9);

	class DialogForm extends d {
	  constructor(...args) {
	    super(...args);

	    _defineProperty(this, "state", {
	      object: null,
	      objectType: null,
	      objectToBe: {
	        title: "",
	        description: "",
	        author: null,
	        work_classification: -1,
	        activity_classification: -1
	      },
	      parentID: null,
	      isNode: null,
	      isStrategy: null,
	      isActivity: null,
	      isWeek: null,
	      isCourse: null,
	      isProgram: null,
	      isCourseLevelComponent: null,
	      isProgramLevelComponent: null,
	      isDeleteForm: false,
	      isUpdateForm: false
	    });

	    _defineProperty(this, "componentDidMount", e => {
	      exports.currentComponentInstance = this;
	    });

	    _defineProperty(this, "onSubmit", e => {
	      if (this.state.isDeleteForm) {
	        deleteNode(this);
	      } else if (this.state.isUpdateForm) {
	        updateNode(this);
	      } else {
	        createNode(this);
	      }

	      e.preventDefault();
	      this.setState({
	        object: null,
	        objectType: null,
	        objectToBe: {
	          title: "",
	          description: "",
	          author: null,
	          work_classification: -1,
	          activity_classification: -1
	        },
	        parentID: null,
	        isNode: null,
	        isStrategy: null,
	        isActivity: null,
	        isWeek: null,
	        isCourse: null,
	        isProgram: null,
	        isCourseLevelComponent: null,
	        isProgramLevelComponent: null,
	        isDeleteForm: false,
	        isUpdateForm: false
	      });
	    });

	    _defineProperty(this, "onClose", e => {
	      e.preventDefault();
	      this.setState({
	        object: null,
	        objectType: null,
	        objectToBe: {
	          title: "",
	          description: "",
	          author: null,
	          work_classification: -1,
	          activity_classification: -1
	        },
	        parentID: null,
	        isNode: null,
	        isStrategy: null,
	        isActivity: null,
	        isWeek: null,
	        isCourse: null,
	        isProgram: null,
	        isCourseLevelComponent: null,
	        isProgramLevelComponent: null,
	        isDeleteForm: false,
	        isUpdateForm: false
	      });
	    });

	    _defineProperty(this, "updateObjectToBeDescription", e => {
	      this.setState({
	        objectToBe: _objectSpread2({}, this.state.objectToBe, {
	          description: e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectDescription", e => {
	      this.setState({
	        object: _objectSpread2({}, this.state.object, {
	          description: e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectToBeTitle", e => {
	      this.setState({
	        objectToBe: _objectSpread2({}, this.state.objectToBe, {
	          title: e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectTitle", e => {
	      this.setState({
	        object: _objectSpread2({}, this.state.object, {
	          title: e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectToBeWorkClassification", e => {
	      this.setState({
	        objectToBe: _objectSpread2({}, this.state.objectToBe, {
	          work_classification: +e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectWorkClassification", e => {
	      this.setState({
	        object: _objectSpread2({}, this.state.object, {
	          work_classification: +e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectToBeActivityClassification", e => {
	      this.setState({
	        objectToBe: _objectSpread2({}, this.state.objectToBe, {
	          activity_classification: +e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectActivityClassification", e => {
	      this.setState({
	        object: _objectSpread2({}, this.state.object, {
	          activity_classification: +e.target.value
	        })
	      });
	    });

	    _defineProperty(this, "updateObjectType", e => {
	      this.setState({
	        objectType: e.target.value
	      });
	    });
	  }

	  render() {
	    if (this.state.isDeleteForm) {
	      return h("div", null, h(Dialog //    style="padding: 0; border: 0; width: 0;"
	      , {
	        ref: dlg => {
	          this.dlg = dlg;
	        }
	      }, h("form", {
	        class: "deletion-form"
	      }, h(Dialog.Header, null, this.state.object.title), h(Dialog.Body, {
	        scrollable: false
	      }, "Are you sure you'd like to delete this ", this.state.objectType, "?"), h(Dialog.Footer, null, h(Dialog.FooterButton, {
	        id: "cancel-button",
	        cancel: true,
	        onClick: this.onClose
	      }, "Cancel"), h(Dialog.FooterButton, {
	        id: "submit-button",
	        accept: true,
	        disabled: false,
	        raised: true,
	        onClick: this.onSubmit
	      }, "Delete")))), h(Snackbar, {
	        ref: snack => {
	          this.snack = snack;
	        }
	      }));
	    }

	    if (this.state.isUpdateForm) {
	      return h("div", null, h(Dialog //  style="padding: 0; border: 0; width: 0;"
	      , {
	        ref: dlg => {
	          this.dlg = dlg;
	        }
	      }, h("form", {
	        class: "update-form"
	      }, h(Dialog.Header, null), h(Dialog.Body, {
	        scrollable: false
	      }, h("div", null, h(TextField, {
	        id: "title-field",
	        label: "Title",
	        value: this.state.object.title,
	        onInput: this.updateObjectTitle,
	        maxlength: "30"
	      })), !this.state.isWeek && h("div", null, h(TextField, {
	        id: "description-field",
	        textarea: true,
	        label: "Description",
	        value: this.state.object.description,
	        onInput: this.updateObjectDescription,
	        maxlength: "400"
	      })), this.state.isNode && h("div", null, h(Select, {
	        id: "work-classification-field",
	        hintText: "Select a work classification",
	        selectedIndex: this.state.object.work_classification,
	        onChange: this.updateObjectWorkClassification
	      }, h(Select.Item, {
	        value: "1"
	      }, "Individual Work"), h(Select.Item, {
	        value: "2"
	      }, "Work in Groups"), h(Select.Item, {
	        value: "3"
	      }, "Whole Class"))), this.state.isNode && h("div", null, h(Select, {
	        id: "activity-classification-field",
	        hintText: "Select an activity classification",
	        selectedIndex: this.state.object.activity_classification,
	        onChange: this.updateObjectActivityClassification
	      }, h(Select.Item, {
	        value: "1"
	      }, "Gather Information"), h(Select.Item, {
	        value: "2"
	      }, "Discuss"), h(Select.Item, {
	        value: "3"
	      }, "Solve"), h(Select.Item, {
	        value: "4"
	      }, "Analyze"), h(Select.Item, {
	        value: "5"
	      }, "Assess/Review Papers"), h(Select.Item, {
	        value: "6"
	      }, "Evaluate Peers"), h(Select.Item, {
	        value: "7"
	      }, "Debate"), h(Select.Item, {
	        value: "8"
	      }, "Game/Roleplay"), h(Select.Item, {
	        value: "9"
	      }, "Create/Design"), h(Select.Item, {
	        value: "10"
	      }, "Revise/Improve"), h(Select.Item, {
	        value: "11"
	      }, "Read"), h(Select.Item, {
	        value: "12"
	      }, "Write"), h(Select.Item, {
	        value: "13"
	      }, "Present"), h(Select.Item, {
	        value: "14"
	      }, "Experiment/Inquiry"), h(Select.Item, {
	        value: "15"
	      }, "Quiz/Test"), h(Select.Item, {
	        value: "16"
	      }, "Other")))), h(Dialog.Footer, null, h(Dialog.FooterButton, {
	        id: "cancel-button",
	        cancel: true,
	        onClick: this.onClose
	      }, "Cancel"), h(Dialog.FooterButton, {
	        id: "submit-button",
	        accept: true,
	        disabled: !this.state.object.title && this.state.isWeek || (!this.state.object.title || !this.state.object.description) && !this.state.isWeek || this.state.isNode && (!this.state.object.work_classification || !this.state.object.activity_classification),
	        raised: true,
	        onClick: this.onSubmit
	      }, "Update")))), h(Snackbar, {
	        ref: snack => {
	          this.snack = snack;
	        }
	      }));
	    } else {
	      return h("div", null, h(Dialog //  style="padding: 0; border: 0; width: 0;"
	      , {
	        ref: dlg => {
	          this.dlg = dlg;
	        }
	      }, h("form", {
	        class: "creation-form"
	      }, h(Dialog.Header, null), h(Dialog.Body, {
	        scrollable: false
	      }, this.state.isProgramLevelComponent && h("div", null, h(Select, {
	        id: "component-field",
	        hintText: "Select a node type",
	        onChange: this.updateObjectType
	      }, h(Select.Item, {
	        value: "course"
	      }, "Course"), h(Select.Item, {
	        value: "assesment"
	      }, "Assesment"))), this.state.isCourseLevelComponent && h("div", null, h(Select, {
	        id: "component_field",
	        hintText: "Select a node type",
	        onChange: this.updateObjectType
	      }, h(Select.Item, {
	        value: "activity"
	      }, "Activity"), h(Select.Item, {
	        value: "assesment"
	      }, "Assesment"), h(Select.Item, {
	        value: "artifact"
	      }, "Artifact"), h(Select.Item, {
	        value: "preparation"
	      }, "Preparation"))), h("div", null, h(TextField, {
	        id: "title-field",
	        label: "Title",
	        value: this.state.objectToBe.title,
	        onInput: this.updateObjectToBeTitle,
	        maxlength: "30"
	      })), !this.state.isWeek && h("div", null, h(TextField, {
	        id: "description-field",
	        textarea: true,
	        label: "Description",
	        value: this.state.objectToBe.description,
	        onInput: this.updateObjectToBeDescription,
	        maxlength: "400"
	      })), this.state.isNode && h("div", null, h(Select, {
	        id: "work-classification-field",
	        hintText: "Select a work classification",
	        selectedIndex: this.state.objectToBe.work_classification,
	        onChange: this.updateObjectToBeWorkClassification
	      }, h(Select.Item, {
	        value: "1"
	      }, "Individual Work"), h(Select.Item, {
	        value: "2"
	      }, "Work in Groups"), h(Select.Item, {
	        value: "3"
	      }, "Whole Class"))), this.state.isNode && h("div", null, h(Select, {
	        id: "activity-classification-field",
	        hintText: "Select an activity classification",
	        selectedIndex: this.state.objectToBe.activity_classification,
	        onChange: this.updateObjectToBeActivityClassification
	      }, h(Select.Item, {
	        value: "1"
	      }, "Gather Information"), h(Select.Item, {
	        value: "2"
	      }, "Discuss"), h(Select.Item, {
	        value: "3"
	      }, "Solve"), h(Select.Item, {
	        value: "4"
	      }, "Analyze"), h(Select.Item, {
	        value: "5"
	      }, "Assess/Review Papers"), h(Select.Item, {
	        value: "6"
	      }, "Evaluate Peers"), h(Select.Item, {
	        value: "7"
	      }, "Debate"), h(Select.Item, {
	        value: "8"
	      }, "Game/Roleplay"), h(Select.Item, {
	        value: "9"
	      }, "Create/Design"), h(Select.Item, {
	        value: "10"
	      }, "Revise/Improve"), h(Select.Item, {
	        value: "11"
	      }, "Read"), h(Select.Item, {
	        value: "12"
	      }, "Write"), h(Select.Item, {
	        value: "13"
	      }, "Present"), h(Select.Item, {
	        value: "14"
	      }, "Experiment/Inquiry"), h(Select.Item, {
	        value: "15"
	      }, "Quiz/Test"), h(Select.Item, {
	        value: "16"
	      }, "Other")))), h(Dialog.Footer, null, h(Dialog.FooterButton, {
	        id: "cancel-button",
	        cancel: true,
	        onClick: this.onClose
	      }, "Cancel"), h(Dialog.FooterButton, {
	        id: "submit-button",
	        accept: true,
	        disabled: !this.state.objectToBe.title && this.state.isWeek || (!this.state.objectToBe.title || !this.state.objectToBe.description) && !this.state.isWeek || this.state.isNode && (!this.state.objectToBe.work_classification || !this.state.objectToBe.activity_classification) || (this.state.isProgramLevelComponent || this.state.isCourseLevelComponent) && !this.state.objectType,
	        raised: true,
	        onClick: this.onSubmit
	      }, "Create")))), h(Snackbar, {
	        ref: snack => {
	          this.snack = snack;
	        }
	      }));
	    }
	  }

	}
	$.ajaxSetup({
	  beforeSend: function beforeSend(xhr, settings) {
	    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
	      xhr.setRequestHeader("X-CSRFToken", getCsrfToken());
	    }
	  }
	});

	function csrfSafeMethod(method) {
	  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);
	}

	function getCsrfToken() {
	  return document.getElementsByName("csrfmiddlewaretoken")[0].getAttribute("value");
	}

	function deleteNode(component) {
	  $.post(window.location.origin + "/course-flow/dialog-form/delete", {
	    objectID: JSON.stringify(component.state.object.id),
	    objectType: JSON.stringify(component.state.objectType)
	  }).done(function (data) {
	    if (data.action == "posted") {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnSuccess
	      });
	    } else {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnFailure
	      });
	    }
	  }).fail(function (data) {
	    component.snack.MDComponent.show({
	      message: component.props.snackMessageOnFailure
	    });
	  });
	}

	function updateNode(component) {
	  $.post(window.location.origin + "/course-flow/dialog-form/update", {
	    object: JSON.stringify(component.state.object),
	    objectID: JSON.stringify(component.state.object.id),
	    objectType: JSON.stringify(component.state.objectType)
	  }).done(function (data) {
	    if (data.action == "posted") {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnSuccess
	      });
	    } else {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnFailure
	      });
	    }
	  }).fail(function (data) {
	    component.snack.MDComponent.show({
	      message: component.props.snackMessageOnFailure
	    });
	  });
	} //post new node


	function createNode(component) {
	  $.post(window.location.origin + "/course-flow/dialog-form/create", {
	    object: JSON.stringify(component.state.objectToBe),
	    objectType: JSON.stringify(component.state.objectType),
	    parentID: JSON.stringify(component.state.parentID),
	    isProgramLevelComponent: JSON.stringify(component.state.isProgramLevelComponent)
	  }).done(function (data) {
	    if (data.action == "posted") {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnSuccess
	      });
	    } else {
	      component.snack.MDComponent.show({
	        message: component.props.snackMessageOnFailure
	      });
	    }
	  }).fail(function (data) {
	    component.snack.MDComponent.show({
	      message: component.props.snackMessageOnFailure
	    });
	  });
	}

	exports.currentComponentInstance = null;
	function injectDialogForm(snackMessageOnSuccess, snackMessageOnFailure) {
	  if (document.body.contains(document.getElementById("node-form-container"))) {
	    E(h(DialogForm, {
	      snackMessageOnSuccess: snackMessageOnSuccess,
	      snackMessageOnFailure: snackMessageOnFailure
	    }), document.getElementById("node-form-container"));
	  }
	}

	exports.DialogForm = DialogForm;
	exports.injectDialogForm = injectDialogForm;

	return exports;

}({}));
